This is ctalk.info, produced by makeinfo version 6.5 from ctalk.texi.

INFO-DIR-SECTION Ctalk
START-INFO-DIR-ENTRY
* ctalk: (ctalk).	The Ctalk language reference manual.
END-INFO-DIR-ENTRY

This file documents Ctalk version 0.0.65.

Copyright (C) 2007-2015 Robert Kiesling

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled, "GNU
Free Documentation License."


File: ctalk.info,  Node: C,  Next: Copying,  Prev: Methods,  Up: Top

Ctalk Language Features
=======================

This section describes 'ctalk''s C language features and its low-level
application programming interface.

* Menu:

* Preprocessor::        Compatibility with 'cpp'.
* C statements::        How to use objects and C in the same programs.
* Externs::             Working with multiple input files.
* Class casting::       How to tell Ctalk which class an object is.
* Control structures::  Objects in loops and conditional statements.
* OBJECT typedef::      Ctalk's 'OBJECT' type.
* Attributes::          Attributes help identify an object's context.
* C library functions:: How to use objects with C library functions.
* GNU tools::           Using automake, etc., with Ctalk programs.


File: ctalk.info,  Node: Preprocessor,  Next: C statements,  Up: C

'ctpp,' the 'ctalk' Preprocessor
--------------------------------

Information about 'ctpp', the Ctalk preprocessor, is contained in its
Texinfo manual, 'ctpp.info'.

The preprocessor is compatible with GNU 'cpp' and supports ISO C99
preprocessing features.  This allows you to include C header files in
Ctalk programs and class libraries.  Ctalk caches macros from include
files, so it can use, in the GNU compiler's terminology, _include once_
header files.

If you have a header file called, for example, 'myheader.h', you would
wrap the definitions with the following preprocessor directives.


     #ifndef _MYHEADER_H
     #define _MYHEADER_H
     .
     . <Your definitions appear here.>
     .
     #endif /* _MYHEADER_H */

This makes certain that the preprocessor defines macros, data types, and
other library definitions only once, no matter how many times the input
includes the header file.


File: ctalk.info,  Node: C statements,  Next: Externs,  Prev: Preprocessor,  Up: C

Pragmas
-------

Ctalk recognizes GCC, G++, and C99 pragmas.

Pragmas that apply to floating point operations and code generation are
ignored and elided, unless the '--keeppragmas' command line option is
given.  *Note Invoking::.

Inclusion of a file that contains G++ pragmas causes the preprocessor to
issue a warning if the '-v' option is given, and 'ctalk' ignores the
file.  *Note Invoking::.

Here is the effect of the GCC and C99 pragmas.

'#pragma interface'
'#pragma implementation'
     The include file is not processed.

'#pragma GCC dependency FILE'
     Issues a warning if the source file is more recent than FILE.

'#pragma GCC poison IDENTIFIER ...'
     'ctalk' issues an error and discontinues processing if the source
     file contains an identifier given as an argument.

'#pragma GCC system header'
     The 'ctalk' preprocessor processes all input files in the same
     manner and ignores this pragma.

'#pragma GCC pack'
'#pragma STDC FP_CONTRACT'
'#pragma STDC FENV_ACCESS'
'#pragma STDC CX_LIMITED_RANGE'
     'ctalk' ignores and elides these pragmas, which apply to floating
     point and code generation options, unless the '--keeppragmas'
     option is used.  *Note Invoking::.

C Expressions
-------------

In version 0.0.65, you can use simple constant expressions as receivers,
as in this example.

     printf ("%s", "/home/users/joe" subString 1, self length - 1);

_Warning_ - This use of 'self' is experimental in version 0.0.65 and
should be used with caution.

You can use a C constant in place of any receiver whose class
corresponds to a basic C data type.  These classes include 'Character',
'String', 'Float', 'Integer', and 'LongInteger'.

Expressions like the following work.
     if (99 == myInt)
      ...

     if ('c' == myInt asCharacter)
      ...

     if (3.1416 == pi)
      ...

The following code examples are equivalent.

     myString = "This is a string.";
     printf ("%d\n", myString length);

and,

     printf ("%d\n", "This is a string" length);

However, if you try to use a C variable on the left side of a method
that overloads a C operator, the expression might simply be interpreted
as C code, as in this example.

       String new progName;

       progName = "myprog";

       if (argv[0] == progName) {
         ...
       }

This is because Ctalk does not interpret 'argv[0]' as a receiver object,
and then interprets '==' as a C operator.

Objects in Function Parameters
------------------------------

Programs cannot, at this time, use objects as parameters to C functions.
If you need to use an object as a parameter, you need to use a method
instead of a function, or translate the object's value to C. *Note
Translating::.

Objects in Function Arguments
-----------------------------

You can use of Ctalk expressions as C function arguments, but the values
should be treated as read-only, as in this example.

     Integer new myIndex;
     char buf[255];

     myIndex = 0;

     /*
      *   This statement works correctly.
      */
     sprintf (buf, "%d", __ctalk_to_c_int (myIndex));

     /*
      *   This statement does not work correctly.
      */
     sscanf (myString, "%s %s", mySubString1, mySubString2);

If you need to read a string into objects, try 'readFormat' (class
'String') instead.

If you receive an 'Unimplemented C type' warning, it means that Ctalk
does not implement a class that corresponds to the data type.  In these
cases, you can generally assign the C variable to an instance of class
'Symbol,' and use that as the argument to a function.

The Classes that implement C data types are described in the next
section.

C Data Type Classes
-------------------

These classes correspond to the basic C types.

'Array'
     'char **'

'Character'
     'char'

'Float'
     'float' and 'double'

'Integer'
     'int' and 'long int'

'LongInteger'
     'long long int'

'String'
     'char *'

Typedefs in Function Arguments
------------------------------

Ctalk resolves many of the derived types defined in C99, as well as
incomplete types; however, variables that are of derived types can still
cause unpredictable results, if the variable is of an unusual or complex
type.

If you encounter a case where a derived type confuses the parser or
run-time library, the workaround is to declare the type as an equivalent
C type.  For example, if a variable is of type 'time_t,' you could
equivalently declare it as type 'long long int.'

C Functions in Complex Expressions
----------------------------------

You can use C functions in complex expressions within conditionals, as
in this example.
     int int_fn1 (void) {
       return 10;
     }

     char *add_int_fn_as_string (int a, int b, int c) {
       static char buf[30];
       sprintf (buf, "%d", a + b + c);
       return buf;
     }

     int main () {

       String new myString1;

       if ((myString1 = add_int_fn_as_string (int_fn1 (), 20, 30)) != "60")
         exit(1);

       printf ("%s\n", myString1);

     }
As long as your function returns one of the C data types 'int, char,
char *,' or 'double,' Ctalk can translate the function output to an
object, as well as call the function at run time using a method call.

If you try to use a C function that returns a complex or derived type,
Ctalk prints a warning and uses 'Integer' as the default return class.
In these cases, you should consider writing a method instead.

_Note:_ When you use functions in complex expressions, the function's
arguments must also be C variables or expressions.  If you want to use
objects as the arguments to a function, then you must perform the
object-to-C translation manually.

Debugging
---------

Object Inspectors
.................

Ctalk provides a basic set of methods that can inspect and print the
contents of objects.

The 'inspect' method in 'Object' class is an interactive utility that
lets you examine a program's objects as the program is running.

To inspect an object, simply send it the message, 'inspect' - it's a
shortcut for the 'inspect' method in 'ObjectInspector' class, which a
program can also call directly.


     String new globalString;

     int main () {
       Integer new i;

       globalString = "global string";

       i inspect;
     }


In either case, the program stops execution when it reaches the
'inspect' method, and presents a prompt where you can type commands.

Here's a transcript of a brief inspector session.


     $ ./inspect
     > p
     p
     name:       i
     class:      Integer (0x48bf4958)
     superclass: Magnitude (0x48bf29f0)
     value:      (null) (Integer)

     > p g globalString
     p g globalString
     name:       globalString
     class:      String (0x48cce8d0)
     superclass: Character (0x48c8acc0)
     value:      global string (String)

     > c
     c
     $


At the inspector prompt, '> ', the command 'p' prints the inspector's
receiver object, and 'p g globalString' prints the named global object,
'globalString'.  The 'c' command exits the inspector and continues
running the program.

There are several commands that the inspector recognizes.  Typing '?,'
'h,' or 'help' at the prompt displays a list of them.

The inspector uses the method 'formatObject' to print the contents of
individual objects.

If you want to print a formatted object directly, without stopping the
program, Ctalk also has the method 'dump' in 'Object' class, which
simply calls 'formatObject' with its receiver object to print the object
and then returns so the program can continue running.

Using 'gdb' for Debugging
.........................

The GNU 'gdb' debugger allows you to trace through Ctalk applications as
well as the compiler and the run-time libraries, at the level of Ctalk's
source code.

In order to debug Ctalk programs with 'gdb', the source must be
compatible with the debugger; that means that you can debug Ctalk
programs using the intermediate C code to get source level debugging
within Ctalk apps.

You can also examine the contents of objects and their run-time
environment with the 'inspect' method (in 'Object' class), which doesn't
use line number information.  *Note Object_inspect::.  There's a
tutorial on using object inspectors in the 'ctalktools' Texinfo manual,
and yet more information in the 'inspect.3ctalk' manual page.

The '-P' command line option disables line numbering.  You can then
debug the intermediate output, which is normal C that 'gdb' can
interpret correctly.

This means that method line numbers are calculated from the start of all
of the input, which includes all other classes and header files.  So
when you give the '-P' option to Ctalk, it reports the line if possible,
although without line number information, the compiler can't track line
numbers of preprocessor output; like for example, by adjusting line
numbers after including a file with the '#include' directive.

The 'ctdb' command builds Ctalk programs with the correct arguments for
debugging.  Then you can use 'gdb' to debug the program.

     $ ctdb -k myprog.c -o myprog

If you need to debug either 'ctalk' or the 'libctalk' library, then you
need to build and install Ctalk without optimization.  You can do that
by adding the '--without-optimization' option to 'configure' when
building Ctalk.  Compiler optimization often removes lines of code (and
variables) from the binary, so the output often doesn't correspond to
the source code.  Also, it often helps to add the
'--without-inline-functions' option to 'configure'.


     $ ./configure --without-inline-functions --without-optimization


Then build and install Ctalk with 'make' and 'make install.'

Ctalk also provides other build options.  Typing
     $ ./configure --help
at the shell prompt prints a list of them.

Ctalk is compatible at the machine code level with C programs.  That
means you use most of 'gdb's' functions, like peek into a running
program and examine core dumps.  The 'gdb' documentation describes the
debugger's extensive set of options.


File: ctalk.info,  Node: Externs,  Next: Class casting,  Prev: C statements,  Up: C

Externs
-------

Ctalk provides a few facilities to help when compiling code in several
input modules.

There are also a few caveats when dealing with C variables in multiple
input modules, which are described below.

Ctalk allows you to prototype methods.  That is, you can declare a
method in a source code module before compiling another module later
where the method is actually defined.

Prototypes are similar to method declarations, except that the prototype
omits the method body.  For example, a method prototype before the
method is first used would look like this.

     String instanceMethod myLength (void);

You can also define a different return class in the prototype, as in
this example.

     String instanceMethod myLength (void) returnClass Integer;

For example, if the input file module1.ca looks like this:


     String instanceMethod trimStrLength (void) returnObjectClass Integer;

     int main () {

       String new myStr;

       myStr = "Hello, world!";

       printf ("%s\n", myStr subString 0, myStr trimStrLength 2);
     }


and the file module2.ca, which contains the definition of
'trimStrLength', looks like this:


     String instanceMethod trimStrLength (void) {
       returnObjectClass Integer;
       return self length - 1;
     }


Then you can build the program with a command line like the following,
and Ctalk will have the definition of 'trimStringLength' while compiling
module1.ca, before it actually compiles the method in module2.ca.


     $ ctcc module1.ca module2.ca -o myprog


C Variables and 'extern' Declarations
.....................................

When using a global C variable in several input modules, you only need
to declare it once, before it is first used.  Ctalk combines the C code
of all of the input files with one copy of the class libraries, so it
isn't necessary to declare a C variable in the first module and then
declare it as extern in the modules that get compiled later.


File: ctalk.info,  Node: Class casting,  Next: Control structures,  Prev: Externs,  Up: C

Class casting
-------------

In many cases, it's obvious which class an object is, even when the
object's defition is removed from the place where a program needs to
perform an operation on it, or the object is aliased to 'self' or to a C
variable, or you need to use a different type of language semantics with
an object.

If a program has a set of expressions, as in this hypothetical example:


     Integer new myInt;
     myList new myList;
     Key new myKey;
     Symbol new *intPtr;

     *intPtr = Integer new "Int 1", "1";
     myList push *intPtr;
     *intPtr = Integer new "Int 2", "2";
     myList push *intPtr;

     myKey = myList + 1;

     myInt = *myKey;

     myInt += 3;

     _... do stuff with myInt ..._

     myList map {
       printf ("%d\n", self value);
     }


When run, the program would produce output like this.


     $ ./myProg
     1
     2


That's because the changes to 'myInt' would not take effect for the
member of 'myList', because 'Integer' objects, when a program assigns
values to them, normally assigns the value of one 'Integer' to another.
However, in the example above, you might want to work on the original
list member - that is, you want the assignment to treat 'myInt' as if it
were a reference.

One way to notify Ctalk of this is to use an 'Object' to refer to the
list element, and use a _class cast_ to notify Ctalk that the 'Object'
is actually an 'Integer'.

Then the program example above looks like this.


     Object new myIntObject;
     myList new myList;
     Key new myKey;
     Symbol new *intPtr;

     *intPtr = Integer new "Int 1", "1";
     myList push *intPtr;
     *intPtr = Integer new "Int 2", "2";
     myList push *intPtr;

     myKey = myList + 1;

     myIntObject = *myKey;

     (Integer *)myIntObject += 3;  /* The cast tells Ctalk to treat myIntObject,
                                      which is declared as an Object,
                                      as an Integer, so it can work correctly
                                      with the first element of myList. */

     _... do stuff with myIntObject ..._

     myList map {
       printf ("%d\n", self value);
     }


Other places that you can use class casting is when a program uses a C
'OBJECT *'.  In that case, you can tell Ctalk what class the object is.
Here's an abbreviated example from a 'map' method in 'TreeNode' class.


       OBJECT *t, *list_elem;

       /* rcvr_obj is a TreeNode object. */
       for (t = __LIST_HEAD(rcvr_obj), have_break = NULL;
            t && !have_break; t = t -> next) {
         list_elem = obj_ref_str ((t -> instancevars) ?
     			     t -> instancevars -> __o_value :
     			     (IS_VALUE_INSTANCE_VAR(t) ?
     			      t -> __o_p_obj -> instancevars -> __o_value :
     			      "0x0"));

       _... do stuff ..._

       (TreeNode *)list_elem children __mapChildren methodfn;

       (TreeNode *)list_elem siblings __mapSiblings methodfn;

       }

This is a convenient way for a program to tell Ctalk that 'list_elem' is
a 'TreeNode' object.  It's up to the program to ensure that the C
variable actually does point to an object of that class, or the program
won't work correctly at run time.

Programs can also cast 'self' to a class, in cases where Ctalk cannot
determine 'self's' class from its context, like in this example


     myList map {

       (Float *)self = 0.01f;

     }


This feature is still experimental, and you should use it with caution;
in particular, it's up to the program to insure that the object actually
is a member of the class that you cast it to.  However, on the occasions
when a program needs to excercise some control over a set of
expressions' semantics, then class casting can be useful.


File: ctalk.info,  Node: Control structures,  Next: OBJECT typedef,  Prev: Class casting,  Up: C

Control Structures
------------------

Generally, Ctalk objects work the same as C variables when they appear
in 'if', 'for', 'while', 'switch', and 'do-while' statements.

If Ctalk cannot figure out a way to resolve an expression that contains
both C variables or functions and objects, it will try to warn you.

One exception to these rules are the methods that perform logical
negation operator, which generally overload the '!' math operator.  When
you place a '!' operator at the beginning of a conditional, Ctalk checks
whether the class of the expression's result overloads the operator.  In
that case, Ctalk treats '!' as a method.  If a class does not overload
the operator, then Ctalk treats it as a C operator.

That way, you can overload '!' in classes that define complex objects,
which provides a flexible way to determine if an object has been
initialized or contains valid data.

For example, in 'X11Font' class, you can overload the '!' operator to
check whether or not an object's 'fontId' instance variable is zero to
determine whether or not the object refers to a valid font.

If a class doesn't overload '!', then Ctalk uses the C semantics for the
operator - that is, it simply checks whether an operand is zero (or
NULL) or non-zero, and inverts the logical true or false value of the
operand.

In addition, Ctalk provides many methods to iterate over collections of
objects.  These methods include 'map', 'mapInstanceVariables',
'mapClassVariables', and overloaded math operators like those in 'Key'
class.

For a complete description of the control structures Ctalk uses, refer
to the 'Ctalk Tutorial'.


File: ctalk.info,  Node: OBJECT typedef,  Next: Attributes,  Prev: Control structures,  Up: C

'OBJECT' typedef
================

At the lowest level, ctalk declares objects as pointers to an 'OBJECT'
struct.  You can access an object's members if you assign an object's
value to a C variable of the type 'OBJECT *', as in this example.

     Object new myObject;
     OBJECT *myObjectValue;

     myObjectValue = myObject value;

     if (!strcmp (myObjectValue -> CLASSNAME, "Object"))
        printf ("myObjectValues class is, \"Object.\"\n");

The declaration of the OBJECT type is contained in 'include/object.h'.

     typedef struct _object OBJECT;
     . . .
     struct _object {
       char sig[16];
       char __o_name[MAXLABEL];
       char __o_classname[MAXLABEL];
       OBJECT *__o_class;
       char __o_superclassname[MAXLABEL];
       OBJECT *__o_superclass;
       OBJECT *__o_p_obj;
       VARTAG *__o_vartags;
       char *__o_value;
       METHOD *instance_methods,
         *class_methods;
       int scope;
       int nrefs;
       int attrs
       struct _object *classvars;
       struct _object *instancevars;
       struct _object *next;
       struct _object *prev;
     };

Note that '__o_name', '__o_classname', '__o_superclassname', and
'__o_value' are all 'char *', even if the object belongs to a class like
'Integer' or 'Float'.  The struct members '__o_class' and
'__o_superclass' contain pointers to the library class and superclass
entries, which are also objects.

For numeric classes, the 'value' member contains a formatted
representation of a numeric value.  Examples of directly assigning
values to objects are given in the section about writing methods.  *Note
Method API::.

Ctalk uses the members 'instance_methods,' 'class_methods,' 'classvars'
for class objects.

The 'sig' member contains a numeric stamp that verifies that the 'OBJECT
*' refers to a valid object.

The 'scope' member describes an object's scope.  The scope can be one of
'GLOBAL_VAR', 'LOCAL_VAR', 'ARG_VAR', 'RECEIVER_VAR', 'PROTOTYPE_VAR',
or 'BLOCK_VAR.'

The 'nrefs' member keeps track of the number of references that exist to
an object at run time.  Every time ctalk creates a reference to an
object, internally ctalk increments 'nrefs'.  When ctalk deletes a
reference, it decrements 'nrefs'.  When 'nrefs' drops to zero, 'ctalk'
deletes the object.

The 'attrs' member is a combination of one or more object attributes.
The next section describes object attributes in more detail.

The 'tag' member is an abbreviation for the '__o_vartags -> tag ->
var_decl -> name' member; that is, the object's primary label.


File: ctalk.info,  Node: Attributes,  Next: C library functions,  Prev: OBJECT typedef,  Up: C

Object Attributes
-----------------

The Ctalk API defines a number of object attributes.  The attributes
help identify the context that the object appears in.  Many of the
attributes are only meaningful internally; some are also useful in the
method API.

The attributes are defined in 'ctalkdefs.h', which you can include in
class libraries.  To set an object's attribute, it's generally
convenient to use the '__ctalkSetObjectAttr ()' library function, which
has the prototype:


     __ctalkSetObjectAttr (OBJECT *OBJECT, int ATTR)


Many attributes are only used by Ctalk internally.  The attributes that
are useful in methods are defined in 'ctalkdefs.h'.  Those attributes,
and their values and uses, are listed here.

'OBJECT_IS_VALUE_VAR (1 << 0)'
     The object is the 'value' instance variable of its parent object.
'OBJECT_VALUE_IS_C_CHAR_PTR_PTR (1 << 1)'
     Used to indicate that an object refers to a 'char **' C array.
'OBJECT_IS_NULL_RESULT_OBJECT (1 << 2)'
     Indentifies an object that is created when an operation produces a
     NULL result.
'OBJECT_HAS_PTR_CX (1 << 3)'
     Set when an object appears on the left-hand side of an equation
     with a pointer reference; e.g.,

          *mySymbol = __ctalk_self_internal ().


'OBJECT_IS_GLOBAL_COPY (1 << 4)'
     Set when a program copies a global object.

'OBJECT_IS_I_RESULT (1 << 5)'
     Identifies temporary objects that are the result of an operation
     that sets the object tag's pointer references.

'OBJECT_IS_STRING_LITERAL (1 << 6)'
     Used to identify an object created to represent a string literal.

'OBJECT_IS_MEMBER_OF_PARENT_COLLECTION (1 << 7)'
     Indicates that an object (generally a 'Key' object) is a member of
     a parent collection.  Normally used to identify individual
     collection members.

'OBJECT_HAS_LOCAL_TAG (1 << 8)'
     Indicates that an object's tag was created as a placeholder for an
     ad-hoc object; for example, objects created by a 'basicNew' method.
     The local tag is not necessarily the primary tag - the object can
     also acquire other tags when being assigned.  Normally this
     attribute is set by the '__ctalkAddBasicNewTag ()' library
     function.

'OBJECT_IS_DEREF_RESULT'
     Set by the 'Object : ->' method.  The attribute is used to indicate
     that the receiver of '->' is the result of a previous call to '->';
     i.e., the expression contains several dereference operators; for
     example, 'myObject -> instancevars -> __o_value'.


File: ctalk.info,  Node: C library functions,  Next: GNU tools,  Prev: Attributes,  Up: C

C Library Functions
-------------------

You can assign the result of a C library function to a Ctalk object,
provided that the return type of the function has a corresponding Ctalk
class.

All C functions must have prototypes.  The library functions in this
section already have their prototypes defined in the C library headers.
If a function in a program does not have a prototype, Ctalk prints an
error and exits.

Generally, if Ctalk has a method that is analogous to a C library
function, you can use the method with Ctalk objects, although in many
cases you can mix objects and C variables.  Of course, you can still use
any C library function with C data types.

There are some incompatibilities with more specialized libraries.  For
example, you should take care when using the X Window System Xt widgets
in Ctalk programs, because the widget classes use the some of the same
class names as the Ctalk library.

The following sections describe the C library functions that Ctalk can
use directly.

* Menu:

* abs::
* acos::
* acosh-asinh-atanh::
* asctime::
* asin::
* atexit::
* atof::
* atoi::
* atol::
* atoll::
* calloc::
* cbrt::
* ceil::
* chdir::
* clock::
* copysign::
* cos::
* cosh::
* ctime::
* difftime::
* erf::
* erfc::
* exp::
* expm1::
* fabs::
* fclose::
* fegetround::
* feholdexcept::
* feof::
* ferror::
* fesetround::
* fetestexcept::
* fflush::
* fgetc::
* fgetpos::
* fgets::
* floor::
* fmod::
* fopen::
* fprintf::
* fputc::
* fputs::
* fread::
* free::
* freopen::
* frexp::
* fscanf::
* fseek::
* fsetpos::
* fstat::
* ftell::
* fwrite::
* getc::
* getchar::
* getcwd::
* getenv::
* getpid::
* gmtime-localtime::
* index-function::
* isalnum-isxdigit::
* labs::
* llabs::
* llrint::
* llround::
* log::
* log10::
* log1p::
* lrint::
* lround::
* malloc::
* memchr::
* memcmp::
* memcpy::
* memmove::
* memset::
* mkdir::
* modf::
* nearbyint::
* perror::
* pow::
* printf::
* raise::
* rand::
* realloc::
* remove::
* rename::
* rindex::
* rint::
* rmdir::
* round::
* scanf::
* sin::
* sinh::
* snprintf::
* sprintf::
* sqrt::
* srand::
* sscanf::
* strcat-strcpy::
* strchr::
* strcoll::
* strspn::
* strerror::
* strftime::
* strlen::
* strncat-strncpy::
* strpbrk::
* strrchr::
* strstr::
* strtod::
* strtok::
* strtoll::
* strxfrm::
* system::
* tan::
* tanh::
* tmpnam::
* tolower::
* toupper::
* trunc::
* ungetc::
* vfprintf::
* vfscanf::
* vprintf::
* vscanf::
* vsnprintf::
* vsprintf::
* vsscanf::


File: ctalk.info,  Node: abs,  Next: acos,  Up: C library functions

'abs' Function
--------------


     #include <stdlib.h>

     Integer new i;

     i = abs (3);



File: ctalk.info,  Node: acos,  Next: acosh-asinh-atanh,  Prev: abs,  Up: C library functions

'acos' Function
---------------


     #include <math.h>

     Integer new i;

     i = acos (0.5);


Ctalk does not check if the argument is outside the range -1 to 1 and
does not check for an error.  Refer to the, 'acos', manual page.


File: ctalk.info,  Node: acosh-asinh-atanh,  Next: asctime,  Prev: acos,  Up: C library functions

'acosh,' 'asinh,' and 'atanh' Functions
---------------------------------------


     #include <math.h>

     Float new myFloat;

     myFloat = acosh (2.0);


Ctalk does not check the range of the arguments or errors.  Refer to
the, 'acosh(3), asinh(3),' and 'atanh(3)' manual pages.


File: ctalk.info,  Node: asctime,  Next: asin,  Prev: acosh-asinh-atanh,  Up: C library functions

'asctime' Function
------------------


     #include <time.h>

     time_t t;
     struct tm *time_struct;
     String new s;

     time (&t);
     time_struct = localtime (&t);
     s = asctime (time_struct);


_Note:_ Ctalk does not have a class corresponding to a 'struct tm *.' An
explicit assignment of a 'struct tm *' to a 'Symbol' passes the address
to 'asctime.' *Note Objects in Function Arguments::.


File: ctalk.info,  Node: asin,  Next: atexit,  Prev: asctime,  Up: C library functions

'asin' Function
---------------

     #include <math.h>

     Float new f;

     f = asin (0.5);

Note that ctalk does not perform any range checking of the argument.


File: ctalk.info,  Node: atexit,  Next: atof,  Prev: asin,  Up: C library functions

'atexit' Function
-----------------

     #include <stdlib.h>

     Integer new i;

     i = atexit (exitfunc);



File: ctalk.info,  Node: atof,  Next: atoi,  Prev: atexit,  Up: C library functions

'atof' Function
---------------

     #include <stdlib.h>

     Float new pi;

     pi = atof ("3.1416");


File: ctalk.info,  Node: atoi,  Next: atol,  Prev: atof,  Up: C library functions

'atoi' Function
---------------

     #include <stdlib.h>

     Integer new i;

     i = atoi ("35");


File: ctalk.info,  Node: atol,  Next: atoll,  Prev: atoi,  Up: C library functions

'atol' Function
---------------

     #include <stdlib.h>

     Integer new i;

     i = atol ("35");

Note that, 'Integer', class corresponds to the C types, 'int', and,
'long int'.


File: ctalk.info,  Node: atoll,  Next: calloc,  Prev: atol,  Up: C library functions

'atoll' Function
----------------

#include <stdlib.h>

LongInteger new i;

i = atoll ("35");

_Note:_ The 'atoll(3)' function is not implemented by the OS X or DJGPP
C libraries.  Use 'atol(3)', 'strtoll(3)', or a method instead.


File: ctalk.info,  Node: calloc,  Next: cbrt,  Prev: atoll,  Up: C library functions

'calloc' Function
-----------------

     #include <stdlib.h>

     Integer new n;
     Integer new size;
     int *intbuf;

     n = 10;
     size = sizeof (int);

     intbuf = calloc (n, size);


File: ctalk.info,  Node: cbrt,  Next: ceil,  Prev: calloc,  Up: C library functions

'cbrt' Function
---------------

#include <math.h>

Float new f;

f = cbrt (9.0);


File: ctalk.info,  Node: ceil,  Next: chdir,  Prev: cbrt,  Up: C library functions

'ceil' Function
---------------

#include <math.h>

Float new f;

f = ceil (3.5);


File: ctalk.info,  Node: chdir,  Next: clock,  Prev: ceil,  Up: C library functions

'chdir' Function
----------------

Integer new result; String new dirName;

dirName = "mySubdir";

result = chdir (mySubdir);


File: ctalk.info,  Node: clock,  Next: copysign,  Prev: chdir,  Up: C library functions

'clock' Function
----------------

     #include <time.h>

     Integer new i;

     i = clock ();


File: ctalk.info,  Node: copysign,  Next: cos,  Prev: clock,  Up: C library functions

'copysign' Function
-------------------

     #include <math.h>

     Float new f;

     f = copysign (3.0, -1.0);


File: ctalk.info,  Node: cos,  Next: cosh,  Prev: copysign,  Up: C library functions

'cos' Function
--------------

     #include <math.h>

     Float new f;

     f = cos (45.0);


File: ctalk.info,  Node: cosh,  Next: ctime,  Prev: cos,  Up: C library functions

'cosh' Function
---------------

     #include <math.h>

     Float new f;

     f = cosh (45.0);


File: ctalk.info,  Node: ctime,  Next: difftime,  Prev: cosh,  Up: C library functions

'ctime' Function
----------------

     #include <time.h>

     time_t t;
     String new s;

     time (&t);
     s = ctime (&t);

_Note:_ There is not a portable way to take the address of an object
with '&', although it may be possible to perform the translation
manually in some cases.  If the argument must be an object, then use the
'cTime' (class 'CTime') method instead.


File: ctalk.info,  Node: difftime,  Next: erf,  Prev: ctime,  Up: C library functions

'difftime' Function
-------------------


     #include <time.h>

     Float new f;

     f = difftime (time1, time0);



File: ctalk.info,  Node: erf,  Next: erfc,  Prev: difftime,  Up: C library functions

'erf' Function
--------------


     #include <math.h>

     Float new f;

     f = erf (0.5);



File: ctalk.info,  Node: erfc,  Next: exp,  Prev: erf,  Up: C library functions

'erfc' Function
---------------


     #include <math.h>

     Float new f;

     f = erfc (0.5);



File: ctalk.info,  Node: exp,  Next: expm1,  Prev: erfc,  Up: C library functions

'exp' Function
--------------


     #include <math.h>

     Float new f;

     f = exp (2);



File: ctalk.info,  Node: expm1,  Next: fabs,  Prev: exp,  Up: C library functions

'expm1' Function
----------------


     #include <math.h>

     Float new f;

     f = expm1 (1.05);



File: ctalk.info,  Node: fabs,  Next: fclose,  Prev: expm1,  Up: C library functions

'fabs' Function
---------------


     #include <math.h>

     Float new f;

     f = fabs (-1.05);



File: ctalk.info,  Node: fclose,  Next: fegetround,  Prev: fabs,  Up: C library functions

'fclose' Function
-----------------


     #include <stdio.h>

     Integer new i;

     i = fclose (fileHandle);



File: ctalk.info,  Node: fegetround,  Next: feholdexcept,  Prev: fclose,  Up: C library functions

'fegetround' Function
---------------------


     #include <fenv.h>

     Integer new i;

     i = fegetround ();



File: ctalk.info,  Node: feholdexcept,  Next: feof,  Prev: fegetround,  Up: C library functions

'feholdexcept' Function
-----------------------


     #include <fenv.h>

     Integer new i;

     i = feholdexcept (fe_envp);



File: ctalk.info,  Node: feof,  Next: ferror,  Prev: feholdexcept,  Up: C library functions

'feof' Function
---------------


     #include <stdio.h>

     Integer new i;

     i = feof (fileStream);



File: ctalk.info,  Node: ferror,  Next: fesetround,  Prev: feof,  Up: C library functions

'ferror' Function
-----------------


     #include <stdio.h>

     Integer new i;

     i = ferror (fileStream);



File: ctalk.info,  Node: fesetround,  Next: fetestexcept,  Prev: ferror,  Up: C library functions

'fesetround' Function
---------------------


     #include <math.h>

     Integer new i;

     i = fesetround (mode);



File: ctalk.info,  Node: fetestexcept,  Next: fflush,  Prev: fesetround,  Up: C library functions

'fetestexcepts' Function
------------------------


     #include <math.h>

     Integer new i;

     i = fetestxcept (exceptions);



File: ctalk.info,  Node: fflush,  Next: fgetc,  Prev: fetestexcept,  Up: C library functions

'fflush' Function
-----------------


     #include <stdio.h>

     Integer new i;

     i = fflush (fileStream);



File: ctalk.info,  Node: fgetc,  Next: fgetpos,  Prev: fflush,  Up: C library functions

'fgetc' Function
----------------


     #include <stdio.h>

     Integer new i;

     i = fgetc (fileStream);



File: ctalk.info,  Node: fgetpos,  Next: fgets,  Prev: fgetc,  Up: C library functions

'fgetpos' Function
------------------


     #include <stdio.h>

     Integer new i;

     i = fgetpos (fileStream, pos);



File: ctalk.info,  Node: fgets,  Next: floor,  Prev: fgetpos,  Up: C library functions

'fgets' Function
----------------


     #include <stdio.h>

     String new s;

     s = fgets (s, s length, fileStream);



File: ctalk.info,  Node: floor,  Next: fmod,  Prev: fgets,  Up: C library functions

'floor' Function
----------------


     #include <math.h>

     Float new f;

     f = floor (3.01);



File: ctalk.info,  Node: fmod,  Next: fopen,  Prev: floor,  Up: C library functions

'fmod' Function
---------------


     #include <math.h>

     Float new f;

     f = fmod (3.0, 2.0);



File: ctalk.info,  Node: fopen,  Next: fprintf,  Prev: fmod,  Up: C library functions

'fopen' Function
----------------


     #include <stdio.h>

     FILE *f

     String new path;
     String new mode;

     path = "/home/user/.profile";
     mode = "r";

     f = fopen (path, mode);



File: ctalk.info,  Node: fprintf,  Next: fputc,  Prev: fopen,  Up: C library functions

'fprintf' Function
------------------

*Note Variable arguments::.


File: ctalk.info,  Node: fputc,  Next: fputs,  Prev: fprintf,  Up: C library functions

'fputc' Function
----------------


     #include <stdio.h>

     Integer new myInput;

     myInput = fgetc (stdin);
     fputc (myInput, stdout);



File: ctalk.info,  Node: fputs,  Next: fread,  Prev: fputc,  Up: C library functions

'fputc' Function
----------------

     #include <stdio.h>

     String new myInput;

     fgets (myInput, 255, stdin);
     fputs (myInput, stdout);


File: ctalk.info,  Node: fread,  Next: free,  Prev: fputs,  Up: C library functions

'fread' Function
----------------

     #include <stdio.h>

     String new myInput;

     myInput = "";

     fread (myInput, 255, sizeof (char), stdin);


File: ctalk.info,  Node: free,  Next: freopen,  Prev: fread,  Up: C library functions

'free' Function
---------------

Do not use 'free' with objects.  Use the '__ctalkDeleteObject' library
function instead.

Also, calling '__objRefCntZero' before '__ctalkDeleteObject' insures
that the object will be completely deleted.  You can do this in two
ways: first, by sending the object a 'delete' message; or by casting the
object to a C 'OBJECT *' and then giving the 'OBJECT *' as an argument
to '__objRefCntZero' and '__ctalkDeleteObject'.

     Object new myObject;
     OBJECT *myObject_alias;

     myObject_aliast = myObject;

     __objRefCntZero (OBJREF (myObject_alias));
     __ctalkDeleteObject (myObject_alias);


File: ctalk.info,  Node: freopen,  Next: frexp,  Prev: free,  Up: C library functions

'freopen' Function
------------------

     #include <stdio.h>

     FILE *f;

     String new path;
     String new mode;

     path = "/home/user/.profile";
     mode = "r";

     f2 = freopen (path, mode, stdin);


File: ctalk.info,  Node: frexp,  Next: fscanf,  Prev: freopen,  Up: C library functions

'frexp' Function
----------------

     #include <math.h>

     int i_exp_val;
     Integer new expInt;
     Float new myFloat;
     Float new myFraction;

     myFloat = "2.5";

     myFraction = frexp (myFloat, &i_exp_val);

     expInt = i_exp_val;


File: ctalk.info,  Node: fscanf,  Next: fseek,  Prev: frexp,  Up: C library functions

'fscanf' Function
-----------------

*Note Variable arguments::.

_Note:_ The C99 standard requires that 'stdin,' 'stdout,' and 'stderr'
should be implemented as macros, which on some systems (notably Solaris)
causes problems with C-to-object translation.  If Ctalk cannot register
these macros as C variables, then either call 'fscanf(3)' C function
with only C variables, or use a method with 'stdoutStream' or
'stderrStream' *Note WriteFileStream::, or 'stdinStream' *Note
ReadFileStream::.


File: ctalk.info,  Node: fseek,  Next: fsetpos,  Prev: fscanf,  Up: C library functions

'fseek' Function
----------------


File: ctalk.info,  Node: fsetpos,  Next: fstat,  Prev: fseek,  Up: C library functions

'fsetpos' Function
------------------

     #include <stdio.h>

     FILE *f;
     String new path;
     String new mode;
     Integer new offset;

     path = "/home/user/.profile.new";
     mode = "r";


     f = fopen (path, mode);

     offset = 0L;

     fsetpos (f, offset);


File: ctalk.info,  Node: fstat,  Next: ftell,  Prev: fsetpos,  Up: C library functions

'fstat' Function
----------------

     #include <sys/types.h>
     #include <sys/stat.h>
     #include <unistd.h>

     String new path;
     Integer new result;
     struct stat statbuf;

     path = "/home/user/.profile";

     result = fstat (path, &statbuf);



File: ctalk.info,  Node: ftell,  Next: fwrite,  Prev: fstat,  Up: C library functions

'ftell' Function
----------------

     #include <stdio.h>

     Integer new filePos;

     filePos = ftell (file);


File: ctalk.info,  Node: fwrite,  Next: getc,  Prev: ftell,  Up: C library functions

'fwrite' Function
-----------------

     #include <stdio.h>

     FILE *f;
     String new path;
     String new mode;
     String new promptLine;

     path = "/home/user/.profile.new";
     mode = "a";

     f = fopen (path, mode);

     promptLine = "PS1=#";

     fwrite (promptLine, promptLine length, sizeof (char), f);


File: ctalk.info,  Node: getc,  Next: getchar,  Prev: fwrite,  Up: C library functions

'getc' Function
---------------

     #include <stdio.h>

     Integer new myInput;

     myInput = getc (stdin);

     printf ("%c", myInput asCharacter);


File: ctalk.info,  Node: getchar,  Next: getcwd,  Prev: getc,  Up: C library functions

'getchar' Function
------------------

     #include <stdio.h>

     Integer new myInput;

     myInput = getchar ();

     printf ("%c", myInput asCharacter);


File: ctalk.info,  Node: getcwd,  Next: getenv,  Prev: getchar,  Up: C library functions

'getcwd' Function
-----------------

     #include <stdio.h>
     String new myString;
     getcwd (myString, FILENAME_MAX);
_Note:_ The argument 'myString' must already be initialized to hold the
entire directory path.  If in doubt, use 'getCwd' (class
'DirectoryStream') instead.  *Note DirectoryStream::.


File: ctalk.info,  Node: getenv,  Next: getpid,  Prev: getcwd,  Up: C library functions

'getenv' Function
-----------------

     String new envPath;

     envPath = getenv ("PATH");

     printf ("%s", envPath);


File: ctalk.info,  Node: getpid,  Next: gmtime-localtime,  Prev: getenv,  Up: C library functions

'getpid' Function
-----------------


File: ctalk.info,  Node: gmtime-localtime,  Next: index-function,  Prev: getpid,  Up: C library functions

'gmtime,' 'localtime' Functions
-------------------------------


File: ctalk.info,  Node: index-function,  Next: isalnum-isxdigit,  Prev: gmtime-localtime,  Up: C library functions

'index' Function
----------------

*Note strchr::.


File: ctalk.info,  Node: isalnum-isxdigit,  Next: labs,  Prev: index-function,  Up: C library functions

'isalnum,' 'isalpha,' 'isascii,' 'isblank,' 'iscntrl,' 'isdigit,' 'isgraph,' 'islower,' 'isprint,' 'ispunct,' 'isspace,' 'isupper,' 'isxdigit' Functions
--------------------------------------------------------------------------------------------------------------------------------------------------------

Ctalk does not support 'ctype.h' macros portably.  Use the corresponding
method of class 'Character' instead.  *Note Character::.

     Ctype.h Macro          Ctalk Method
     -------------          ------------
     isalnum                isAlNum
     isalpha                isAlpha
     isascii                isASCII
     isblank                isBlank
     iscntrl                isCntrl
     isdigit                isDigit
     isgraph                isGraph
     islower                isLower
     isprint                isPrint
     ispunct                isPunct
     isspace                isSpace
     isupper                isUpper
     isxdigit               isXDigit


File: ctalk.info,  Node: labs,  Next: llabs,  Prev: isalnum-isxdigit,  Up: C library functions

'labs' Function
---------------

     #include <stdlib.h>

     Integer new myValue;
     Integer new myAbsValue;

     myAbsValue = labs (myValue);


File: ctalk.info,  Node: llabs,  Next: llrint,  Prev: labs,  Up: C library functions

'llabs' Function
----------------

     #include <stdlib.h>

     LongInteger new myValue;
     LongInteger new myAbsValue;

     myAbsValue = llabs (myValue);


File: ctalk.info,  Node: llrint,  Next: llround,  Prev: llabs,  Up: C library functions

'lrint', 'lrintf', 'lrintl', 'llrint', 'llrintf', 'llrintl' Functions
---------------------------------------------------------------------

     #include <math.h>

     Float new myFloat;
     LongInteger new myLongInt;

     myFloat = 2.5;

     myLongInt = llrint (myFloat);

Consult the manual page for 'lrint(3)', etc., for detailed information
about each function.


File: ctalk.info,  Node: llround,  Next: log,  Prev: llrint,  Up: C library functions

'llround' Function
------------------

     #include <math.h>

     Float new myFloat;
     LongInteger new myLongInt;

     myFloat = 2.5;

     myLongInt = llround (myFloat);


File: ctalk.info,  Node: log,  Next: log10,  Prev: llround,  Up: C library functions

'log' Function
--------------

     #include <math.h>

     Float new myFloat;
     Float new myLog;

     myFloat = 2.5;

     myLog = log (myFloat);


File: ctalk.info,  Node: log10,  Next: log1p,  Prev: log,  Up: C library functions

'log10' Function
----------------

     #include <math.h>

     Float new myFloat;
     Float new myLog;

     myFloat = 2.5;

     myLog = log10 (myFloat);


File: ctalk.info,  Node: log1p,  Next: lrint,  Prev: log10,  Up: C library functions

'log1p' Function
----------------

     #include <math.h>

     Float new myFloat;
     Float new myLog;

     myFloat = 2.5;

     myLog = log1p (myFloat);


File: ctalk.info,  Node: lrint,  Next: lround,  Prev: log1p,  Up: C library functions

'lrint' Function
----------------

     #include <math.h>

     Float new myFloat;
     Integer new myInt;

     myFloat = 2.5;

     myLog = lrint (myFloat);


File: ctalk.info,  Node: lround,  Next: malloc,  Prev: lrint,  Up: C library functions

'lround' Function
-----------------

     #include <math.h>

     Float new myFloat;
     Integer new myInt;

     myFloat = 2.5;

     myLog = lround (myFloat);


File: ctalk.info,  Node: malloc,  Next: memchr,  Prev: lround,  Up: C library functions

'malloc' Function
-----------------

     #include <stdlib.h>

     Integer new size;
     int *intbuf

     size = sizeof (int) * 10;

     memblk = (int *)malloc (size);


File: ctalk.info,  Node: memchr,  Next: memcmp,  Prev: malloc,  Up: C library functions

'memchr' Function
-----------------

     #include <string.h>

     #define BUFLENGTH 1024

     Integer new searchChar;
     Integer new length;
     char buf[BUFLENGTH], *charptr;

     length = BUFLENGTH

     strcpy (buf, "Some text.");

     searchChar = '.';

     charptr = (char *)memchr ((void *)buf, searchChar, length);



File: ctalk.info,  Node: memcmp,  Next: memcpy,  Prev: memchr,  Up: C library functions

'memcmp' Function
-----------------

     #include <string.h>

     #define BUFLENGTH 1024

     Integer new length;
     Integer new result;
     char buf1[BUFLENGTH], buf2[BUFLENGTH];

     length = BUFLENGTH

     strcpy (buf1, "Some text.");
     strcpy (buf2, "Some other text.");

     result = memcmp ((void *)buf1, (void *)buf2, length);



File: ctalk.info,  Node: memcpy,  Next: memmove,  Prev: memcmp,  Up: C library functions

'memcpy' Function
-----------------

     #include <string.h>

     #define BUFLENGTH 1024

     Integer new length;
     Integer new result;
     char buf1[BUFLENGTH], buf2[BUFLENGTH], *charptr;

     length = BUFLENGTH

     strcpy (buf1, "Some text.");

     result = (char *)memcpy ((void *)buf1, (void *)buf2, length);



File: ctalk.info,  Node: memmove,  Next: memset,  Prev: memcpy,  Up: C library functions

'memmove' Function
------------------

     #include <string.h>

     #define BUFLENGTH 1024

     Integer new length;
     Integer new result;
     char buf1[BUFLENGTH], buf2[BUFLENGTH], *charptr;

     length = BUFLENGTH

     strcpy (buf1, "Some text.");

     charptr = (char *)memmove ((void *)buf1, (void *)buf2, length);



File: ctalk.info,  Node: memset,  Next: mkdir,  Prev: memmove,  Up: C library functions

'memset' Function
-----------------

     #include <string.h>

     #define BUFLENGTH 1024

     Integer new length;
     Integer new fillChar;
     char buf[BUFLENGTH], *charptr;

     length = BUFLENGTH
     fillChar = 0;

     charptr = (char *)memset ((void *)buf1, fillChar, length);



File: ctalk.info,  Node: mkdir,  Next: modf,  Prev: memset,  Up: C library functions

'mkdir' Function
----------------

     Integer new r;
     String new myDirName;

     myDirName = "myDir";

     r = mkdir (myDirName);


File: ctalk.info,  Node: modf,  Next: nearbyint,  Prev: mkdir,  Up: C library functions

'modf' Function
---------------

     #include <math.h>

     double dptr;
     Float new x;
     Float new frac;

     x = 2.54;

     frac = modf (x, &dptr);


File: ctalk.info,  Node: nearbyint,  Next: perror,  Prev: modf,  Up: C library functions

'nearbyint' Function
--------------------

     #include <math.h>

     Float new x;
     Float new result;

     x = 2.53;

     result = nearbyint (x);


File: ctalk.info,  Node: perror,  Next: pow,  Prev: nearbyint,  Up: C library functions

'perror' Function
-----------------

     #include <stdio.h>

     String new message;

     message = "Program error";

     perror (message);


File: ctalk.info,  Node: pow,  Next: printf,  Prev: perror,  Up: C library functions

'pow' Function
--------------

     #include <math.h>

     Float new x;
     Float new exp;
     Float new result;

     x = 2.5;
     exp = 2;

     result = pow (x, exp);


File: ctalk.info,  Node: printf,  Next: raise,  Prev: pow,  Up: C library functions

'printf' Function
-----------------

     #include <stdio.h>

     String new message;
     String new fmt;

     printf (fmt, message);


File: ctalk.info,  Node: raise,  Next: rand,  Prev: printf,  Up: C library functions

'raise' Function
----------------

     #include <signal.h>

     Integer new signal;
     Integer new result;

     signal = SIGTERM;

     result = raise (signal);


File: ctalk.info,  Node: rand,  Next: realloc,  Prev: raise,  Up: C library functions

'rand' Function
---------------

     #include <stdlib.h>

     Integer new random;

     random = rand ();


File: ctalk.info,  Node: realloc,  Next: remove,  Prev: rand,  Up: C library functions

'realloc' Function
------------------

     #include <stdlib.h>

     int *intptr;
     Integer new size;

     size = sizeof (int *);

     intptr = (int *)realloc (NULL, size);



File: ctalk.info,  Node: remove,  Next: rename,  Prev: realloc,  Up: C library functions

'remove' Function
-----------------

     #include <stdio.h>

     String new path;
     Integer new result;

     path = ``/home/user'';

     result = remove (path);



File: ctalk.info,  Node: rename,  Next: rindex,  Prev: remove,  Up: C library functions

'rename' Function
-----------------

     #include <stdio.h>

     String new oldPath;
     String new newPath;
     Integer new result;

     oldPath = "/home/user";
     newPath = "/home/joe";

     result = rename (oldPath, newPath);



File: ctalk.info,  Node: rindex,  Next: rint,  Prev: rename,  Up: C library functions

'rindex' Function
-----------------

*Note strrchr::.


File: ctalk.info,  Node: rint,  Next: rmdir,  Prev: rindex,  Up: C library functions

'rint' Function
---------------

     #include <math.h>

     Float new myFloat;
     Float new myIntValue;

     myFloat = 2.54;

     myIntValue = rint (myFloat);



File: ctalk.info,  Node: rmdir,  Next: round,  Prev: rint,  Up: C library functions

'rmdir' Function
----------------

     r = rmdir (dirToRemove);


File: ctalk.info,  Node: round,  Next: scanf,  Prev: rmdir,  Up: C library functions

'round' Function
----------------

     #include <math.h>

     Float new myFloat;
     Float new myIntValue;

     myFloat = 2.54;

     myIntValue = round (myFloat);



File: ctalk.info,  Node: scanf,  Next: sin,  Prev: round,  Up: C library functions

'scanf' Function
----------------

*Note Variable arguments::.


File: ctalk.info,  Node: sin,  Next: sinh,  Prev: scanf,  Up: C library functions

'sin' Function
--------------

     #include <math.h>

     Float new x;
     Float new sinX;

     x = 2.5;

     sinX = sin (x);


File: ctalk.info,  Node: sinh,  Next: snprintf,  Prev: sin,  Up: C library functions

'sinh' Function
---------------

     #include <math.h>

     Float new x;
     Float new sinX;

     x = 2.5;

     sinX = sinh (x);


File: ctalk.info,  Node: snprintf,  Next: sprintf,  Prev: sinh,  Up: C library functions

'snprintf' Function
-------------------

*Note Variable arguments::.


File: ctalk.info,  Node: sprintf,  Next: sqrt,  Prev: snprintf,  Up: C library functions

'sprintf' Function
------------------

*Note Variable arguments::.


File: ctalk.info,  Node: sqrt,  Next: srand,  Prev: sprintf,  Up: C library functions

'sqrt' Function
---------------

     #include <math.h>

     Array instanceMethod printSquareRoot (void) {

       Float new squareRoot;
       WriteFileStream classInit;

       /*
        *  Use Ctalk C API library function calls within a C function.
        */
       squareRoot = sqrt(__ctalk_to_c_double(__ctalk_self_internal ()));
       stdoutStream writeStream squareRoot;

       return NULL;
     }

     int main () {

       Array new floatArray;

       floatArray atPut 0, 1.0;
       floatArray atPut 1, 4.0;
       floatArray atPut 2, 9.0;
       floatArray atPut 3, 16.0;
       floatArray atPut 4, 25.0;

       floatArray map printSquareRoot;

     }


File: ctalk.info,  Node: srand,  Next: sscanf,  Prev: sqrt,  Up: C library functions

'srand' Function
----------------

     #include <stdlib.h>

     Integer new seed;

     seed = 2;

     srand (seed);



File: ctalk.info,  Node: sscanf,  Next: strcat-strcpy,  Prev: srand,  Up: C library functions

'sscanf' Function
-----------------

*Note Variable arguments::.

_Note:_ The C99 standard requires that 'stdin,' 'stdout,' and 'stderr'
should be implemented as macros, which on some systems (notably Solaris)
causes problems with C-to-object translation.  If Ctalk cannot register
these macros as C variables, then either call 'sscanf(3)' C function
with only C variables, or use a method with 'stdoutStream' or
'stderrStream' *Note WriteFileStream::, or 'stdinStream' *Note
ReadFileStream::.


File: ctalk.info,  Node: strcat-strcpy,  Next: strchr,  Prev: sscanf,  Up: C library functions

'strcat,' 'strcasecmp', 'strcmp,' and 'strcpy' Functions
--------------------------------------------------------

The 'strcat(3),' 'strcasecmp(3),' 'strcmp(3),' and 'strcpy(3)' functions
work in most statements.  When necessary, Ctalk uses 'cStrcat',
'cStrcasecmp', 'cStrcmp', and 'cStrcpy' (class 'CFunction').  *Note
CFunction::.


File: ctalk.info,  Node: strchr,  Next: strcoll,  Prev: strcat-strcpy,  Up: C library functions

'strchr' Function
-----------------

     #include <string.h>

     int main () {

       String new s;
       String new result;

       s = "s1";

       if ((result = strchr (s, '1')) == "1") {
         printf ("Pass\n");
       } else {
         printf ("Fail\n");
       }

       exit(0);
     }


File: ctalk.info,  Node: strcoll,  Next: strspn,  Prev: strchr,  Up: C library functions

'strcoll' Function
------------------

     #include <string.h>

     String new s1;
     String new s2;
     Integer new result;

     result = strcoll (s1, s2);


File: ctalk.info,  Node: strspn,  Next: strerror,  Prev: strcoll,  Up: C library functions

'strspn' Function
-----------------


File: ctalk.info,  Node: strerror,  Next: strftime,  Prev: strspn,  Up: C library functions

'strerror' Function
-------------------


File: ctalk.info,  Node: strftime,  Next: strlen,  Prev: strerror,  Up: C library functions

'strftime' Function
-------------------


File: ctalk.info,  Node: strlen,  Next: strncat-strncpy,  Prev: strftime,  Up: C library functions

'strlen' Function
-----------------


File: ctalk.info,  Node: strncat-strncpy,  Next: strpbrk,  Prev: strlen,  Up: C library functions

'strncat,' 'strncmp,' and 'strncpy' Functions
---------------------------------------------

The 'strncat(3),' 'strncasecmp(3),' 'strncmp(3),' and 'strncpy(3)'
functions work in most statements.  When necessary, Ctalk uses
'cStrncat,' 'cStrncasecmp,' 'cStrncmp,' and 'cStrncpy' (class
'CFunction').  *Note CFunction::.


File: ctalk.info,  Node: strpbrk,  Next: strrchr,  Prev: strncat-strncpy,  Up: C library functions

'strpbrk' Function
------------------


File: ctalk.info,  Node: strrchr,  Next: strstr,  Prev: strpbrk,  Up: C library functions

'strrchr' Function
------------------

     #include <string.h>

     String new s1;
     Character new searchChar;
     String new charptr;

     searchChar = '/';
     s1 = "/home/user";

     charptr = strrchr (s1, searchChar);


File: ctalk.info,  Node: strstr,  Next: strtod,  Prev: strrchr,  Up: C library functions

'strstr' Function
-----------------


File: ctalk.info,  Node: strtod,  Next: strtok,  Prev: strstr,  Up: C library functions

'strtod' Function
-----------------


File: ctalk.info,  Node: strtok,  Next: strtoll,  Prev: strtod,  Up: C library functions

'strtok' Function
-----------------


File: ctalk.info,  Node: strtoll,  Next: strxfrm,  Prev: strtok,  Up: C library functions

'strtoll' Function
------------------


File: ctalk.info,  Node: strxfrm,  Next: system,  Prev: strtoll,  Up: C library functions

'strxfrm' Function
------------------


File: ctalk.info,  Node: system,  Next: tan,  Prev: strxfrm,  Up: C library functions

'system' Function
-----------------

     #include <stdlib.h>

     String new commandLine;

     commandLine = "ls -lR";

     system (commandLine);


File: ctalk.info,  Node: tan,  Next: tanh,  Prev: system,  Up: C library functions

'tan' Function
--------------


File: ctalk.info,  Node: tanh,  Next: tmpnam,  Prev: tan,  Up: C library functions

'tanh' Function
---------------


File: ctalk.info,  Node: tmpnam,  Next: tolower,  Prev: tanh,  Up: C library functions

'tmpnam' Function
-----------------


File: ctalk.info,  Node: tolower,  Next: toupper,  Prev: tmpnam,  Up: C library functions

'tolower' Function
------------------

The 'tolower' function may be implemented in a non-portable manner.  Use
the 'toLower' method instead.


File: ctalk.info,  Node: toupper,  Next: trunc,  Prev: tolower,  Up: C library functions

'toupper' Function
------------------

The 'toupper' function may be implemented in a non-portable manner.  Use
the 'toUpper' method instead.


File: ctalk.info,  Node: trunc,  Next: ungetc,  Prev: toupper,  Up: C library functions

'trunc' Function
----------------


File: ctalk.info,  Node: ungetc,  Next: vfprintf,  Prev: trunc,  Up: C library functions

'ungetc' Function
-----------------


File: ctalk.info,  Node: vfprintf,  Next: vfscanf,  Prev: ungetc,  Up: C library functions

'vfprintf' Function
-------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'printf(3)' or 'writeStream' (class 'WriteFileStream')
instead.


File: ctalk.info,  Node: vfscanf,  Next: vprintf,  Prev: vfprintf,  Up: C library functions

'vfscanf' Function
------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'scanf(3)' instead.  *Note Variable arguments::.


File: ctalk.info,  Node: vprintf,  Next: vscanf,  Prev: vfscanf,  Up: C library functions

'vprintf' Function
------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'printf(3)' or 'writeStream' (class 'WriteFileStream')
instead.


File: ctalk.info,  Node: vscanf,  Next: vsnprintf,  Prev: vprintf,  Up: C library functions

'vscanf' Function
-----------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'scanf(3)' instead.  *Note Variable arguments::.


File: ctalk.info,  Node: vsnprintf,  Next: vsprintf,  Prev: vscanf,  Up: C library functions

'vsnprintf' Function
--------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'sprintf(3)' instead.  *Note Variable arguments::.


File: ctalk.info,  Node: vsprintf,  Next: vsscanf,  Prev: vsnprintf,  Up: C library functions

'vsprintf' Function
-------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'sprintf(3)' instead.  *Note Variable arguments::.


File: ctalk.info,  Node: vsscanf,  Prev: vsprintf,  Up: C library functions

'vsscanf' Function
------------------

This version of Ctalk does not support the 'va_list' data type.  You
should use 'sprintf(3)' instead.  *Note Variable arguments::.


File: ctalk.info,  Node: GNU tools,  Prev: C library functions,  Up: C

Using GNU Tools with Ctalk
--------------------------

If you want to build Ctalk programs using the GNU configuration tools;
i.e, the './configure,' 'make,' 'make install' sequence of commands, you
need to tell the build tools about Ctalk.

Doing this mostly involves telling the utility 'automake,' which helps
write 'Makefiles' for the 'make' program, how to build a Ctalk source
file into an executable.

The 'make' program allows Makefiles to define rules to build different
types of input files into programs, libraries, and other types of data
files.

In order to distinguish a Ctalk file, we give it the file extension
'.ca'.  This lets the build tools know that the Ctalk program isn't a
standard C input file.

Then, in 'Makefile.am' (consult the 'automake' manual if you're not
certain what this is), you can define a rule to build a '.ca' file into
an '.o' object file.


     SUFFIXES=.ca .o

     .ca.o:
     	$(top_builddir)/src/ctalk -I $(top_builddir)/classes $< \
     	  -o `basename $ .o`.i ; \
     	$(CC) -c $(AM_CFLAGS) $(AM_CPPFLAGS) $(DEFS) -o $ `basename $< .ca`.i


Then, add another line to link the object file into a program.


     methods$(EXEEXT) : methods.o
     	$(CC) methods.o $(AM_LDFLAGS) $(LDFLAGS) $(LIBS) -o methods$(EXEEXT)


Note that this example comes from the 'methods' program in the Ctalk
distribution, where, "methods," is the canonical name of the output
file, as defined in the 'bin_PROGRAMS' macro.  That allows 'make' to
install the program normally when you type, 'make install.'

If you're using Ctalk for another package, you'll almost certainly want
to change the paths to something that uses an already-installed Ctalk.
In that case, 'Makefile.am' might contain lines like these.


     SUFFIXES=.ca .o

     .ca.o:
     	/usr/local/bin/ctalk -I /usr/local/include/classes $< \
     	  -o `basename $ .o`.i ; \
     	$(CC) -c $(AM_CFLAGS) $(AM_CPPFLAGS) $(DEFS) -o $ `basename $< .ca`.i


Cleaning Up Extra Files
.......................

Note that the 'basename' command in these examples handles the
translation of the 'make' targets into an intermediate Ctalk file.

This way 'make' doesn't need to worry about any intermediate files,
except that the 'Makefile' should clean them up.

So to define rules to clean up the extra files after the build, include
'make' targets like these in 'Makefile.am.'


     clean-local:
     	rm -f *.i

     distclean-local:
     	rm -f *.i



Running Ctalk Utilities in an Emacs Window
..........................................

The 'doc/' subdirectory of the Ctalk source code distribution contains
the Emacs Lisp programs 'classes.el', 'methods-brief.el', and
'methods-full.el'.  They define simple Emacs Lisp functions that let you
capture the output of the Ctalk utilities in an Emacs window.

The documentation file, 'ctalktools.info' contains descriptions of these
functions, and the files also contain instructions to install and use
them.


File: ctalk.info,  Node: Copying,  Next: GNU Free Documentation License,  Prev: C,  Up: Top

Copying and Distributing Ctalk
==============================

Ctalk is free software.  You can copy, distribute, and modify Ctalk
under the terms of the GNU General Public License, Version 3 (see,
'COPYING', in the Ctalk distribution).  You can also distribute
executable programs which link to the 'ctalk' run time libraries under
the terms of the GNU Lesser General Public License, Version 3
('COPYING.LIB' in the Ctalk distribution).


File: ctalk.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: Copying,  Up: Top

GNU Free Documentation License
==============================


                             Version 1.1, March 2000
          Copyright (C) 2000  Free Software Foundation, Inc.
          59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

          Everyone is permitted to copy and distribute verbatim copies
          of this license document, but changing it is not allowed.



       0. PREAMBLE

          The purpose of this License is to make a manual, textbook, or other
          written document "free" in the sense of freedom: to assure everyone
          the effective freedom to copy and redistribute it, with or without
          modifying it, either commercially or noncommercially.  Secondarily,
          this License preserves for the author and publisher a way to get
          credit for their work, while not being considered responsible for
          modifications made by others.

          This License is a kind of "copyleft", which means that derivative
          works of the document must themselves be free in the same sense.
          It complements the GNU General Public License, which is a copyleft
          license designed for free software.

          We have designed this License in order to use it for manuals for
          free software, because free software needs free documentation: a
          free program should come with manuals providing the same freedoms
          that the software does.  But this License is not limited to
          software manuals; it can be used for any textual work, regardless
          of subject matter or whether it is published as a printed book.
          We recommend this License principally for works whose purpose is
          instruction or reference.


       1. APPLICABILITY AND DEFINITIONS

          This License applies to any manual or other work that contains a
          notice placed by the copyright holder saying it can be distributed
          under the terms of this License.  The "Document", below, refers to
          any such manual or work.  Any member of the public is a licensee,
          and is addressed as "you."

          A "Modified Version" of the Document means any work containing the
          Document or a portion of it, either copied verbatim, or with
          modifications and/or translated into another language.

          A "Secondary Section" is a named appendix or a front-matter
          section of the Document that deals exclusively with the
          relationship of the publishers or authors of the Document to the
          Document's overall subject (or to related matters) and contains
          nothing that could fall directly within that overall subject.
          (For example, if the Document is in part a textbook of
          mathematics, a Secondary Section may not explain any mathematics.)
          The relationship could be a matter of historical connection with
          the subject or with related matters, or of legal, commercial,
          philosophical, ethical or political position regarding them.

          The "Invariant Sections" are certain Secondary Sections whose
          titles are designated, as being those of Invariant Sections, in
          the notice that says that the Document is released under this
          License.

          The "Cover Texts" are certain short passages of text that are
          listed, as Front-Cover Texts or Back-Cover Texts, in the notice
          that says that the Document is released under this License.

          A "Transparent" copy of the Document means a machine-readable copy,
          represented in a format whose specification is available to the
          general public, whose contents can be viewed and edited directly
          and straightforwardly with generic text editors or (for images
          composed of pixels) generic paint programs or (for drawings) some
          widely available drawing editor, and that is suitable for input to
          text formatters or for automatic translation to a variety of
          formats suitable for input to text formatters.  A copy made in an
          otherwise Transparent file format whose markup has been designed
          to thwart or discourage subsequent modification by readers is not
          Transparent.  A copy that is not "Transparent" is called "Opaque."

          Examples of suitable formats for Transparent copies include plain
          ASCII without markup, Texinfo input format, LaTeX input format,
          SGML or XML using a publicly available DTD, and
          standard-conforming simple HTML designed for human modification.
          Opaque formats include PostScript, PDF, proprietary formats that
          can be read and edited only by proprietary word processors, SGML
          or XML for which the DTD and/or processing tools are not generally
          available, and the machine-generated HTML produced by some word
          processors for output purposes only.

          The "Title Page" means, for a printed book, the title page itself,
          plus such following pages as are needed to hold, legibly, the
          material this License requires to appear in the title page.  For
          works in formats which do not have any title page as such, "Title
          Page" means the text near the most prominent appearance of the
          work's title, preceding the beginning of the body of the text.


       2. VERBATIM COPYING

          You may copy and distribute the Document in any medium, either
          commercially or noncommercially, provided that this License, the
          copyright notices, and the license notice saying this License
          applies to the Document are reproduced in all copies, and that you
          add no other conditions whatsoever to those of this License.  You
          may not use technical measures to obstruct or control the reading
          or further copying of the copies you make or distribute.  However,
          you may accept compensation in exchange for copies.  If you
          distribute a large enough number of copies you must also follow
          the conditions in section 3.

          You may also lend copies, under the same conditions stated above,
          and you may publicly display copies.


       3. COPYING IN QUANTITY

          If you publish printed copies of the Document numbering more than
          100, and the Document's license notice requires Cover Texts, you
          must enclose the copies in covers that carry, clearly and legibly,
          all these Cover Texts: Front-Cover Texts on the front cover, and
          Back-Cover Texts on the back cover.  Both covers must also clearly
          and legibly identify you as the publisher of these copies.  The
          front cover must present the full title with all words of the
          title equally prominent and visible.  You may add other material
          on the covers in addition.  Copying with changes limited to the
          covers, as long as they preserve the title of the Document and
          satisfy these conditions, can be treated as verbatim copying in
          other respects.

          If the required texts for either cover are too voluminous to fit
          legibly, you should put the first ones listed (as many as fit
          reasonably) on the actual cover, and continue the rest onto
          adjacent pages.

          If you publish or distribute Opaque copies of the Document
          numbering more than 100, you must either include a
          machine-readable Transparent copy along with each Opaque copy, or
          state in or with each Opaque copy a publicly-accessible
          computer-network location containing a complete Transparent copy
          of the Document, free of added material, which the general
          network-using public has access to download anonymously at no
          charge using public-standard network protocols.  If you use the
          latter option, you must take reasonably prudent steps, when you
          begin distribution of Opaque copies in quantity, to ensure that
          this Transparent copy will remain thus accessible at the stated
          location until at least one year after the last time you
          distribute an Opaque copy (directly or through your agents or
          retailers) of that edition to the public.

          It is requested, but not required, that you contact the authors of
          the Document well before redistributing any large number of
          copies, to give them a chance to provide you with an updated
          version of the Document.


       4. MODIFICATIONS

          You may copy and distribute a Modified Version of the Document
          under the conditions of sections 2 and 3 above, provided that you
          release the Modified Version under precisely this License, with
          the Modified Version filling the role of the Document, thus
          licensing distribution and modification of the Modified Version to
          whoever possesses a copy of it.  In addition, you must do these
          things in the Modified Version:

          A. Use in the Title Page (and on the covers, if any) a title
          distinct    from that of the Document, and from those of previous
          versions    (which should, if there were any, be listed in the
          History section    of the Document).  You may use the same title
          as a previous version    if the original publisher of that version
          gives permission.
          B. List on the Title Page, as authors, one or more persons or
          entities    responsible for authorship of the modifications in the
          Modified    Version, together with at least five of the principal
          authors of the    Document (all of its principal authors, if it
          has less than five).
          C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.
          D. Preserve all the copyright notices of the Document.
          E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.
          F. Include, immediately after the copyright notices, a license
          notice    giving the public permission to use the Modified Version
          under the    terms of this License, in the form shown in the
          Addendum below.
          G. Preserve in that license notice the full lists of Invariant
          Sections    and required Cover Texts given in the Document's
          license notice.
          H. Include an unaltered copy of this License.
          I. Preserve the section entitled "History", and its title, and add
          to    it an item stating at least the title, year, new authors, and
            publisher of the Modified Version as given on the Title Page.
          If    there is no section entitled "History" in the Document,
          create one    stating the title, year, authors, and publisher of
          the Document as    given on its Title Page, then add an item
          describing the Modified    Version as stated in the previous
          sentence.
          J. Preserve the network location, if any, given in the Document for
            public access to a Transparent copy of the Document, and
          likewise    the network locations given in the Document for
          previous versions    it was based on.  These may be placed in the
          "History" section.     You may omit a network location for a work
          that was published at    least four years before the Document
          itself, or if the original    publisher of the version it refers
          to gives permission.
          K. In any section entitled "Acknowledgements" or "Dedications",
          preserve the section's title, and preserve in the section all the
           substance and tone of each of the contributor acknowledgements
          and/or dedications given therein.
          L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section titles.
          M. Delete any section entitled "Endorsements."  Such a section
          may not be included in the Modified Version.
          N. Do not retitle any existing section as "Endorsements"    or to
          conflict in title with any Invariant Section.

          If the Modified Version includes new front-matter sections or
          appendices that qualify as Secondary Sections and contain no
          material copied from the Document, you may at your option
          designate some or all of these sections as invariant.  To do this,
          add their titles to the list of Invariant Sections in the Modified
          Version's license notice.  These titles must be distinct from any
          other section titles.

          You may add a section entitled "Endorsements", provided it contains
          nothing but endorsements of your Modified Version by various
          parties-for example, statements of peer review or that the text has
          been approved by an organization as the authoritative definition
          of a standard.

          You may add a passage of up to five words as a Front-Cover Text,
          and a passage of up to 25 words as a Back-Cover Text, to the end
          of the list of Cover Texts in the Modified Version.  Only one
          passage of Front-Cover Text and one of Back-Cover Text may be
          added by (or through arrangements made by) any one entity.  If the
          Document already includes a cover text for the same cover,
          previously added by you or by arrangement made by the same entity
          you are acting on behalf of, you may not add another; but you may
          replace the old one, on explicit permission from the previous
          publisher that added the old one.

          The author(s) and publisher(s) of the Document do not by this
          License give permission to use their names for publicity for or to
          assert or imply endorsement of any Modified Version.


       5. COMBINING DOCUMENTS

          You may combine the Document with other documents released under
          this License, under the terms defined in section 4 above for
          modified versions, provided that you include in the combination
          all of the Invariant Sections of all of the original documents,
          unmodified, and list them all as Invariant Sections of your
          combined work in its license notice.

          The combined work need only contain one copy of this License, and
          multiple identical Invariant Sections may be replaced with a single
          copy.  If there are multiple Invariant Sections with the same name
          but different contents, make the title of each such section unique
          by adding at the end of it, in parentheses, the name of the
          original author or publisher of that section if known, or else a
          unique number.  Make the same adjustment to the section titles in
          the list of Invariant Sections in the license notice of the
          combined work.

          In the combination, you must combine any sections entitled
          "History" in the various original documents, forming one section
          entitled "History"; likewise combine any sections entitled
          "Acknowledgements", and any sections entitled "Dedications."  You
          must delete all sections entitled "Endorsements."


       6. COLLECTIONS OF DOCUMENTS

          You may make a collection consisting of the Document and other
          documents released under this License, and replace the individual
          copies of this License in the various documents with a single copy
          that is included in the collection, provided that you follow the
          rules of this License for verbatim copying of each of the
          documents in all other respects.

          You may extract a single document from such a collection, and
          distribute it individually under this License, provided you insert
          a copy of this License into the extracted document, and follow
          this License in all other respects regarding verbatim copying of
          that document.


       7. AGGREGATION WITH INDEPENDENT WORKS

          A compilation of the Document or its derivatives with other
          separate and independent documents or works, in or on a volume of
          a storage or distribution medium, does not as a whole count as a
          Modified Version of the Document, provided no compilation
          copyright is claimed for the compilation.  Such a compilation is
          called an "aggregate", and this License does not apply to the
          other self-contained works thus compiled with the Document, on
          account of their being thus compiled, if they are not themselves
          derivative works of the Document.

          If the Cover Text requirement of section 3 is applicable to these
          copies of the Document, then if the Document is less than one
          quarter of the entire aggregate, the Document's Cover Texts may be
          placed on covers that surround only the Document within the
          aggregate.  Otherwise they must appear on covers around the whole
          aggregate.


       8. TRANSLATION

          Translation is considered a kind of modification, so you may
          distribute translations of the Document under the terms of section
          4.  Replacing Invariant Sections with translations requires special
          permission from their copyright holders, but you may include
          translations of some or all Invariant Sections in addition to the
          original versions of these Invariant Sections.  You may include a
          translation of this License provided that you also include the
          original English version of this License.  In case of a
          disagreement between the translation and the original English
          version of this License, the original English version will prevail.


       9. TERMINATION

          You may not copy, modify, sublicense, or distribute the Document
          except as expressly provided for under this License.  Any other
          attempt to copy, modify, sublicense or distribute the Document is
          void, and will automatically terminate your rights under this
          License.  However, parties who have received copies, or rights,
          from you under this License will not have their licenses
          terminated so long as such parties remain in full compliance.


      10. FUTURE REVISIONS OF THIS LICENSE

          The Free Software Foundation may publish new, revised versions of
          the GNU Free Documentation License from time to time.  Such new
          versions will be similar in spirit to the present version, but may
          differ in detail to address new problems or concerns.  See
          http://www.gnu.org/copyleft/.

          Each version of the License is given a distinguishing version
          number.  If the Document specifies that a particular numbered
          version of this License "or any later version" applies to it, you
          have the option of following the terms and conditions either of
          that specified version or of any later version that has been
          published (not as a draft) by the Free Software Foundation.  If
          the Document does not specify a version number of this License,
          you may choose any version ever published (not as a draft) by the
          Free Software Foundation.


     ADDENDUM: How to use this License for your documents

        To use this License in a document you have written, include a copy of
     the License in the document and put the following copyright and license
     notices just after the title page:

          Copyright (C)  YEAR  YOUR NAME.
          Permission is granted to copy, distribute and/or modify this document
          under the terms of the GNU Free Documentation License, Version 1.1
          or any later version published by the Free Software Foundation;
          with the Invariant Sections being LIST THEIR TITLES, with the
          Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
          A copy of the license is included in the section entitled "GNU
          Free Documentation License."

        If you have no Invariant Sections, write "with no Invariant Sections"
     instead of saying which ones are invariant.  If you have no Front-Cover
     Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
     LIST"; likewise for Back-Cover Texts.

        If your document contains nontrivial examples of program code, we
     recommend releasing these examples in parallel under your choice of
     free software license, such as the GNU General Public License, to
     permit their use in free software.



File: ctalk.info,  Node: Index,  Prev: GNU Free Documentation License,  Up: Top

Index
-----

 [index ]
* Menu:

* ! instance method (Character class):   Character.          (line   73)
* ! instance method (Magnitude class):   Magnitude.          (line   12)
* ! instance method (Object class):      Object.             (line   45)
* ! operator:                            Prefixes.           (line    6)
* ! operator <1>:                        Control structures. (line    6)
* != instance method (Boolean class):    Boolean.            (line   33)
* != instance method (Character class):  Character.          (line   77)
* != instance method (Integer class):    Integer.            (line   18)
* != instance method (LongInteger class): LongInteger.       (line   19)
* != instance method (Object class):     Object.             (line   48)
* != instance method (String class):     String.             (line   73)
* != instance method (String class) <1>: String.             (line   77)
* !~ instance method (String class):     String.             (line   37)
* !~ instance method (String class) <1>: String.             (line   68)
* #pragma GCC dependency:                C statements.       (line   22)
* #pragma GCC pack:                      C statements.       (line   33)
* #pragma GCC poison:                    C statements.       (line   25)
* #pragma GCC system header:             C statements.       (line   29)
* #pragma implementation:                C statements.       (line   18)
* #pragma interface:                     C statements.       (line   18)
* #pragma STDC CX_LIMITED_RANGE:         C statements.       (line   33)
* #pragma STDC FENV_ACCESS:              C statements.       (line   33)
* #pragma STDC FP_CONTRACT:              C statements.       (line   33)
* $ metacharacter:                       String.             (line  547)
* % instance method (Integer class):     Integer.            (line   27)
* % instance method (LongInteger class): LongInteger.        (line   45)
* %= instance method (Integer class):    Integer.            (line   31)
* %= instance method (LongInteger class): LongInteger.       (line   49)
* & instance method (Character class):   Character.          (line   80)
* & instance method (Integer class):     Integer.            (line   22)
* & instance method (LongInteger class): LongInteger.        (line   53)
* & instance method (Object class):      Object.             (line   53)
* & instance method (Object class) <1>:  Integer.            (line   22)
* & instance method (Object class) <2>:  LongInteger.        (line   53)
* & operator:                            Prefixes.           (line    6)
* && instance method (Boolean class):    Boolean.            (line   37)
* && instance method (Character class):  Character.          (line   83)
* && instance method (Float class):      Float.              (line   19)
* && instance method (Integer class):    Integer.            (line   35)
* && instance method (LongInteger class): LongInteger.       (line   58)
* &= instance method (Integer class):    Integer.            (line   38)
* &= instance method (LongInteger class): LongInteger.       (line   62)
* &= instance method (Object class):     LongInteger.        (line   62)
* ( metacharacter:                       String.             (line  593)
* ) metacharacter:                       String.             (line  593)
* * instance method (Character class):   Character.          (line   86)
* * instance method (Collection class):  Collection.         (line   26)
* * instance method (Float class):       Float.              (line   42)
* * instance method (Integer class):     Integer.            (line   63)
* * instance method (LongInteger class): LongInteger.        (line   66)
* * instance method (Magnitude class):   Magnitude.          (line   16)
* * instance method (String class):      String.             (line   51)
* * instance method (Symbol class):      Symbol.             (line   55)
* * metacharacter:                       String.             (line  551)
* * operator:                            Prefixes.           (line    6)
* *= instance method (Character class):  Character.          (line   90)
* *= instance method (Float class):      Float.              (line   45)
* *= instance method (Integer class):    Integer.            (line   66)
* + instance method (Character class):   Character.          (line   93)
* + instance method (Collection class):  Collection.         (line   32)
* + instance method (Float class):       Float.              (line   26)
* + instance method (Integer class):     Integer.            (line   42)
* + instance method (Key class):         Key.                (line   54)
* + instance method (LongInteger class): LongInteger.        (line   28)
* + instance method (String class):      String.             (line   81)
* + instance method (Vector class):      Vector.             (line   51)
* + metacharacter:                       String.             (line  554)
* + method (Integer class):              Self and super.     (line    9)
* ++ instance method (Character class):  Character.          (line   97)
* ++ instance method (Integer class):    Integer.            (line   45)
* ++ instance method (Key class):        Key.                (line   61)
* ++ instance method (LongInteger class): LongInteger.       (line   31)
* ++ instance method (String class):     String.             (line   87)
* ++ operator:                           Prefixes.           (line    6)
* += instance method (Character class):  Character.          (line  100)
* += instance method (Float class):      Float.              (line   29)
* += instance method (Integer class):    Integer.            (line   48)
* += instance method (List class):       List.               (line   12)
* += instance method (sortedList class): SortedList.         (line    9)
* += instance method (String class):     String.             (line   96)
* += instance method (Vector class):     Vector.             (line   55)
* - instance method (Character class):   Character.          (line  104)
* - instance method (Float class):       Float.              (line   33)
* - instance method (Integer class):     Integer.            (line   51)
* - instance method (Integer class) <1>: Integer.            (line   54)
* - instance method (Key class):         Key.                (line   86)
* - instance method (LongInteger class): LongInteger.        (line   35)
* - instance method (LongInteger class) <1>: LongInteger.    (line   38)
* - instance method (Magnitude class):   Magnitude.          (line   22)
* - instance method (String class):      String.             (line  103)
* -- instance method (Character class):  Character.          (line  108)
* -- instance method (Integer class):    Integer.            (line   57)
* -- instance method (Key class):        Key.                (line  119)
* -- instance method (LongInteger class): LongInteger.       (line   41)
* -- instance method (String class):     String.             (line  123)
* -- operator:                           Prefixes.           (line    6)
* -= instance method (Character class):  Character.          (line  111)
* -= instance method (Float class):      Float.              (line   38)
* -= instance method (Integer class):    Integer.            (line   60)
* -> instance method (Object class):     Object.             (line   57)
* -> instance method (Object class) <1>: Attributes.         (line   61)
* . metacharacter:                       String.             (line  544)
* / instance method (Character class):   Character.          (line  114)
* / instance method (Float class):       Float.              (line   49)
* / instance method (Integer class):     Integer.            (line   69)
* / instance method (LongInteger class): LongInteger.        (line   69)
* /= instance method (Character class):  Character.          (line  118)
* /= instance method (Float class):      Float.              (line   52)
* /= instance method (Integer class):    Integer.            (line   72)
* < instance method (Character class):   Character.          (line  121)
* < instance method (Float class):       Float.              (line   56)
* < instance method (Integer class):     Integer.            (line   75)
* < instance method (LongInteger class): LongInteger.        (line   72)
* << instance method (Character class):  Character.          (line  125)
* << instance method (Integer class):    Integer.            (line   79)
* << instance method (LongInteger class): LongInteger.       (line   80)
* <= instance method (Character class):  Character.          (line  129)
* <= instance method (Float class):      Float.              (line   60)
* <= instance method (Integer class):    Integer.            (line   83)
* <= instance method (LongInteger class): LongInteger.       (line   76)
* = instance method (Array class):       Array.              (line   43)
* = instance method (Boolean class):     Boolean.            (line   41)
* = instance method (Character class):   Character.          (line  133)
* = instance method (FileStream class):  FileStream.         (line   42)
* = instance method (Float class):       Float.              (line   23)
* = instance method (Integer class):     Integer.            (line   87)
* = instance method (Key class):         Key.                (line  127)
* = instance method (List class):        List.               (line   27)
* = instance method (List class) <1>:    Variable method arguments.
                                                             (line   24)
* = instance method (LongInteger class): LongInteger.        (line   22)
* = instance method (Object class):      Object.             (line  183)
* = instance method (SortedList class):  SortedList.         (line   24)
* = instance method (String class):      String.             (line   56)
* = instance method (Symbol class):      Symbol.             (line   58)
* == instance method (Boolean class):    Boolean.            (line   46)
* == instance method (Character class):  Character.          (line  148)
* == instance method (Integer class):    Integer.            (line   95)
* == instance method (LongInteger class): LongInteger.       (line   25)
* == instance method (Object class):     Object.             (line  187)
* == instance method (String class):     String.             (line   59)
* =~ instance method (String class):     String.             (line   37)
* =~ instance method (String class) <1>: String.             (line   63)
* > instance method (Character class):   Character.          (line  136)
* > instance method (Float class):       Float.              (line   64)
* > instance method (Integer class):     Integer.            (line   99)
* > instance method (LongInteger class): LongInteger.        (line   84)
* >= instance method (Character class):  Character.          (line  144)
* >= instance method (Float class):      Float.              (line   68)
* >= instance method (Integer class):    Integer.            (line  103)
* >= instance method (LongInteger class): LongInteger.       (line   88)
* >> instance method (Character class):  Character.          (line  140)
* >> instance method (Integer class):    Integer.            (line  107)
* >> instance method (LongInteger class): LongInteger.       (line   92)
* ? metacharacter:                       String.             (line  559)
* \ metacharacter:                       String.             (line  563)
* ^ instance method (Character class):   Character.          (line  151)
* ^ instance method (Integer class):     Integer.            (line  111)
* ^ instance method (Integer class) <1>: Integer.            (line  137)
* ^ instance method (LongInteger class): LongInteger.        (line   96)
* ^ metacharacter:                       String.             (line  545)
* ^= instance method (Integer class):    Integer.            (line  115)
* ^= instance method (LongInteger class): LongInteger.       (line   99)
* _error function:                       Ctalk library.      (line 2526)
* _store_int () function:                Ctalk library.      (line 2637)
* _warning function:                     Ctalk library.      (line 2586)
* __argvFileName function:               Ctalk library.      (line   16)
* __argvName function:                   Ctalk library.      (line   12)
* __arg_trace function:                  Ctalk library.      (line   19)
* __ctalkAddBasicNewTag () function:     Attributes.         (line   53)
* __ctalkAddClassVariable function:      Ctalk library.      (line   22)
* __ctalkAddInstanceVariable function:   Ctalk library.      (line   25)
* __ctalkAliasObject function:           Ctalk library.      (line   29)
* __ctalkAliasReceiver () function:      Ctalk library.      (line 1525)
* __ctalkAliasReceiver function:         Ctalk library.      (line   38)
* __ctalkANSIClearPaneLine function:     Ctalk library.      (line   60)
* __ctalkANSITerminalPaneMapWindow function: Ctalk library.  (line   63)
* __ctalkANSITerminalPaneMapWindow() C function: Pane.       (line   32)
* __ctalkANSITerminalPanePutchar function: Ctalk library.    (line   73)
* __ctalkANSITerminalPaneRefresh function: Ctalk library.    (line   77)
* __ctalkANSITerminalPaneUnmapWindow function: Ctalk library.
                                                             (line   70)
* __ctalkANSITerminalPaneUnMapWindow function: Ctalk library.
                                                             (line   81)
* __ctalkANSITerminalPaneUnMapWindow() C function: Pane.     (line   32)
* __ctalkARB () function:                Ctalk library.      (line   86)
* __ctalkArgBlkReturnVal () function:    Ctalk library.      (line   92)
* __ctalkArgBlkSetCallerReturn () function: Ctalk library.   (line   96)
* __ctalkArrayElementToCChar () function: Ctalk library.     (line  106)
* __ctalkArrayElementToCCharPtr () function: Ctalk library.  (line  105)
* __ctalkArrayElementToCDouble () function: Ctalk library.   (line  107)
* __ctalkArrayElementToCInt () function: Ctalk library.      (line  108)
* __ctalkArrayElementToCLongLongInt () function: Ctalk library.
                                                             (line  109)
* __ctalkArrayElementToCPtr () function: Ctalk library.      (line  110)
* __ctalkBackgroundMethodObjectMessage () function: Ctalk library.
                                                             (line  114)
* __ctalkBackgroundMethodObjectMessage2Args () function: Ctalk library.
                                                             (line  137)
* __ctalkCallerPrintOnSelf (char *FMT_ARG): Translating.     (line   58)
* __ctalkCallingFnObjectBecome:          Ctalk library.      (line  148)
* __ctalkCallingInstanceVarBecome:       Ctalk library.      (line  152)
* __ctalkCallingMethodObjectBecome:      Ctalk library.      (line  156)
* __ctalkCallingReceiverBecome:          Ctalk library.      (line  160)
* __ctalkCallMethodFn function:          Ctalk library.      (line  145)
* __ctalkCBoolToObj function:            Translating.        (line   64)
* __ctalkCBoolToObj function <1>:        Ctalk library.      (line  165)
* __ctalkCCharPtrToObj function:         Translating.        (line   68)
* __ctalkCCharPtrToObj function <1>:     Ctalk library.      (line  169)
* __ctalkCDoubleToObj function:          Translating.        (line   93)
* __ctalkCDoubleToObj function <1>:      Ctalk library.      (line  196)
* __ctalkCFUNCReturnClass function:      Ctalk library.      (line  214)
* __ctalkCharRadixToChar function:       Ctalk library.      (line  199)
* __ctalkCharRadixToCharASCII function:  Ctalk library.      (line  206)
* __ctalkCIntToObj function:             Translating.        (line   96)
* __ctalkCIntToObj function <1>:         Ctalk library.      (line  218)
* __ctalkClassLibraryPath function:      Translating.        (line   71)
* __ctalkClassMethodInitReturnClass function: Ctalk library. (line  224)
* __ctalkClassMethodParam function:      Ctalk library.      (line  227)
* __ctalkClassObject function:           Ctalk library.      (line  232)
* __ctalkClassSearchPath function:       Translating.        (line   90)
* __ctalkClassVariableObject () function: Ctalk library.     (line  235)
* __ctalkCLongLongToObj function:        Translating.        (line   99)
* __ctalkCLongLongToObj function <1>:    Ctalk library.      (line  221)
* __ctalkCloseGLXPane () function:       Ctalk library.      (line  267)
* __ctalkCloseX11Pane () function:       Ctalk library.      (line  271)
* __ctalkConsoleReadLine function:       Ctalk library.      (line  172)
* __ctalkCopyObject function:            Ctalk library.      (line  280)
* __ctalkCopyPaneStreams function:       Ctalk library.      (line  274)
* __ctalkCopyVariable function:          Ctalk library.      (line  277)
* __ctalkCreateArg function:             Ctalk library.      (line  183)
* __ctalkCreateArgA function:            Ctalk library.      (line  190)
* __ctalkCreateArgEntry function:        Ctalk library.      (line  289)
* __ctalkCreateArgEntryInit function:    Ctalk library.      (line  293)
* __ctalkCreateGLXMainWindow function:   Ctalk library.      (line  315)
* __ctalkCreateObject function:          Scoping.            (line   54)
* __ctalkCreateObject function <1>:      Ctalk library.      (line  300)
* __ctalkCreateObjectInit () function:   Templates.          (line  167)
* __ctalkCreateObjectInit function:      Scoping.            (line   54)
* __ctalkCreateObjectInit function <1>:  Ctalk library.      (line  304)
* __ctalkCreateWinBuffer function:       Ctalk library.      (line  312)
* __ctalkCreateWinBuffer() C function:   Pane.               (line   32)
* __ctalkCreateWinBuffer() C function <1>: Pane.             (line   42)
* __ctalkCreateX11MainWindow (OBJECT *X11PANE_OBJECT): Ctalk library.
                                                             (line  327)
* __ctalkCreateX11MainWindow function:   Ctalk library.      (line  327)
* __ctalkCreateX11MainWindowTitle (OBJECT *X11PANE_OBJECT,: Ctalk library.
                                                             (line  331)
* __ctalkCreateX11MainWindowTitle function: Ctalk library.   (line  331)
* __ctalkCreateX11SubWindow (OBJECT *SUBPANE_OBJECT, OBJECT *PARENTPANE_OBJECT): Ctalk library.
                                                             (line  345)
* __ctalkCreateX11SubWindow function:    Ctalk library.      (line  345)
* __ctalkCriticalExceptionInternal function: Ctalk library.  (line  366)
* __ctalkCriticalSysErrExceptionInternal function: Ctalk library.
                                                             (line  376)
* __ctalkCSymbolToObj function:          Translating.        (line  102)
* __ctalkCVARReturnClass function:       Ctalk library.      (line  381)
* __ctalkDecimalIntegerToASCII:          Translating.        (line    6)
* __ctalkDecimalIntegerToASCII function: Ctalk library.      (line  392)
* __ctalkDefaultSignalHandler () C function: SignalHandler.  (line   42)
* __ctalkDefaultSignalHandler function:  Ctalk library.      (line  407)
* __ctalkDefineClassMethod function:     Ctalk library.      (line  410)
* __ctalkDefineClassVariable function:   Ctalk library.      (line  415)
* __ctalkDefinedClassMethodObject function: Ctalk library.   (line  430)
* __ctalkDefinedInstanceMethodObject function: Ctalk library.
                                                             (line  435)
* __ctalkDefineInstanceMethod function:  Ctalk library.      (line  420)
* __ctalkDefineInstanceVariable function: Ctalk library.     (line  425)
* __ctalkDefineTemplateMethod function:  Ctalk library.      (line  440)
* __ctalkDeleteArgEntry function:        Ctalk library.      (line  297)
* __ctalkDeleteLastExceptionInternal function: Ctalk library.
                                                             (line  444)
* __ctalkDeleteObject function:          free.               (line    9)
* __ctalkDeleteObject function.:         Ctalk library.      (line  448)
* __ctalkDeleteObjectInternal (OBJECT *OBJ): Ctalk library.  (line  495)
* __ctalkDeleteObjectList function:      Ctalk library.      (line  500)
* __ctalkDeleteWinBuffer function:       Ctalk library.      (line  503)
* __ctalkDocDir function:                Ctalk library.      (line  507)
* __ctalkDoubleToASCII function:         Ctalk library.      (line  512)
* __ctalkErrorExit function:             Ctalk library.      (line  545)
* __ctalkEvalExpr function:              Ctalk library.      (line  549)
* __ctalkEvalExprU function:             Ctalk library.      (line  552)
* __ctalkExceptionInternal function:     Ctalk library.      (line  557)
* __ctalkExceptionNotifyInternal function: Ctalk library.    (line  590)
* __ctalkExec () function:               Ctalk library.      (line 1659)
* __ctalkFilePtrFromStr function:        Ctalk library.      (line  595)
* __ctalkFindClassMethodByFn function:   Ctalk library.      (line  611)
* __ctalkFindClassMethodByName function: Ctalk library.      (line  619)
* __ctalkFindClassVariable function:     Ctalk library.      (line  572)
* __ctalkFindInstanceMethodByFn function: Ctalk library.     (line  627)
* __ctalkFindInstanceMethodByName function: Ctalk library.   (line  635)
* __ctalkFindPrefixMethodByName function: Ctalk library.     (line  585)
* __ctalkFloatToASCII function:          Ctalk library.      (line  512)
* __ctalkFree function:                  Ctalk library.      (line  238)
* __ctalkGenericPtrFromStr function:     Ctalk library.      (line  681)
* __ctalkGetCallingFnObject function:    Ctalk library.      (line  689)
* __ctalkGetCallingMethodObject function: Ctalk library.     (line  695)
* __ctalkGetCArg () function:            Ctalk library.      (line  701)
* __ctalkGetClass function:              Ctalk library.      (line  734)
* __ctalkGetClassMethodByFn function:    Ctalk library.      (line  737)
* __ctalkGetClassMethodByName function:  Ctalk library.      (line  743)
* __ctalkGetClassVariable () function:   Ctalk library.      (line  755)
* __ctalkGetExceptionTrace () function:  Ctalk library.      (line  760)
* __ctalkGetExprParserAt function:       Ctalk library.      (line  748)
* __ctalkGetExprParserPtr function:      Ctalk library.      (line  752)
* __ctalkGetInstanceMethodByFn () function: Ctalk library.   (line  704)
* __ctalkGetInstanceMethodByName () function: Ctalk library. (line  709)
* __ctalkGetInstanceVariable () function: Ctalk library.     (line  764)
* __ctalkGetInstanceVariableByName () function: Ctalk library.
                                                             (line  769)
* __ctalkGetPrefixMethodByName () function: Ctalk library.   (line  775)
* __ctalkGetReceiverPtr () function:     Ctalk library.      (line  714)
* __ctalkGetRS function:                 Ctalk library.      (line  718)
* __ctalkGetRunTimeException () function: Ctalk library.     (line  723)
* __ctalkGetTemplateCallerCVAR function: Ctalk library.      (line  727)
* __ctalkGetTypeDef () function:         Ctalk library.      (line  781)
* __ctalkGetX11KeySym () function:       Ctalk library.      (line  784)
* __ctalkGLEW20 () function:             Ctalk library.      (line  805)
* __ctalkGlobalObjectBecome () function: Ctalk library.      (line  811)
* __ctalkGlobFiles () function:          Ctalk library.      (line  814)
* __ctalkGLXAlphaFT () function:         Ctalk library.      (line  864)
* __ctalkGLXDrawText () function:        Ctalk library.      (line  869)
* __ctalkGLXExtensionsString () function: Ctalk library.     (line  882)
* __ctalkGLXExtensionSupported () function: Ctalk library.   (line  885)
* __ctalkGLXFrameRate () function:       Ctalk library.      (line  889)
* __ctalkGLXFreeFTFont () function:      Ctalk library.      (line  894)
* __ctalkGLXFreeXFont () function:       Ctalk library.      (line  898)
* __ctalkGLXFullScreen () function:      Ctalk library.      (line  904)
* __ctalkGLXFullScreen () function <1>:  Ctalk library.      (line  955)
* __ctalkGLXNamedColorFT () function:    Ctalk library.      (line  907)
* __ctalkGLXPixelHeightFT () function:   Ctalk library.      (line  911)
* __ctalkGLXRefreshRate () function:     Ctalk library.      (line  915)
* __ctalkGLXSwapBuffers () function:     Ctalk library.      (line  921)
* __ctalkGLXSwapControl () function:     Ctalk library.      (line  925)
* __ctalkGLXTextWidth () function:       Ctalk library.      (line  932)
* __ctalkGLXUseFTFont () function:       Ctalk library.      (line  938)
* __ctalkGLXUseXFont () function:        Ctalk library.      (line  943)
* __ctalkGLXWindowPos2i () function:     Ctalk library.      (line  959)
* __ctalkGLXWinXOrg () function:         Ctalk library.      (line  971)
* __ctalkGLXWinXSize () function:        Ctalk library.      (line  971)
* __ctalkGLXWinYOrg () function:         Ctalk library.      (line  971)
* __ctalkGLXWinYSize () function:        Ctalk library.      (line  971)
* __ctalkGUIPaneClearRectangle () function: Ctalk library.   (line  986)
* __ctalkGUIPaneClearWindow () function: Ctalk library.      (line  990)
* __ctalkGUIPaneDrawCircleBasic () function: Ctalk library.  (line  978)
* __ctalkGUIPaneDrawLine () function:    Ctalk library.      (line  993)
* __ctalkGUIPaneDrawLineBasic () function: Ctalk library.    (line  997)
* __ctalkGUIPaneDrawPoint () function:   Ctalk library.      (line 1004)
* __ctalkGUIPaneDrawRectangle () function: Ctalk library.    (line 1008)
* __ctalkGUIPanePutStr () function:      Ctalk library.      (line 1012)
* __ctalkGUIPaneRefresh () function:     Ctalk library.      (line 1019)
* __ctalkGUISetBackground () function:   Ctalk library.      (line 1024)
* __ctalkGXLDrawTextFT () function:      Ctalk library.      (line  877)
* __ctalkHandleRunTimeException () function: Ctalk library.  (line 1056)
* __ctalkHandleRunTimeExceptionInternal () function: Ctalk library.
                                                             (line 1061)
* __ctalkHaveFTFaceBasic () function:    Ctalk library.      (line 1067)
* __ctalkHexIntegerToASCII () function:  Ctalk library.      (line 1073)
* __ctalkIgnoreSignal () C function:     SignalHandler.      (line   42)
* __ctalkIgnoreSignal () function:       Ctalk library.      (line 1083)
* __ctalkIncKeyRef () function:          Ctalk library.      (line 1086)
* __ctalkIncStringRef () C function:     String.             (line   87)
* __ctalkIncStringRef () C function <1>: String.             (line  103)
* __ctalkIncStringRef () C function <2>: String.             (line  123)
* __ctalkIncStringRef () function:       Ctalk library.      (line 1086)
* __ctalkInitFTLib () function:          Ctalk library.      (line 1181)
* __ctalkInitGLEW () function:           Ctalk library.      (line 1125)
* __ctalkInlineMethod () function:       Ctalk library.      (line 1129)
* __ctalkInstallHandler () C function:   SignalHandler.      (line   42)
* __ctalkInstallHandler () function:     Ctalk library.      (line 1147)
* __ctalkInstallPrefix () function:      Ctalk library.      (line 1154)
* __ctalkInstanceMethodInitReturnClass () function: Ctalk library.
                                                             (line 1170)
* __ctalkInstanceMethodParam () function: Ctalk library.     (line 1187)
* __ctalkInstanceVarIsCallersReceiver () function: Ctalk library.
                                                             (line 1177)
* __ctalkInstanceVarsFromClassObject () function: Ctalk library.
                                                             (line 1174)
* __ctalkIntFromCharConstant () function: Ctalk library.     (line 1192)
* __ctalkIntRadixToDecimalASCII () function: Ctalk library.  (line 1143)
* __ctalkIsCallersReceiver () function:  Ctalk library.      (line 1218)
* __ctalkIsClassMethod () function:      Ctalk library.      (line 1226)
* __ctalkIsClassVariableOf () function:  Ctalk library.      (line 1214)
* __ctalkIsDir () function:              Ctalk library.      (line 1222)
* __ctalkIsInstanceMethod () function:   Ctalk library.      (line 1225)
* __ctalkIsInstanceVariableOf () function: Ctalk library.    (line 1230)
* __ctalkIsObject () function:           Ctalk library.      (line 1234)
* __ctalkIsSubClassOf () function:       Ctalk library.      (line 1237)
* __ctalkLastMatchLength () function:    Ctalk library.      (line 1241)
* __ctalkLibcFnWithMethodVarArgs () function: Ctalk library. (line 1245)
* __ctalkLocalTime function:             Ctalk library.      (line  258)
* __ctalkLogMessage () function:         Ctalk library.      (line 1259)
* __ctalkLongDoubleToASCII function:     Ctalk library.      (line  512)
* __ctalkLongLongToDecimalASCII function: Ctalk library.     (line  395)
* __ctalkLongLongToHexASCII function:    Ctalk library.      (line  395)
* __ctalkLongToDecimalASCII function:    Ctalk library.      (line  395)
* __ctalkLongToHexASCII function:        Ctalk library.      (line  395)
* __ctalkMapGLXWindow () function:       Ctalk library.      (line 1282)
* __ctalkMapX11Window () function:       Ctalk library.      (line 1289)
* __ctalkMatchAt () function:            Ctalk library.      (line 1263)
* __ctalkMatchIndexAt () function:       Ctalk library.      (line 1263)
* __ctalkMatchPrintToks () function:     Ctalk library.      (line 1277)
* __ctalkMatchText () function:          Ctalk library.      (line 1272)
* __ctalkMethodObjectMessage () function: Ctalk library.     (line 1294)
* __ctalkMethodObjectMessage2Args () function: Ctalk library.
                                                             (line 1303)
* __ctalkMethodReturnClass () function:  Ctalk library.      (line 1316)
* __ctalkNArgs () function:              Ctalk library.      (line 1320)
* __ctalkNewFTFace () function:          Ctalk library.      (line 1328)
* __ctalkNewSignalEventInternal () function: Ctalk library.  (line 1333)
* __ctalkNMatches () function:           Ctalk library.      (line 1324)
* __ctalkNonLocalArgBlkReturn () function: Ctalk library.    (line 1338)
* __ctalkObjectPrintOn () function:      Ctalk library.      (line 1781)
* __ctalkObjValPtr () function:          Ctalk library.      (line 1343)
* __ctalkOpenX11InputClient () function: Ctalk library.      (line 1787)
* __ctalkPeekExceptionTrace () function: Ctalk library.      (line 1346)
* __ctalkPeekRunTimeException () function: Ctalk library.    (line 1350)
* __ctalkPendingException () function:   Ctalk library.      (line 1353)
* __ctalkPrintExceptionTrace function:   Ctalk library.      (line 1357)
* __ctalkPrintObject () function:        Ctalk library.      (line 1361)
* __ctalkPrintObject function:           C statements.       (line  266)
* __ctalkPrintObjectByName () function:  Ctalk library.      (line 1365)
* __ctalkProcessWait () function:        Ctalk library.      (line 1368)
* __ctalkRaiseX11Window () function:     Ctalk library.      (line 1388)
* __ctalkReceiverReceiverBecome () function: Ctalk library.  (line 1391)
* __ctalkReferenceObject () function:    Ctalk library.      (line 1395)
* __ctalkRegisterArgBlkReturn () function: Ctalk library.    (line 1400)
* __ctalkRegisterBoolReturn () function: Boolean.            (line   14)
* __ctalkRegisterBoolReturn () function <1>: Ctalk library.  (line 1463)
* __ctalkRegisterCharPtrReturn () function: Ctalk library.   (line 1469)
* __ctalkRegisterCharReturn () function: Ctalk library.      (line 1473)
* __ctalkRegisterCTypedef () function:   Ctalk library.      (line 1476)
* __ctalkRegisterExtraObject () function: Ctalk library.     (line 1481)
* __ctalkRegisterExtraObject function:   Return values.      (line   72)
* __ctalkRegisterFloatReturn () function: Ctalk library.     (line 1489)
* __ctalkRegisterIntReturn () function:  Ctalk library.      (line 1495)
* __ctalkRegisterLongLongIntReturn () function: Ctalk library.
                                                             (line 1499)
* __ctalkRegisterUserFunctionName () function: Ctalk library.
                                                             (line 1503)
* __ctalkRegisterUserObject () function: Ctalk library.      (line 1509)
* __ctalkRegisterUserObject function:    Return values.      (line   51)
* __ctalkReplaceVarEntry () function:    Ctalk library.      (line 1525)
* __ctalkRtGetMethod () function:        Ctalk library.      (line 1530)
* __ctalkRtGetMethodFn () function:      Ctalk library.      (line 1547)
* __ctalkRtMethodClass () function:      Ctalk library.      (line 1551)
* __ctalkRtMethodClassObject () function: Ctalk library.     (line 1555)
* __ctalkRtReceiver () function:         Ctalk library.      (line 1534)
* __ctalkRtReceiverObject () function:   Ctalk library.      (line 1539)
* __ctalkRtSaveSourceFileName () function: Ctalk library.    (line 1543)
* __ctalkSaveCVARArrayResource () function: Ctalk library.   (line  643)
* __ctalkSaveCVARResource () function:   Ctalk library.      (line  647)
* __ctalkSaveOBJECTMemberResource () function: Ctalk library.
                                                             (line  650)
* __ctalkSearchBuffer () function:       Ctalk library.      (line 1558)
* __ctalkSelectXFontFace () function:    Ctalk library.      (line 1562)
* __ctalkSelfPrintOn () function:        Ctalk library.      (line 1582)
* __ctalkSetExceptionTrace () function:  Ctalk library.      (line 1587)
* __ctalkSetObjectAttr () function:      Attributes.         (line   11)
* __ctalkSetObjectName () function:      Ctalk library.      (line 1591)
* __ctalkSetObjectScope () function:     Ctalk library.      (line 1594)
* __ctalkSetObjectScope function:        Scoping.            (line   54)
* __ctalkSetObjectValue () function:     Ctalk library.      (line 1609)
* __ctalkSetObjectValueAddr () function: Ctalk library.      (line 1614)
* __ctalkSetObjectValueBuf () function:  Ctalk library.      (line 1621)
* __ctalkSetObjectValueVar () function:  Ctalk library.      (line 1627)
* __ctalkSetObjPtr () function:          Ctalk library.      (line 1631)
* __ctalkSetRS () function:              Ctalk library.      (line 1634)
* __ctalkSignalHandlerBasic () function: Ctalk library.      (line 1639)
* __ctalkSleep () function:              Ctalk library.      (line  653)
* __ctalkSort () function:               Ctalk library.      (line  658)
* __ctalkSortByName () function:         Ctalk library.      (line  658)
* __ctalkSpawn () function:              Ctalk library.      (line 1659)
* __ctalkSplitText () function:          Ctalk library.      (line 1698)
* __ctalkStringifyName () function:      Ctalk library.      (line 1693)
* __ctalkStrToPtr () function:           Ctalk library.      (line  676)
* __ctalkStrToPtr () function <1>:       Ctalk library.      (line 1705)
* __ctalkStrToPtr function:              Ctalk library.      (line  681)
* __ctalkSymbolReferenceByName () function: Ctalk library.   (line 1721)
* __ctalkSysErrExceptionInternal () function: Ctalk library. (line 1709)
* __ctalkSystemSignalName () function:   Ctalk library.      (line 1716)
* __ctalkSystemSignalNumber () C function: SignalHandler.    (line   42)
* __ctalkSystemSignalNumber () function: Ctalk library.      (line 1729)
* __ctalkTemplateCallerCVARCleanup () function: Ctalk library.
                                                             (line 1735)
* __ctalkTerminalHeight () function:     Ctalk library.      (line 1746)
* __ctalkTerminalWidth () function:      Ctalk library.      (line 1747)
* __ctalkToCArrayElement () function:    Ctalk library.      (line 1752)
* __ctalkToCArrayElement function:       Translating.        (line   20)
* __ctalkToCCharPtr () function:         Ctalk library.      (line 1757)
* __ctalkToCCharPtr function:            Translating.        (line   25)
* __ctalkToCDouble () function:          Ctalk library.      (line 1761)
* __ctalkToCIntArrayElement () function: Ctalk library.      (line 1764)
* __ctalkToCIntArrayElement function:    Translating.        (line   29)
* __ctalkToCInteger () function:         Ctalk library.      (line 1768)
* __ctalkToCInteger function:            Translating.        (line   32)
* __ctalkToCLongInteger function:        Translating.        (line   36)
* __ctalkTrapException () function:      Ctalk library.      (line 1773)
* __ctalkTrapExceptionInternal () function: Ctalk library.   (line 1777)
* __ctalkUNIXSocketOpenReader () function: Ctalk library.    (line 1803)
* __ctalkUNIXSocketOpenWriter () function: Ctalk library.    (line 1811)
* __ctalkUNIXSocketRead () function:     Ctalk library.      (line 1819)
* __ctalkUNIXSocketShutdown () function: Ctalk library.      (line 1825)
* __ctalkUNIXSocketWrite () function:    Ctalk library.      (line 1834)
* __ctalkUTCTime () function:            Ctalk library.      (line 1840)
* __ctalkWarning () function:            Ctalk library.      (line 1848)
* __ctalkWrapText () function:           Ctalk library.      (line 1853)
* __ctalkX11ClearBufferRectangle () function: Ctalk library. (line 1874)
* __ctalkX11ClearRectangleBasic () function: Ctalk library.  (line 1880)
* __ctalkX11CloseClient () function:     Ctalk library.      (line 1862)
* __ctalkX11CloseParentPane () function: Ctalk library.      (line 1866)
* __ctalkX11Colormap () function:        Ctalk library.      (line 1884)
* __ctalkX11CopyPixmapBasic () function: Ctalk library.      (line 1890)
* __ctalkX11CreateGC () function:        Ctalk library.      (line 1901)
* __ctalkX11CreatePaneBuffer () function: Ctalk library.     (line 1907)
* __ctalkX11CreatePixmap () function:    Ctalk library.      (line 1904)
* __ctalkX11DeletePixmap () function:    Ctalk library.      (line 1914)
* __ctalkX11Display () function:         Ctalk library.      (line 1917)
* __ctalkX11DisplayHeight () function:   Ctalk library.      (line 1921)
* __ctalkX11DisplayWidth () function:    Ctalk library.      (line 1924)
* __ctalkX11FontCursor () function:      Ctalk library.      (line 1927)
* __ctalkX11FreeGC () function:          Ctalk library.      (line 1932)
* __ctalkX11FreePaneBuffer () function:  Ctalk library.      (line 1938)
* __ctalkX11FreeSizeHints () function:   Ctalk library.      (line 1944)
* __ctalkX11GetSizeHints () function:    Ctalk library.      (line 1947)
* __ctalkX11InputClient () function:     Ctalk library.      (line 1952)
* __ctalkX11MakeEvent () function:       Ctalk library.      (line 1957)
* __ctalkX11MoveWindow () function:      Ctalk library.      (line 1963)
* __ctalkX11OpenInputClient () function: Ctalk library.      (line 1966)
* __ctalkX11PaneClearRectangle () function: Ctalk library.   (line 2027)
* __ctalkX11PaneClearWindow () function: Ctalk library.      (line 2057)
* __ctalkX11PaneDrawCircleBasic () function: Ctalk library.  (line 1982)
* __ctalkX11PaneDrawLine () function:    Ctalk library.      (line 2033)
* __ctalkX11PaneDrawLineBasic () function: Ctalk library.    (line 2040)
* __ctalkX11PaneDrawPoint () function:   Ctalk library.      (line 2045)
* __ctalkX11PaneDrawPointBasic () function: Ctalk library.   (line 2052)
* __ctalkX11PaneDrawRectangle () function: Ctalk library.    (line 2062)
* __ctalkX11PanePutStr () function:      Ctalk library.      (line 1990)
* __ctalkX11PanePutStrBasic () function: Ctalk library.      (line 2068)
* __ctalkX11PaneRefresh () function:     Ctalk library.      (line 2074)
* __ctalkX11ParseGeometry () function:   Ctalk library.      (line 1973)
* __ctalkX11QueryFont () function:       Ctalk library.      (line 2079)
* __ctalkX11ResizePaneBuffer () function: Ctalk library.     (line 2012)
* __ctalkX11ResizePixmap () function:    Ctalk library.      (line 2017)
* __ctalkX11ResizeWindow () function:    Ctalk library.      (line 2022)
* __ctalkX11SetBackground () function:   Ctalk library.      (line 2084)
* __ctalkX11SetBackgroundBasic () function: Ctalk library.   (line 2090)
* __ctalkX11SetForegroundBasic () function: Ctalk library.   (line 2094)
* __ctalkX11SetResource () function:     Ctalk library.      (line 2098)
* __ctalkX11SetSizeHints () function:    Ctalk library.      (line 2002)
* __ctalkX11SetWMNameProp () function:   Ctalk library.      (line 2102)
* __ctalkX11SubWindowGeometry () function: Ctalk library.    (line 1030)
* __ctalkX11TextFromData () function:    Ctalk library.      (line 1047)
* __ctalkX11TextWidth () function:       Ctalk library.      (line 1050)
* __ctalkX11UseCursor () function:       Ctalk library.      (line 2107)
* __ctalkX11UseFontBasic () function:    Ctalk library.      (line 1562)
* __ctalkX11UseFontBasic () function <1>: Ctalk library.     (line 2115)
* __ctalkX11UseXRender () function:      Ctalk library.      (line 2111)
* __ctalkX11UsingXRender () function:    Ctalk library.      (line 2122)
* __ctalkX11XPMFromData () function:     Ctalk library.      (line 2130)
* __ctalkX11XPMInfo () function:         Ctalk library.      (line 2135)
* __ctalkXftAlpha () function:           Ctalk library.      (line 2196)
* __ctalkXftAscent () function:          Ctalk library.      (line 2181)
* __ctalkXftBlue () function:            Ctalk library.      (line 2196)
* __ctalkXftDescent () function:         Ctalk library.      (line 2185)
* __ctalkXftFgAlpha () function:         Ctalk library.      (line 2189)
* __ctalkXftFgBlue () function:          Ctalk library.      (line 2189)
* __ctalkXftFgGreen () function:         Ctalk library.      (line 2189)
* __ctalkXftFgRed () function:           Ctalk library.      (line 2189)
* __ctalkXftFontPathFirst () function:   Ctalk library.      (line 2203)
* __ctalkXftFontPathNext () function:    Ctalk library.      (line 2208)
* __ctalkXftGetStringDimensions () function: Ctalk library.  (line 2215)
* __ctalkXftGreen () function:           Ctalk library.      (line 2196)
* __ctalkXftHeight () function:          Ctalk library.      (line 2222)
* __ctalkXftInitialized () function:     Ctalk library.      (line 2231)
* __ctalkXftInitLib () function:         Ctalk library.      (line 2226)
* __ctalkXftListFontsEnd () function:    Ctalk library.      (line 2247)
* __ctalkXftListFontsFirst () function:  Ctalk library.      (line 2235)
* __ctalkXftListFontsNext () function:   Ctalk library.      (line 2243)
* __ctalkXftMajorVersion () function:    Ctalk library.      (line 2250)
* __ctalkXftMaxAdvance () function:      Ctalk library.      (line 2253)
* __ctalkXftMinorVersion () function:    Ctalk library.      (line 2257)
* __ctalkXftQualifyFontName () function: Ctalk library.      (line 2260)
* __ctalkXftRed () function:             Ctalk library.      (line 2196)
* __ctalkXftRevision () function:        Ctalk library.      (line 2263)
* __ctalkXftSelectedFamily () function:  Ctalk library.      (line 2266)
* __ctalkXftSelectedFontDescriptor () function: Ctalk library.
                                                             (line 2212)
* __ctalkXftSelectedFontDescriptor () function <1>: Ctalk library.
                                                             (line 2279)
* __ctalkXftSelectedFontPath () function: Ctalk library.     (line 2283)
* __ctalkXftSelectedPointSize () function: Ctalk library.    (line 2270)
* __ctalkXftSelectedSlant () function:   Ctalk library.      (line 2273)
* __ctalkXftSelectedWeight () function:  Ctalk library.      (line 2276)
* __ctalkXftSelectFont () function:      Ctalk library.      (line 2287)
* __ctalkXftSelectFontFromXLFD () function: Ctalk library.   (line 2295)
* __ctalkXftSetForeground () function:   Ctalk library.      (line 2313)
* __ctalkXftSetForgroundFromNamedColor () function: Ctalk library.
                                                             (line 2317)
* __ctalkXftVersion () function:         Ctalk library.      (line 2321)
* __ctalkXPMToGLTexture () function:     Ctalk library.      (line 2139)
* __ctalkXPMToGLXTexture () function:    Ctalk library.      (line 2139)
* __ctalk_arg () function:               Ctalk library.      (line 2326)
* __ctalk_arg_cleanup () function:       Ctalk library.      (line 2329)
* __ctalk_arg_internal () function:      Ctalk library.      (line 2335)
* __ctalk_arg_pop () function:           Ctalk library.      (line 2350)
* __ctalk_arg_pop_deref () function:     Ctalk library.      (line 2350)
* __ctalk_arg_value_internal () function: Ctalk library.     (line 2340)
* __ctalk_class_initialize () function:  Ctalk library.      (line 2356)
* __ctalk_define_class () function:      Ctalk library.      (line 2360)
* __ctalk_dictionary_add () function:    Ctalk library.      (line 2364)
* __ctalk_exitFn () function:            Ctalk library.      (line 2368)
* __ctalk_get_object () function:        Ctalk library.      (line 2382)
* __ctalk_init () function:              Ctalk library.      (line 2386)
* __ctalk_initFn () function:            Ctalk library.      (line 2374)
* __ctalk_initLocalObjects () function:  Ctalk library.      (line 2378)
* __ctalk_method () function:            Ctalk library.      (line 2390)
* __ctalk_new_object () function:        Ctalk library.      (line 2397)
* __ctalk_primitive_method () function:  Ctalk library.      (line 2400)
* __ctalk_process_exitFn () function:    Ctalk library.      (line 2406)
* __ctalk_receiver_pop () function:      Ctalk library.      (line 2411)
* __ctalk_receiver_push () function:     Ctalk library.      (line 2415)
* __ctalk_register_c_method_arg () function: Ctalk library.  (line 2426)
* __ctalk_self_internal () function:     Ctalk library.      (line 2439)
* __ctalk_self_internal_value () function: Ctalk library.    (line 2442)
* __ctalk_set_global () function:        Ctalk library.      (line 2448)
* __ctalk_set_local () function:         Ctalk library.      (line 2453)
* __ctalk_set_local_by_name () function: Ctalk library.      (line 2453)
* __ctalk_to_c_char () function:         Ctalk library.      (line 2462)
* __ctalk_to_c_char_ptr () function:     Ctalk library.      (line 2466)
* __ctalk_to_c_char_ptr function:        Translating.        (line   40)
* __ctalk_to_c_double () function:       Ctalk library.      (line 2471)
* __ctalk_to_c_double function:          Translating.        (line   45)
* __ctalk_to_c_int () function:          Ctalk library.      (line 2476)
* __ctalk_to_c_int function:             Translating.        (line   48)
* __ctalk_to_c_longlong () function:     Ctalk library.      (line 2483)
* __ctalk_to_c_longlong function:        Translating.        (line   51)
* __ctalk_to_c_ptr () function:          Ctalk library.      (line 2489)
* __ctalk_to_c_ptr_u () function:        Ctalk library.      (line 2493)
* __c_arg__ attribute:                   Method functions.   (line   18)
* __c_arg__ attribute <1>:               Method keywords.    (line    6)
* __edittext_delete_char () function:    Ctalk library.      (line 2500)
* __edittext_index_from_pointer () function: Ctalk library.  (line 2500)
* __edittext_index_from_pointer () function <1>: Ctalk library.
                                                             (line 2500)
* __edittext_insert_at_point () function: Ctalk library.     (line 2500)
* __edittext_insert_str_at_click () function: Ctalk library. (line 2500)
* __edittext_insert_str_at_point () function: Ctalk library. (line 2500)
* __edittext_line_end () function:       Ctalk library.      (line 2500)
* __edittext_line_start () function:     Ctalk library.      (line 2500)
* __edittext_next_char () function:      Ctalk library.      (line 2500)
* __edittext_next_line () function:      Ctalk library.      (line 2500)
* __edittext_next_page () function:      Ctalk library.      (line 2500)
* __edittext_point_to_click () function: Ctalk library.      (line 2500)
* __edittext_prev_char () function:      Ctalk library.      (line 2500)
* __edittext_prev_line () function:      Ctalk library.      (line 2500)
* __edittext_prev_page () function:      Ctalk library.      (line 2500)
* __edittext_rol_col_from_mark () function: Ctalk library.   (line 2500)
* __edittext_scroll_down () function:    Ctalk library.      (line 2500)
* __edittext_scroll_up () function:      Ctalk library.      (line 2500)
* __edittext_set_selection_owner () function: Ctalk library. (line 2500)
* __edittext_text_end () function:       Ctalk library.      (line 2500)
* __edittext_text_start () function:     Ctalk library.      (line 2500)
* __handleAppExit instance method (Application class): Application.
                                                             (line   39)
* __handleSigAbrt instance method (Application class): Application.
                                                             (line   52)
* __inspector_trace () function:         Ctalk library.      (line 2529)
* __inspect_get_global () function:      Ctalk library.      (line 2529)
* __inspect_get_receiver () function:    Ctalk library.      (line 2529)
* __inspect_globals () function:         Ctalk library.      (line 2529)
* __inspect_locals () function:          Ctalk library.      (line 2529)
* __inspect_long_help () function:       Ctalk library.      (line 2529)
* __inspect_short_help () function:      Ctalk library.      (line 2529)
* __LIST_HEAD macro:                     C Macros.           (line  111)
* __objRefCntDec function:               Ctalk library.      (line 2596)
* __objRefCntDec function.:              Ctalk library.      (line  448)
* __objRefCntInc function:               Ctalk library.      (line 2589)
* __objRefCntSet function:               Ctalk library.      (line 2604)
* __objRefCntZero function:              Ctalk library.      (line 2618)
* __objRefCntZero function <1>:          free.               (line    9)
* __objRefCntZero function.:             Ctalk library.      (line  448)
* __receiver_trace () function:          Ctalk library.      (line 2529)
* __refObj () function:                  Ctalk library.      (line 2630)
* __rt_init_library_paths () function:   Ctalk library.      (line 2546)
* __warning_trace () function:           Ctalk library.      (line 2553)
* __xalloc () function:                  Ctalk library.      (line 2557)
* __xfree () function:                   Ctalk library.      (line 2562)
* __xfree function:                      Ctalk library.      (line  238)
* __xrealloc () function:                Ctalk library.      (line 2580)
* | instance method (Character class):   Character.          (line  225)
* | instance method (Integer class):     Integer.            (line  126)
* | instance method (LongInteger class): LongInteger.        (line  110)
* | metacharacter:                       String.             (line  647)
* |= instance method (Integer class):    Integer.            (line  129)
* |= instance method (LongInteger class): LongInteger.       (line  113)
* || instance method (Boolean class):    Boolean.            (line   50)
* || instance method (Character class):  Character.          (line  228)
* || instance method (Float class):      Float.              (line   75)
* || instance method (Integer class):    Integer.            (line  133)
* || instance method (LongInteger class): LongInteger.       (line  117)
* ~ instance method (Character class):   Character.          (line  154)
* ~ instance method (Integer class):     Integer.            (line  143)
* ~ instance method (LongInteger class): LongInteger.        (line  121)
* ~ operator:                            Prefixes.           (line    6)
* abs(3) C function:                     CFunction.          (line   19)
* abs(3) C function <1>:                 abs.                (line    6)
* acceptSock instance method (TCPIPNetworkStreamReader class): TCPIPNetworkStreamReader.
                                                             (line   22)
* acceptSock instance method (TCPIPV6NetworkStreamReader class): TCPIPV6NetworkStreamReader.
                                                             (line   17)
* acos(3) C function:                    CFunction.          (line   22)
* acos(3) C function <1>:                acos.               (line    6)
* acosh(3) C function:                   CFunction.          (line   25)
* acosh(3) C function <1>:               acosh-asinh-atanh.  (line    6)
* addBuffer instance method (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   78)
* addChild instance method (TreeNode class): TreeNode.       (line   38)
* addInstanceVariable instance method (Object class): Object.
                                                             (line  195)
* addressOf instance method (Object class): Object.          (line  198)
* addrInfo instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line   78)
* addrInfo instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line   74)
* addText instance method (X11TextPane class): X11TextPane.  (line  147)
* alpha instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  336)
* alpha instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   95)
* alpha instance variable (Pen class):   Pen.                (line   17)
* animationHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  166)
* ANSIButtonPane class:                  ANSIButtonPane.     (line    6)
* ANSIButtonPane class <1>:              ANSIMessageBoxPane. (line    6)
* ANSILabelPane class:                   ANSILabelPane.      (line    6)
* ANSIListBoxPane class:                 ANSIListBoxPane.    (line    6)
* ANSIListBoxPane class <1>:             ANSIScrollingListBoxPane.
                                                             (line    6)
* ANSIProgressBarPane class:             ANSIProgressBarPane.
                                                             (line    6)
* ANSIScrollingListBoxPane class:        ANSIScrollingListBoxPane.
                                                             (line    6)
* ANSIScrollPane class:                  ANSIScrollPane.     (line    6)
* ANSITerminalPane class:                ANSITerminalPane.   (line    6)
* ANSITerminalStream class:              ANSITerminalStream. (line    6)
* ANSITextBoxPane class:                 ANSITextBoxPane.    (line    6)
* ANSITextEntryPane class:               ANSITextEntryPane.  (line    6)
* ANSIWidgetPane class:                  ANSIWidgetPane.     (line    6)
* ANSIYesNoBoxPane class:                ANSIYesNoBoxPane.   (line    6)
* append instance method (List class):   List.               (line   45)
* append instance method (SortedList class): SortedList.     (line   42)
* appendLine instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   57)
* appendLine instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   70)
* appendLine instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  118)
* appendLine instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   59)
* Application class:                     Application.        (line    6)
* ARG macro:                             C Macros.           (line   16)
* ARG macro <1>:                         Templates.          (line  161)
* ARG() () function (macro):             Ctalk library.      (line 1740)
* argFrameTop instance variable (Method class): Method.      (line   80)
* Arguments, command line:               Application.        (line   19)
* Arguments, command line <1>:           Application.        (line  189)
* Array class:                           Array.              (line    6)
* Array class <1>:                       Cautions.           (line   25)
* arrow instance method (X11Cursor class): X11Cursor.        (line   38)
* arrowCursor instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  111)
* asAddrString instance method (Symbol class): Symbol.       (line   66)
* ascent instance variable (X11Font class): X11Font.         (line   21)
* ascent instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   77)
* asCharacter instance method (Magnitude class): Magnitude.  (line   26)
* asCharacter instance method (Magnitude class) <1>: String. (line  201)
* asctime(3) C function:                 CFunction.          (line   28)
* asctime(3) C function <1>:             asctime.            (line    6)
* asDecimalString instance method (Integer class): Integer.  (line  140)
* asFloat instance method (Magnitude class): Magnitude.      (line   29)
* asFloat instance method (Object class): Object.            (line  202)
* asHexString instance method (Integer class): Integer.      (line  140)
* asin(3) C function:                    CFunction.          (line   32)
* asin(3) C function <1>:                asin.               (line    6)
* asinh(3) C function:                   CFunction.          (line   35)
* asinh(3) C function <1>:               acosh-asinh-atanh.  (line    6)
* asInteger instance method (Float class): Float.            (line   72)
* asInteger instance method (Magnitude class): Magnitude.    (line   35)
* asInteger instance method (String class): String.          (line  153)
* asList instance method (String class): String.             (line  156)
* asLongInteger instance method (Magnitude class): Magnitude.
                                                             (line   38)
* AssociativeArray class:                AssociativeArray.   (line    6)
* asString instance method (Array class): Array.             (line   47)
* asString instance method (Array class) <1>: String.        (line   34)
* asString instance method (Integer class): Integer.         (line  140)
* asString instance method (List class): String.             (line   34)
* asString instance method (Object class): Object.           (line  205)
* asString instance method (Symbol class): Symbol.           (line   70)
* asString instance method (Vector class): Vector.           (line   58)
* asSymbol instance method (Object class): Object.           (line  208)
* at instance method (Array class):      Array.              (line   54)
* at instance method (AssociativeArray class): AssociativeArray.
                                                             (line   82)
* at instance method (Collection class): Collection.         (line   54)
* at instance method (String class):     String.             (line  160)
* at method (Array class):               Ctalk library.      (line  283)
* atanh(3) C function:                   acosh-asinh-atanh.  (line    6)
* atexit(3) C function:                  atexit.             (line    6)
* atof(3) C function:                    CFunction.          (line   38)
* atof(3) C function <1>:                atof.               (line    6)
* atoi(3) C function:                    CFunction.          (line   41)
* atoi(3) C function <1>:                atoi.               (line    6)
* atol(3) C function:                    CFunction.          (line   44)
* atol(3) C function <1>:                atol.               (line    6)
* atoll(3) C function:                   CFunction.          (line   47)
* atoll(3) C function <1>:               atoll.              (line    6)
* atPut instance method (Array class):   Array.              (line   57)
* atPut instance method (AssociativeArray class): AssociativeArray.
                                                             (line   85)
* atPut instance method (Collection class): Collection.      (line   57)
* atPut instance method (String class):  String.             (line  165)
* atPut method (AssociativeArray class): Ctalk library.      (line  283)
* attach method (Pane class):            Pane.               (line   54)
* attachTo instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  181)
* attachTo instance method (X11Pane class): X11Pane.         (line  118)
* attachTo instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  197)
* attachTo instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  178)
* attachTo instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  171)
* attachTo instance method (X11TextPane class): X11TextPane. (line  152)
* attributes instance variable (SignalHandler class): SignalHandler.
                                                             (line   51)
* Attributes, object:                    Attributes.         (line    6)
* autoconf:                              GNU tools.          (line    6)
* automake:                              GNU tools.          (line    6)
* background instance method (X11Bitmap class): X11Bitmap.   (line   31)
* background instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  211)
* background instance method (X11Pane class): X11Pane.       (line  122)
* background instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  184)
* background instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  178)
* background instance method (X11TextPane class): X11TextPane.
                                                             (line  159)
* Background method processes:           Object.             (line  489)
* backgroundColor instance variable (X11Pane class): X11Pane.
                                                             (line   31)
* backgroundMethodObjectMessage instance method (Object class): Object.
                                                             (line  213)
* backgroundMethodObjectMessage instance method (Object class) <1>: Ctalk library.
                                                             (line  114)
* basicNew instance method (Object class): Object.           (line  244)
* basicNew instance method (Vector class): Vector.           (line   65)
* basicObject instance method (Symbol class): Symbol.        (line   76)
* become instance method (Object class): Object.             (line  286)
* bevel instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  115)
* biosKey method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   42)
* bitComp instance method (Character class): Character.      (line  157)
* bitComp instance method (Integer class): Integer.          (line  119)
* bitComp instance method (LongInteger class): LongInteger.  (line  103)
* Bitmap class:                          Bitmap.             (line    5)
* blinkOnOff instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  112)
* blue instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  100)
* boldOnOff instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  117)
* Boolean class:                         Boolean.            (line    6)
* boolFalse class variable (Boolean class): Boolean.         (line   23)
* boolFalse class variable (Boolean class) <1>: Ctalk library.
                                                             (line 1463)
* boolTrue class variable (Boolean class): Boolean.          (line   23)
* boolTrue class variable (Boolean class) <1>: Ctalk library.
                                                             (line 1463)
* BOOLVAL macro () function:             Ctalk library.      (line 2643)
* border instance variable (ANSITerminalPane class): ANSITerminalPane.
                                                             (line   96)
* border instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  134)
* borderColor instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  138)
* borderLess instance variable (ANSILabelPane class): ANSILabelPane.
                                                             (line   39)
* borderWidth instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  142)
* borderWidth instance variable (X11Pane class): X11Pane.    (line   38)
* bottom instance variable (Rectangle class): Rectangle.     (line   73)
* bufLength instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  111)
* button instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  115)
* button1 instance variable (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   49)
* button2 instance variable (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   50)
* buttonPressHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  170)
* buttonState instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  174)
* buttonText instance variable (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   14)
* C expressions:                         C statements.       (line   44)
* C library compatibility:               C library functions.
                                                             (line   20)
* C library functions:                   C library functions.
                                                             (line    6)
* cAbs method (CFunction class):         CFunction.          (line   19)
* cAcos method (CFunction class):        CFunction.          (line   22)
* cAcosh method (CFunction class):       CFunction.          (line   25)
* CalendarTime Class:                    CalendarTime.       (line    6)
* Callback methods:                      Method.             (line  124)
* calloc(3) C function:                  calloc.             (line    6)
* callStackTrace instance method (Object class): Object.     (line  289)
* callStackTrace instance method (String class): String.     (line  219)
* canFocus instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  146)
* cAPIFunctionSearch instance method (LibrarySearch class): LibrarySearch.
                                                             (line   24)
* cAscTime method (CFunction class):     CFunction.          (line   28)
* cAsin method (CFunction class):        CFunction.          (line   32)
* cAsinh method (CFunction class):       CFunction.          (line   35)
* cAtof method (CFunction class):        CFunction.          (line   38)
* cAtoi method (CFunction class):        CFunction.          (line   41)
* cAtol method (CFunction class):        CFunction.          (line   44)
* cAtoll method (CFunction class):       CFunction.          (line   47)
* cbrt(3) C function:                    CFunction.          (line   50)
* cbrt(3) C function <1>:                cbrt.               (line    6)
* cCbrt method (CFunction class):        CFunction.          (line   50)
* cCeil method (CFunction class):        CFunction.          (line   53)
* cChdir method (CFunction class):       CFunction.          (line   56)
* cClearErr method (CFunction class):    CFunction.          (line   60)
* cClock method (CFunction class):       CFunction.          (line   64)
* cCopySign method (CFunction class):    CFunction.          (line   67)
* cCos method (CFunction class):         CFunction.          (line   70)
* cCosh method (CFunction class):        CFunction.          (line   73)
* cCTime method (CFunction class):       CFunction.          (line   76)
* cDiffTime method (CFunction class):    CFunction.          (line   83)
* ceil(3) C function:                    CFunction.          (line   53)
* ceil(3) C function <1>:                ceil.               (line    6)
* center instance variable (Circle class): Circle.           (line  115)
* cErf method (CFunction class):         CFunction.          (line   86)
* cErfc method (CFunction class):        CFunction.          (line   89)
* cExp method (CFunction class):         CFunction.          (line   92)
* cExpm1 method (CFunction class):       CFunction.          (line   95)
* cFabs method (CFunction class):        CFunction.          (line   98)
* CFunction class:                       CFunction.          (line    6)
* CFunction class <1>:                   Templates.          (line   47)
* cGetchar method (CFunction class):     CFunction.          (line  105)
* cGetCwd method (CFunction class):      CFunction.          (line  108)
* cGetEnv method (CFunction class):      CFunction.          (line  111)
* cGetPID method (CFunction class):      CFunction.          (line  114)
* cGetStr method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   47)
* char * C data type:                    C statements.       (line  150)
* char ** C data type:                   C statements.       (line  135)
* char C data type:                      C statements.       (line  138)
* Character class:                       Character.          (line    6)
* Character classes:                     String.             (line  601)
* Character constants:                   Character.          (line   12)
* charPos instance method (String class): String.            (line  222)
* charPosR instance method (String class): String.           (line  228)
* charsRead instance variable (UNIXNetworkStreamReader class): UNIXNetworkStreamReader.
                                                             (line   95)
* charsWritten instance variable (UNIXNetworkStreamWriter class): UNIXNetworkStreamWriter.
                                                             (line   17)
* CHAR_CONSTANT_VALUE macro:             Character.          (line   48)
* chDir instance method (DirectoryStream class): DirectoryStream.
                                                             (line   87)
* chdir(3) C function:                   CFunction.          (line   56)
* chdir(3) C function <1>:               chdir.              (line    6)
* childRefresh instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  121)
* children instance variable (Pane class): Pane.             (line   16)
* children instance variable (TreeNode class): TreeNode.     (line   21)
* chomp instance method (String class):  String.             (line  234)
* Circle class:                          Circle.             (line    6)
* Class documentation:                   Documentation.      (line    6)
* Class initialization:                  Class initialization.
                                                             (line    6)
* class instance method (Object class):  Object.             (line  292)
* Class library search path:             Application.        (line   58)
* Class library search path <1>:         Translating.        (line   71)
* Class variable documentation:          Documentation.      (line    6)
* Class variable documentation <1>:      Documentation.      (line  166)
* classdoc utility program:              Documentation.      (line  159)
* Classes:                               Classes.            (line    6)
* classInit class variable (X11Pane class): X11Pane.         (line  112)
* classInit method (ReadFileStream class): ReadFileStream.   (line   68)
* CLASSLIBDIRS environment variable:     Application.        (line   58)
* CLASSLIBDIRS environment variable <1>: Translating.        (line   71)
* ClassLibraryTree class:                ClassLibraryTree.   (line    6)
* classMethod keyword:                   Method keywords.    (line   10)
* className instance method (Object class): Object.          (line  308)
* CLASSNAME macro:                       C Macros.           (line   22)
* classObject instance method (Object class): Object.        (line  311)
* classSearchPath instance method (Application class): Application.
                                                             (line   58)
* classVariable keyword:                 Method keywords.    (line   13)
* cleanup instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   67)
* cleanup instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   74)
* cleanup instance method (ANSIMessageBoxPane class): ANSIMessageBoxPane.
                                                             (line   37)
* cleanup instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  121)
* cleanup instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   78)
* cleanup instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   64)
* cleanup instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   60)
* clear instance method (Rectangle class): Rectangle.        (line   89)
* clear instance method (X11Bitmap class): X11Bitmap.        (line   37)
* clear instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  217)
* clear instance method (X11TextPane class): X11TextPane.    (line  163)
* clear method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  142)
* clear method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   51)
* clearerr(3) C function:                CFunction.          (line   60)
* clearLine instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   68)
* clearRectangle instance method (X11Bitmap class): X11Bitmap.
                                                             (line   39)
* clearRectangle instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  220)
* clearRectangle instance method (X11Pane class): X11Pane.   (line  128)
* clearSelection instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  183)
* clearWindow instance method (X11Pane class): X11Pane.      (line  132)
* clientFD instance variable (X11TerminalStream class): X11TerminalStream.
                                                             (line  100)
* cLlrint method (CFunction class):      CFunction.          (line  121)
* cLlrintf method (CFunction class):     CFunction.          (line  122)
* cLlrintl method (CFunction class):     CFunction.          (line  123)
* clock(3) C function:                   CFunction.          (line   64)
* clock(3) C function <1>:               clock.              (line    6)
* closeSock instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line   87)
* closeSock instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line   83)
* closeSocket instance method (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   44)
* closeStream instance method (FileStream class): FileStream.
                                                             (line   46)
* closeStream method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  145)
* cLrint method (CFunction class):       CFunction.          (line  118)
* cLrintf method (CFunction class):      CFunction.          (line  119)
* cLrintl method (CFunction class):      CFunction.          (line  120)
* cmdLineArgc instance variable (Application class): Application.
                                                             (line   14)
* cmdLineArgs instance variable (Application class): Application.
                                                             (line   19)
* Collection class:                      Collection.         (line    6)
* colormap instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  197)
* colorName instance variable (Pen class): Pen.              (line   23)
* Command line arguments:                Application.        (line   19)
* Command line arguments <1>:            Application.        (line  189)
* Command line options:                  Invoking.           (line   41)
* cone instance method (GLUTApplication class): GLUTApplication.
                                                             (line  117)
* consoleReadLine instance method (String class): String.    (line  239)
* Constants, character:                  Character.          (line   12)
* container instance variable (X11Pane class): X11Pane.      (line   42)
* contains instance method (String class): String.           (line  273)
* contains instance method (Vector class): Vector.           (line   99)
* content instance variable (TreeNode class): TreeNode.      (line   23)
* copy (X11Bitmap SRCBITMAP, Integer SRCX, Integer SRCY, Integer SRCWIDTH, Integer SRCHEIGHT, Integer DESTX, Integer DESTY): X11Bitmap.
                                                             (line   42)
* copy instance method (Object class):   Object.             (line  318)
* copy instance method (Object class) <1>: Ctalk library.    (line 1525)
* copy instance method (X11Bitmap class): X11Bitmap.         (line   42)
* copy instance method (X11CanvasPane class): X11CanvasPane. (line  225)
* copy instance method (X11CanvasPane class) <1>: Ctalk library.
                                                             (line 1897)
* Copying:                               Copying.            (line    6)
* copysign(3) C function:                CFunction.          (line   67)
* copysign(3) C function <1>:            copysign.           (line    6)
* cos(3) C function:                     CFunction.          (line   70)
* cos(3) C function <1>:                 cos.                (line    6)
* cosh(3) C function:                    CFunction.          (line   73)
* cosh(3) C function <1>:                cosh.               (line    6)
* CPLUSPLUS_HEADER_X exception:          Exception.          (line  118)
* cPutStr method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   55)
* cRand method (CFunction class):        CFunction.          (line  151)
* create instance method (X11Bitmap class): X11Bitmap.       (line   47)
* createMainWindow instance method (GLUTApplication class): GLUTApplication.
                                                             (line  113)
* createSocketBasic instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line   93)
* createSocketBasic instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line   90)
* cStrcasecmp method (CFunction class):  CFunction.          (line  129)
* cStrcat method (CFunction class):      CFunction.          (line  128)
* cStrcat method (CFunction class) <1>:  strcat-strcpy.      (line    6)
* cStrcmp method (CFunction class):      CFunction.          (line  133)
* cStrcmp method (CFunction class) <1>:  strcat-strcpy.      (line    6)
* cStrcmp method (CFunction class) <2>:  strcat-strcpy.      (line    6)
* cStrcpy method (CFunction class):      strcat-strcpy.      (line    6)
* cStrlen method (CFunction class):      CFunction.          (line  136)
* cStrncasecmp method (CFunction class): CFunction.          (line  142)
* cStrncasecmp method (CFunction class) <1>: strncat-strncpy.
                                                             (line    6)
* cStrncat method (CFunction class):     CFunction.          (line  139)
* cStrncat method (CFunction class) <1>: strncat-strncpy.    (line    6)
* cStrncmp method (CFunction class):     CFunction.          (line  145)
* cStrncmp method (CFunction class) <1>: strncat-strncpy.    (line    6)
* cStrncpy method (CFunction class):     CFunction.          (line  148)
* cStrncpy method (CFunction class) <1>: strncat-strncpy.    (line    6)
* ctalk command:                         Invoking.           (line   14)
* Ctalk language features:               C.                  (line    6)
* ctalkdefs.h include file:              C Macros.           (line    6)
* CTALK_DIRECTORY_MODE macro:            DirectoryStream.    (line   74)
* ctcc command:                          Invoking.           (line   28)
* ctdb command:                          Invoking.           (line   32)
* ctdb command <1>:                      C statements.       (line  277)
* ctedit.ca demonstration program:       X11TextEditorPane.  (line   80)
* cTime instance method (CTime class):   CTime.              (line   26)
* cTime instance method (CTime class) <1>: ctime.            (line   14)
* ctime(3) C function:                   CFunction.          (line   76)
* ctime(3) C function <1>:               ctime.              (line    6)
* cTimeString instance method (CalendarTime class): CalendarTime.
                                                             (line   96)
* ctpp preprocessor:                     Invoking.           (line   11)
* ctpp preprocessor <1>:                 Preprocessor.       (line    6)
* cube instance method (GLUTApplication class): GLUTApplication.
                                                             (line  122)
* cursor instance variable (Pane class): Pane.               (line   19)
* cursorPos instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  125)
* cursorPos instance method (X11TextPane class): X11TextPane.
                                                             (line  156)
* cursorPos method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  149)
* cusorPosY method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   58)
* Cutting text:                          X11TextEditorPane.  (line   45)
* dayName instance method (CalendarTime class): CalendarTime.
                                                             (line  109)
* Debugging:                             C statements.       (line  207)
* decReferenceCount instance method (Object class): Object.  (line  324)
* defaultCursor instance method (X11Pane class): X11Pane.    (line  138)
* defaultFormat instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  187)
* defaultHandler instance method (SignalHandler class): SignalHandler.
                                                             (line   69)
* DEFAULT_TCPIP_PORT:                    TCPIPV6NetworkStreamWriter.
                                                             (line   16)
* defineAnimationFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  126)
* defineButtonBoxFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  127)
* definedClassMethod instance method (Method class): Method. (line  111)
* definedClassMethod instance method (Object class): Method. (line  101)
* defineDialsFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  128)
* definedInstanceMethod instance method (Method class): Method.
                                                             (line  113)
* definedInstanceMethod instance method (Object class): Method.
                                                             (line  101)
* defineDisplayFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  129)
* defineEntryFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  130)
* defineIdleFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  131)
* defineKeyboardFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  132)
* defineMenuStateFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  133)
* defineMenuStatusFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  134)
* defineMotionFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  135)
* defineMouseFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  136)
* defineOverlayDisplayFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  137)
* definePassiveMotionFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  138)
* defineRegion instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  327)
* defineReshapeFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  161)
* defineSpaceballMotionFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  139)
* defineSpaceballRotateFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  140)
* defineSpecialFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  141)
* defineTabletButtonFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  142)
* defineTabletMotionFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  143)
* defineTimerFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  145)
* defineVisiblityFn instance method (GLUTApplication class): GLUTApplication.
                                                             (line  144)
* delete instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  129)
* delete instance method (Collection class): Collection.     (line   60)
* delete instance method (Object class): Object.             (line  327)
* delete instance method (X11Bitmap class): X11Bitmap.       (line   50)
* deleteAndClose instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  343)
* deleteAndClose instance method (X11Pane class): X11Pane.   (line  142)
* deleteFile instance method (FileStream class): FileStream. (line   55)
* deleteLastException instance method (Exception class): Exception.
                                                             (line  153)
* deletePaneBuffer method (Pane class):  Pane.               (line   60)
* depth instance variable (X11Bitmap class): X11Bitmap.      (line   13)
* depth instance variable (X11Pane class): X11Pane.          (line   47)
* deref instance method (Symbol class):  Symbol.             (line   96)
* deref instance method (Symbol class) <1>: Prefixes.        (line   44)
* descent instance variable (X11Font class): X11Font.        (line   21)
* descent instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   80)
* detach instance method (Key class):    Key.                (line  150)
* difftime(3) C function:                CFunction.          (line   83)
* difftime(3) C function <1>:            difftime.           (line    6)
* dimension instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   82)
* dimension instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   81)
* dimension instance method (Rectangle class): X11ScrollBarPane.
                                                             (line   15)
* dimensions instance method (Rectangle class): Rectangle.   (line  105)
* directCopy instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  374)
* Directory mode:                        DirectoryStream.    (line   71)
* directoryList instance method (DirectoryStream class): DirectoryStream.
                                                             (line   90)
* DirectoryStream class:                 DirectoryStream.    (line    6)
* disableExceptionTrace instance method (Object class): Object.
                                                             (line  334)
* dismissButton instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   33)
* display instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   70)
* display instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   85)
* display instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   85)
* DisplayFont class:                     DisplayFont.        (line    5)
* displayHeight instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  347)
* displayHeight instance variable (X11Pane class): X11Pane.  (line  145)
* displayPtr instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  201)
* displayText instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  193)
* displayText instance method (X11TextPane class): X11TextPane.
                                                             (line  166)
* displayWidth instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  347)
* displayWidth instance variable (X11Pane class): X11Pane.   (line  148)
* do statements:                         Control structures. (line    6)
* docDir instance method (Object class): Object.             (line  337)
* Documentation, methods and classes:    Documentation.      (line    6)
* Documentation, methods, classes and variables: Documentation.
                                                             (line    6)
* dodecahedron instance method (GLUTApplication class): GLUTApplication.
                                                             (line  181)
* dom instance variable (CalendarTime class): CalendarTime.  (line   38)
* double C data type:                    C statements.       (line  141)
* dow instance variable (CalendarTime class): CalendarTime.  (line   38)
* doy instance variable (CalendarTime class): CalendarTime.  (line   38)
* dpi instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   68)
* dragging instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  119)
* dragStart instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  146)
* draw instance method (Circle class):   Circle.             (line  125)
* draw instance method (Line class):     Line.               (line   62)
* draw instance method (Point class):    Point.              (line   30)
* draw instance method (Rectangle class): Rectangle.         (line   95)
* draw instance method (X11LabelPane class): X11LabelPane.   (line  277)
* drawCircle instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  334)
* drawFilledRectangle instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  361)
* drawFmtText instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  352)
* drawFmtTextFT instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  356)
* drawFmtTextW instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  362)
* drawLine instance method (X11Bitmap class): X11Bitmap.     (line   53)
* drawLine instance method (X11Bitmap class) <1>: Line.      (line   67)
* drawLine instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  348)
* drawPoint instance method (X11Bitmap class): X11Bitmap.    (line   62)
* drawPoint instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  344)
* drawRectangle instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  369)
* drawText instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  367)
* drawTextFT instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  378)
* drawTextW instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  390)
* drawThumb instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  188)
* drawWithPen instance method (Line class): Line.            (line   71)
* drawWithPen instance method (Point class): Point.          (line   38)
* drawWithPen instance method (Rectangle class): Rectangle.  (line  100)
* dump instance method (Object class):   Object.             (line  342)
* dump instance method (Object class) <1>: C statements.     (line  266)
* Editing, text:                         Ctalk library.      (line 2500)
* Emacs, GNU:                            GNU tools.          (line    6)
* enableExceptionTrace instance method (Object class): Object.
                                                             (line  347)
* end instance variable (Line class):    Line.               (line   54)
* envVarExists instance method (String class): String.       (line  281)
* eraseThumb instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  188)
* erf(3) C function:                     CFunction.          (line   86)
* erf(3) C function <1>:                 erf.                (line    6)
* erfc(3) C function:                    CFunction.          (line   89)
* erfc(3) C function <1>:                erfc.               (line    6)
* errno:                                 SystemErrnoException.
                                                             (line   19)
* errno <1>:                             Ctalk library.      (line  595)
* errno build-in variable:               SystemErrnoException.
                                                             (line    6)
* errno macro:                           Errors.             (line   58)
* errno macro <1>:                       Ctalk library.      (line  376)
* errorColumn instance variable (Method class): Method.      (line   77)
* errorLine instance variable (Method class): Method.        (line   74)
* Errors:                                Errors.             (line    6)
* Escape sequences, character:           Character.          (line   12)
* eval keyword:                          Method keywords.    (line   34)
* Event class:                           Event.              (line    6)
* eventClass instanceVariable (InputEvent class): InputEvent.
                                                             (line    9)
* eventData instanceVariable (InputEvent class): InputEvent. (line   14)
* eventMask instance variable (X11TerminalStream class): X11TerminalStream.
                                                             (line  103)
* Example program, text editor:          X11TextEditorPane.  (line  240)
* Exception class:                       Exception.          (line    6)
* exceptionHandler instance method (Exception class): Exception.
                                                             (line  163)
* Exceptions:                            Errors.             (line    6)
* execC instance method (Application class): Application.    (line   68)
* exists instance method (FileStream class): FileStream.     (line   60)
* exitHandler instance variable (Application class): Application.
                                                             (line   24)
* exp(3) C function:                     CFunction.          (line   92)
* exp(3) C function <1>:                 exp.                (line    6)
* expm1(3) C function:                   CFunction.          (line   95)
* expm1(3) C function <1>:               expm1.              (line    6)
* exposeHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  206)
* Expr class:                            Expr.               (line    6)
* extensions instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  415)
* Externs and C variables:               Externs.            (line   63)
* fabs(3) C function:                    CFunction.          (line   98)
* fabs(3) C function <1>:                fabs.               (line    6)
* fabsf(3) C function:                   CFunction.          (line   98)
* fabsl(3) C function:                   CFunction.          (line   98)
* faceBold instance method (X11Bitmap class): X11Bitmap.     (line   67)
* faceBold instance method (X11Pane class): X11Pane.         (line  151)
* faceBold instance method (X11TextPane class): X11TextPane. (line  170)
* faceBoldItalic instance method (X11Bitmap class): X11Bitmap.
                                                             (line   67)
* faceBoldItalic instance method (X11Pane class): X11Pane.   (line  151)
* faceBoldItalic instance method (X11TextPane class): X11TextPane.
                                                             (line  170)
* faceItalic instance method (X11Bitmap class): X11Bitmap.   (line   67)
* faceItalic instance method (X11Pane class): X11Pane.       (line  151)
* faceItalic instance method (X11TextPane class): X11TextPane.
                                                             (line  170)
* faceRegular instance method (X11Bitmap class): X11Bitmap.  (line   67)
* faceRegular instance method (X11Pane class): X11Pane.      (line  151)
* faceRegular instance method (X11TextPane class): X11TextPane.
                                                             (line  170)
* FALSE_ASSERTION_X exception:           Exception.          (line  118)
* family instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   55)
* fclose(3) C function:                  fclose.             (line    6)
* fegetround(3) C function:              fegetround.         (line    6)
* feholdexcept(3) C function:            feholdexcept.       (line    6)
* feof(3) C function:                    feof.               (line    6)
* ferror(3) C function:                  ferror.             (line    6)
* fesetround(3) C function:              fesetround.         (line    6)
* fetestexcepts(3) C function:           fetestexcept.       (line    6)
* fflush(3) C function:                  fflush.             (line    6)
* fgAlpha instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   57)
* fgBlue instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   57)
* fgetc(3) C function:                   fgetc.              (line    6)
* fgetpos(3) C function:                 fgetpos.            (line    6)
* fgets(3) C function:                   fgets.              (line    6)
* fgGreen instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   57)
* fgRed instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   57)
* FILEEOF macro:                         C Macros.           (line   52)
* FileStream class:                      FileStream.         (line    6)
* FILE_ALREADY_OPEN_X exception:         Exception.          (line  118)
* FILE_IS_DIRECTORY_X exception:         Exception.          (line  118)
* fill instance method (Rectangle class): Rectangle.         (line  110)
* fillWithPen instance method (Rectangle class): Rectangle.  (line  114)
* float C data type:                     C statements.       (line  141)
* Float class:                           Float.              (line    6)
* floor(3) C function:                   floor.              (line    6)
* fmod(3) C function:                    fmod.               (line    6)
* FMT_0XHEX macro:                       C Macros.           (line   55)
* focusHighlightOnOff instance method (void): ANSIButtonPane.
                                                             (line   32)
* font instance method (X11Bitmap class): X11Bitmap.         (line   76)
* font instance method (X11LabelPane class): X11LabelPane.   (line  258)
* font instance method (X11Pane class):  X11Pane.            (line   66)
* font instance method (X11Pane class) <1>: X11Pane.         (line  161)
* font instance method (X11TextPane class): X11TextPane.     (line  179)
* Font specification, determining:       String.             (line  307)
* fontDesc instance variable (X11Font class): X11Font.       (line   27)
* fontDescStr instance variable (X11Pane class): X11Pane.    (line   57)
* fontId instance variable (X11Font class): X11Font.         (line   32)
* Fonts, selecting:                      X11TextEditorPane.  (line   80)
* fontVar instance variable (X11Pane class): X11Pane.        (line   53)
* fontVar instance variable (X11Pane class) <1>: X11TextEditorPane.
                                                             (line   80)
* fontVar instancevariable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line   86)
* fopen(3) C function:                   fopen.              (line    6)
* for statements:                        Control structures. (line    6)
* foreground instance method (X11Bitmap class): X11Bitmap.   (line   79)
* foreground instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  381)
* foreground instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  178)
* foreground instance method (X11TextPane class): X11TextPane.
                                                             (line  217)
* foregroundColor instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  126)
* format instance method (TreeNode class): TreeNode.         (line   41)
* formatClassVariable instance method (ObjectInspector class): ObjectInspector.
                                                             (line   33)
* formatInstanceVariable instance method (ObjectInspector class): ObjectInspector.
                                                             (line   39)
* formatObject instance method (Object class): C statements. (line  266)
* formatObject instance method (ObjectInspector class): ObjectInspector.
                                                             (line   44)
* fprintf(3) C function:                 fprintf.            (line    6)
* fputc(3) C function:                   fputc.              (line    6)
* fputc(3) C function <1>:               fputs.              (line    6)
* frame instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  123)
* framePen instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  131)
* frameRate instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  419)
* frameWidth instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  193)
* frameWidthVar instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  127)
* fread(3) C function:                   fread.              (line    6)
* free(3) C function:                    free.               (line    6)
* freeFTFont instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  424)
* FreeType configuration:                X11FreeTypeFont.    (line   12)
* freeXFont instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  427)
* freopen(3) C function:                 freopen.            (line    6)
* frexp(3) C function:                   frexp.              (line    6)
* fscanf(3) C function:                  Variable arguments. (line    6)
* fscanf(3) C function <1>:              fscanf.             (line    6)
* fseek(3) C function:                   fseek.              (line    5)
* fsetpos(3) C function:                 fsetpos.            (line    6)
* fstat(3) C function:                   fstat.              (line    6)
* ftell(3) C function:                   ftell.              (line    6)
* ftFont instance method (X11Pane class): X11Pane.           (line  171)
* ftFontVar instance variable (X11Pane class): X11TextEditorPane.
                                                             (line   80)
* ftFontVar instancevariable (X11TextEditorPane class): X11Pane.
                                                             (line   62)
* ftFontVar instancevariable (X11TextEditorPane class) <1>: X11TextEditorPane.
                                                             (line   90)
* fullScreen instance method (GLUTApplication class): GLUTApplication.
                                                             (line  185)
* Function arguments:                    C statements.       (line  101)
* Function parameters:                   C statements.       (line   93)
* fwrite(3) C function:                  fwrite.             (line    6)
* gdb command:                           Invoking.           (line   32)
* gdb command <1>:                       C statements.       (line  277)
* Geometry, X window:                    Application.        (line  194)
* geomFlags instance variable (Application class): Application.
                                                             (line   28)
* getc(3) C function:                    getc.               (line    6)
* getCh method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  153)
* getCh method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   63)
* getchar(3) C function:                 CFunction.          (line  105)
* getchar(3) C function <1>:             getchar.            (line    6)
* getCwd instance method (DirectoryStream class): DirectoryStream.
                                                             (line   96)
* getcwd(3) C function:                  CFunction.          (line  108)
* getcwd(3) C function <1>:              getcwd.             (line    6)
* getEnv instance method (String class): String.             (line  285)
* getenv(3) C function:                  CFunction.          (line  111)
* getenv(3) C function <1>:              getenv.             (line    6)
* getFocusWidgetText instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   63)
* getFontInfo instance method (X11Font class): X11Font.      (line   63)
* getKeyObject instance method (Key class): Key.             (line  133)
* getPID instance method (Application class): Application.   (line   96)
* getPID method (SignalEvent class):     SignalEvent.        (line   56)
* getpid(3) C function:                  CFunction.          (line  114)
* getpid(3) C function C Function:       getpid.             (line    5)
* getReferenceCount instance method (Object class): Object.  (line  350)
* getRS instance method (String class):  String.             (line  292)
* getShiftState method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   68)
* getUTCTime instance method (CTime class): CalendarTime.    (line   12)
* getValue instance method (Collection class): Collection.   (line   65)
* getValue instance method (Symbol class): Symbol.           (line  100)
* GLEW library:                          Ctalk library.      (line   86)
* GLEW library <1>:                      Ctalk library.      (line  805)
* GLEW library <2>:                      Ctalk library.      (line 1125)
* globPattern instance method (DirectoryStream class): DirectoryStream.
                                                             (line   99)
* GLUT callbacks, defining:              GLUTApplication.    (line  126)
* GLUT library API functions:            Ctalk library.      (line  823)
* GLUTApplication class:                 GLUTApplication.    (line    6)
* GLX example program:                   GLXCanvasPane.      (line  803)
* GLXCanvasPane class:                   GLXCanvasPane.      (line    6)
* glXChooseVisual(3):                    GLXCanvasPane.      (line   72)
* glXChooseVisual(3) <1>:                GLXCanvasPane.      (line  289)
* glxContextPtr instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  213)
* glxinfo(3):                            GLXCanvasPane.      (line   87)
* gmTime instance method (CalendarTime class): CalendarTime. (line  113)
* gmTime instance method (CTime class):  CTime.              (line   34)
* gmtime(3) C function C Function:       gmtime-localtime.   (line    6)
* gmtOff instance variable (CalendarTime class): CalendarTime.
                                                             (line   73)
* GNU autoconf:                          GNU tools.          (line    6)
* GNU automake:                          GNU tools.          (line    6)
* GNU Emacs:                             GNU tools.          (line    6)
* GNU Free Documentation License:        GNU Free Documentation License.
                                                             (line    6)
* GNU General Public License:            Copying.            (line    6)
* GNU Lesser General Public License:     Copying.            (line    6)
* gotoChar instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  199)
* gotoXY instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  133)
* gotoXY instance method (X11TextPane class): X11TextPane.   (line  221)
* gotoXY method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  159)
* gotoXY method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   73)
* grabCursor instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  135)
* grabMove instance method (X11Cursor class): X11Cursor.     (line   42)
* grayed instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  150)
* grayedColor instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  156)
* green instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  105)
* handle instance method (Exception class): Exception.       (line  157)
* handle method (Exception class):       Errors.             (line   19)
* handleDestroy instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  150)
* handleEnterNotify instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  154)
* handleInput instance method (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   35)
* handleInput instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   74)
* handleInput instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   78)
* handleInput instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   88)
* handleInput instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  125)
* handleInput instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   89)
* handleInput instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   71)
* handleInput instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   67)
* handleInput method (ANSITextEntryPane class): ANSIWidgetPane.
                                                             (line   15)
* handleInput method (ANSITextEntryPane class) <1>: ANSITextEntryPane.
                                                             (line   69)
* handleInput method (ANSIWidgetPane class): ANSIWidgetPane. (line   15)
* handleInput method (ANSIWidgetPane class) <1>: ANSIWidgetPane.
                                                             (line   85)
* handleKbdInput instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  159)
* handleLeaveNotify instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  154)
* handleMove instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  163)
* handlePointerInput instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  167)
* handlePointerMotion instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  171)
* handler instance variable (SignalHandler class): SignalHandler.
                                                             (line   62)
* handleResize instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  175)
* handlerMethod instance variable (Exception class): Exception.
                                                             (line  146)
* handleSelectionClear instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  179)
* handleSelectionRequest instance variable (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  183)
* handleSubPaneEvent instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  228)
* hasExtension instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  459)
* hasFocus:                              X11PaneDispatcher.  (line  189)
* hasFocus instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   46)
* hasMeta instance method (DirectoryStream class): DirectoryStream.
                                                             (line  108)
* hasPointerContext instance method (Object class): Object.  (line  353)
* haveDST instance method (CTime class): CTime.              (line   38)
* haveDst instance variable (CalendarTime class): CalendarTime.
                                                             (line   73)
* haveMultiLine instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  160)
* head instance method (Collection class): Collection.       (line   72)
* Header files:                          Preprocessor.       (line    6)
* height instance variable (X11Bitmap class): X11Bitmap.     (line   14)
* height instance variable (X11Font class): X11Font.         (line   36)
* height instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   83)
* highlight instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  165)
* highlightBorderColor instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  169)
* highlightBorderColor instance variable (X11LabelPane class) <1>: X11LabelPane.
                                                             (line  173)
* highlightBorderWidth instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  177)
* highlighTextBold instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  181)
* highlightTextColor instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  186)
* hostToAddress instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line  100)
* hours instance variable (CalendarTime class): CalendarTime.
                                                             (line   38)
* icosahedron instance method (GLUTApplication class): GLUTApplication.
                                                             (line  190)
* Identifiers for variables (tags):      Ctalk library.      (line 1525)
* idleHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  218)
* if statements:                         Control structures. (line    6)
* ignoreSignal instance method (SignalHandler class): SignalHandler.
                                                             (line   74)
* imported instance variable (Method class): Method.         (line   86)
* Include files:                         Preprocessor.       (line    6)
* incReferenceCount instance method (Object class): Object.  (line  367)
* index(3) C function:                   index-function.     (line    6)
* init instance method (ClassLibraryTree class): ClassLibraryTree.
                                                             (line   72)
* init instance method (List class):     List.               (line   49)
* init instance method (SortedList class): SortedList.       (line   46)
* initFontLib instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  110)
* initFontLib instance method (X11FreeTypeFont class) <1>: X11Pane.
                                                             (line  151)
* initFontLib instance method (X11FreeTypeFont class) <2>: X11TextPane.
                                                             (line   47)
* initGlut instance method (GLUTApplication class): GLUTApplication.
                                                             (line  194)
* initialize instance method (ANSITerminaPane class): ANSITerminalPane.
                                                             (line  137)
* initialize instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  433)
* initialize instance method (X11Pane class): X11Pane.       (line  202)
* initialize instance method (X11Pane class) <1>: X11Pane.   (line  209)
* initialize instance method (X11Pane class) <2>: X11Pane.   (line  223)
* initialize instance method (X11Pane class) <3>: X11Pane.   (line  238)
* initWindow instance method (GLUTApplication class): GLUTApplication.
                                                             (line  202)
* Inpectors:                             C statements.       (line  210)
* inputBuffer instance variable (ANSITextEntryPane class): ANSITextEntryPane.
                                                             (line   60)
* InputEvent class:                      InputEvent.         (line    6)
* inputHandle instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  103)
* inputLength instance variable (ANSITextEntryPane class): ANSITextEntryPane.
                                                             (line   63)
* inputPending method (TerminalStream class): TerminalStream.
                                                             (line   26)
* inputPID instance variable (X11TerminalStream class): X11TerminalStream.
                                                             (line   99)
* inputQueue instance variable (TerminalStream class): TerminalStream.
                                                             (line   16)
* inputQueueMax instance variable (TerminalStream class): TerminalStream.
                                                             (line   17)
* inputStream instance variable (X11Pane class): X11Pane.    (line   88)
* inputWidth method (ANSITextEntryPane class): ANSITextEntryPane.
                                                             (line   73)
* inspect instance method (Object class): Object.            (line  370)
* inspect instance method (Object class) <1>: C statements.  (line  210)
* inspect instance method (Object class) <2>: C statements.  (line  277)
* inspect instance method (ObjectInspector class): ObjectInspector.
                                                             (line   49)
* inspect instance method (ObjectInspector class) <1>: Ctalk library.
                                                             (line 2529)
* inspect_get_local () function:         Ctalk library.      (line 2529)
* installAbortHandlerBasic instance method (Application class): Application.
                                                             (line   99)
* installCallBackFns instance method (GLUTApplication class): GLUTApplication.
                                                             (line  207)
* installExitHandler instance method (Application class): Application.
                                                             (line  107)
* installExitHandlerBasic instance method (Application class): Application.
                                                             (line  111)
* installHandler instance method (Exception class): Exception.
                                                             (line  168)
* installHandler instance method (SignalHandler class): SignalHandler.
                                                             (line   77)
* installPrefix instance method (Application class): Application.
                                                             (line  119)
* Instance variable documentation:       Documentation.      (line    6)
* Instance variable documentation <1>:   Documentation.      (line  166)
* instanceMethod instance method (Object class): Object.     (line  422)
* instanceMethod keyword:                Method keywords.    (line   41)
* instanceVariable keyword:              Method keywords.    (line   44)
* int C data type:                       C statements.       (line  144)
* Integer class:                         Integer.            (line    6)
* INTVAL macro:                          Scoping.            (line   97)
* INTVAL macro () function:              Ctalk library.      (line 2649)
* INVALID_OPERAND_X exception:           Exception.          (line  118)
* INVALID_RECEIVER_X exception:          Exception.          (line  118)
* INVALID_VARIABLE_DECLARATION_X exception: Exception.       (line  118)
* invert instance method (Character class): Character.       (line  160)
* invert instance method (Character class) <1>: Prefixes.    (line   44)
* invert instance method (Integer class): Integer.           (line  122)
* invert instance method (Integer class) <1>: Prefixes.      (line   44)
* invert instance method (LongInteger class): LongInteger.   (line  106)
* invert instance method (LongInteger class) <1>: Prefixes.  (line   44)
* Invoking ctalk:                        Invoking.           (line    6)
* is instance method (Object class):     Object.             (line  379)
* isAlNum instance method (Character class): Character.      (line  168)
* isAlNum method (Character class):      isalnum-isxdigit.   (line    6)
* isalnum(3) C function:                 isalnum-isxdigit.   (line    6)
* isAlpha instance method (Character class): Character.      (line  172)
* isAlpha method (Character class):      isalnum-isxdigit.   (line    6)
* isalpha(3) C function:                 isalnum-isxdigit.   (line    6)
* isAM instance method (CTime class):    CTime.              (line   42)
* isASCII instance method (Character class): Character.      (line  164)
* isASCII method (Character class):      isalnum-isxdigit.   (line    6)
* isascii(3) C function:                 isalnum-isxdigit.   (line    6)
* isATty method (TerminalStream class):  TerminalStream.     (line   29)
* isBlank instance method (Character class): Character.      (line  176)
* isBlank method (Character class):      isalnum-isxdigit.   (line    6)
* isblank(3) C function:                 isalnum-isxdigit.   (line    6)
* isClassMethod instance method (Object class): Object.      (line  402)
* isClassObject instance method (Object class): Object.      (line  408)
* isCntrl instance method (Character class): Character.      (line  180)
* isCntrl method (Character class):      isalnum-isxdigit.   (line    6)
* iscntrl(3) C function:                 isalnum-isxdigit.   (line    6)
* isDigit instance method (Character class): Character.      (line  184)
* isDigit method (Character class):      isalnum-isxdigit.   (line    6)
* isdigit(3) C function:                 isalnum-isxdigit.   (line    6)
* isDir instance method (FileStream class): FileStream.      (line   63)
* isDir method (FileStream class):       Errors.             (line   48)
* isdst instance variable (CalendarTime class): CalendarTime.
                                                             (line   66)
* isEmtpy instance method (Collection class): Collection.    (line   68)
* isGraph instance method (Character class): Character.      (line  188)
* isGraph method (Character class):      isalnum-isxdigit.   (line    6)
* isgraph(3) C function:                 isalnum-isxdigit.   (line    6)
* isInitialized instance variable (Method class): Method.    (line  101)
* isInputPane instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   52)
* isInstanceMethod instance method (Object class): Object.   (line  412)
* isInstanceVariable instance method (Object class): Object. (line  418)
* isLower instance method (Character class): Character.      (line  192)
* isLower method (Character class):      isalnum-isxdigit.   (line    6)
* islower(3) C function:                 isalnum-isxdigit.   (line    6)
* isNull instance method (Object class): Object.             (line  427)
* isNullValue instance method (Object class): Object.        (line  431)
* isoTimeString instance method (CalendarTime class): CalendarTime.
                                                             (line  120)
* isPrint instance method (Character class): Character.      (line  196)
* isPrint method (Character class):      isalnum-isxdigit.   (line    6)
* isprint(3) C function:                 isalnum-isxdigit.   (line    6)
* isPunct instance method (Character class): Character.      (line  200)
* isPunct method (Character class):      isalnum-isxdigit.   (line    6)
* ispunct(3) C function:                 isalnum-isxdigit.   (line    6)
* isSpace instance method (Character class): Character.      (line  204)
* isSpace method (Character class):      isalnum-isxdigit.   (line    6)
* isspace(3) C function:                 isalnum-isxdigit.   (line    6)
* isSubClassOf instance method (Object class): Object.       (line  436)
* isTopLevel instance method (X11Pane class): X11Pane.       (line  243)
* isUpper instance method (Character class): Character.      (line  209)
* isUpper method (Character class):      isalnum-isxdigit.   (line    6)
* isupper(3) C function:                 isalnum-isxdigit.   (line    6)
* isXDigit instance method (Character class): Character.     (line  213)
* isXDigit method (Character class):     isalnum-isxdigit.   (line    6)
* isxdigit(3) C function:                isalnum-isxdigit.   (line    6)
* isXLFD instance method (String class): String.             (line  307)
* IS_OBJECT macro:                       C Macros.           (line   74)
* IS_VALUE_INSTANCE_VAR macro:           C Macros.           (line   78)
* is_zero_q function:                    Ctalk library.      (line 2660)
* items instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   42)
* items instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   76)
* justify instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  192)
* Key class:                             Key.                (line    6)
* keyAt instance method (AssociativeArray class): AssociativeArray.
                                                             (line   88)
* keyExists instance method (Collection class): Collection.  (line   76)
* keyPressHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  222)
* labs(3) C function:                    labs.               (line    6)
* lastY instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  139)
* leading instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  213)
* leading instancevariable (X11TextPane class): X11TextPane. (line   65)
* left instance variable (Rectangle class): Rectangle.       (line   73)
* length instance method (String class): String.             (line  313)
* length instance variable (Vector class): Vector.           (line   44)
* levelMargin instance variable (TreeNode class): TreeNode.  (line   25)
* levelMarginLength instance variable (TreeNode class): TreeNode.
                                                             (line   29)
* libIsInitialized instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  119)
* Library functions:                     Ctalk library.      (line    6)
* libraryPath instance method (Object class): Object.        (line  440)
* LibrarySearch class:                   LibrarySearch.      (line    6)
* Line class:                            Line.               (line    6)
* lineHeight instance variable (X11TextPane class): X11TextPane.
                                                             (line   74)
* lineWidth instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  132)
* List class:                            List.               (line    6)
* listFonts instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  123)
* llabs(3) C function:                   llabs.              (line    6)
* llrint(3) C function:                  CFunction.          (line  121)
* llrint(3) C function <1>:              llrint.             (line    6)
* llrintf(3) C function:                 CFunction.          (line  122)
* llrintf(3) C function <1>:             llrint.             (line    6)
* llrintl(3) C function:                 CFunction.          (line  123)
* llrintl(3) C function <1>:             llrint.             (line    6)
* llround(3) C function:                 llround.            (line    6)
* LLVAL macro:                           Scoping.            (line   97)
* LLVAL macro () function:               Ctalk library.      (line 2664)
* localCVARs instance variable (Method class): Method.       (line   99)
* localObjects instance variable (Method class): Method.     (line   94)
* localTime instance method (CalendarTime class): CalendarTime.
                                                             (line  130)
* localTime instance method (CTime class): CTime.            (line   46)
* localtime(3) C function C Function:    gmtime-localtime.   (line    5)
* log(3) C function:                     log.                (line    6)
* log10(3) C function:                   log10.              (line    6)
* log1p(3) C function:                   log1p.              (line    6)
* long int C data type:                  C statements.       (line  144)
* long long int C data type:             C statements.       (line  147)
* LongInteger Class:                     LongInteger.        (line    6)
* lrint(3) C function:                   CFunction.          (line  118)
* lrint(3) C function <1>:               llrint.             (line    6)
* lrint(3) C function <2>:               lrint.              (line    6)
* lrintf(3) C function:                  CFunction.          (line  119)
* lrintf(3) C function <1>:              llrint.             (line    6)
* lrintl(3) C function:                  CFunction.          (line  120)
* lrintl(3) C function <1>:              llrint.             (line    6)
* lround(3) C function:                  lround.             (line    6)
* Macro definitions:                     C Macros.           (line    6)
* Magnitude class:                       Magnitude.          (line    6)
* mainWindow instance method (X11Pane class): X11Pane.       (line  246)
* makeSibling instance method (TreeNode class): TreeNode.    (line   47)
* makeSocketPath instance method (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   49)
* malloc(3) C function:                  malloc.             (line    6)
* map instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  141)
* map instance method (Array class):     Array.              (line   60)
* map instance method (AssociativeArray class): AssociativeArray.
                                                             (line   91)
* map instance method (GLXCanvasPane class): GLXCanvasPane.  (line  463)
* map instance method (List class):      List.               (line   52)
* map instance method (String class):    String.             (line  317)
* map instance method (TreeNode class):  TreeNode.           (line   50)
* map instance method (X11Pane class):   X11Pane.            (line  253)
* map method (ANSIWidgetPane class):     ANSIWidgetPane.     (line   91)
* mapClassVariables instance method (Object class): Object.  (line  443)
* mapClassVariables instance method (Object class) <1>: ObjectInspector.
                                                             (line   14)
* mapInstanceVariables instance method (Object class): Object.
                                                             (line  450)
* mapInstanceVariables instance method (Object class) <1>: ObjectInspector.
                                                             (line   14)
* mapKeys instance method (AssociativeArray class): AssociativeArray.
                                                             (line   97)
* mapped instance variable (Pane class): Pane.               (line   23)
* mapRev instance method (List class):   List.               (line  123)
* mapSubWidget instance method (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   95)
* margin instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  219)
* margin instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  143)
* match instance method (String class):  String.             (line  356)
* matchAt instance method (String class): String.            (line  361)
* matchAt instance method (String class) <1>: String.        (line  665)
* matchCase instance method (String class): String.          (line  366)
* matchIndexAt instance method (String class): String.       (line  371)
* matchIndexAt instance method (String class) <1>: String.   (line  665)
* matchLength instance method (String class): String.        (line  376)
* matchRegex instance method (String class): String.         (line   37)
* matchRegex instance method (String class) <1>: String.     (line  380)
* matchRegex instance method (String class) <2>: String.     (line  502)
* maxAdvance instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   87)
* maxLBearing instance variable (X11Font class): X11Font.    (line   40)
* maxRBearing instance variable (X11Font class): X11Font.    (line   44)
* maxWidth instance variable (X11Font class): X11Font.       (line   49)
* MEMADDR macro:                         C Macros.           (line   82)
* membervars instance method (Application class): Application.
                                                             (line  134)
* memchr(3) C function:                  memchr.             (line    6)
* memcmp(3) C function:                  memcmp.             (line    6)
* memcpy(3) C function:                  memcpy.             (line    6)
* memmove(3) C function:                 memmove.            (line    6)
* memset(3) C function:                  memset.             (line    6)
* messageText:                           ANSIMessageBoxPane. (line   29)
* messageText instance variable:         ANSIYesNoBoxPane.   (line   52)
* Metacharacters:                        String.             (line  541)
* Method API:                            Method API.         (line    6)
* Method API <1>:                        Translating.        (line    6)
* Method class:                          Method.             (line    6)
* Method declarations:                   Methods.            (line   63)
* Method documentation:                  Documentation.      (line    6)
* Method keywords.:                      Method keywords.    (line    6)
* Method overloading:                    Overloading.        (line    3)
* Method parameters:                     Methods.            (line   83)
* Method prototypes:                     Externs.            (line    6)
* methodArgs instance variable (Method class): Method.       (line   92)
* methodDocString instance method (Application class): Application.
                                                             (line  147)
* methodFn instance variable (Method class): Method.         (line   59)
* methodName instance variable (Method class): Method.       (line   51)
* methodObjectMessage instance method (Object class): Object.
                                                             (line  456)
* methodObjectMessage instance method (Object class) <1>: Method.
                                                             (line  116)
* methodParameters instance variable (Method class): Method. (line   63)
* methodPrototypes instance method (Application class): Application.
                                                             (line  151)
* methodPrototypes instance method (Application class) <1>: Documentation.
                                                             (line  101)
* methodReturnBoolean macro:             Return values.      (line   99)
* methodReturnFalse macro:               Return values.      (line  104)
* methodReturnInteger macro:             Return values.      (line  108)
* methodReturnLongInteger macro:         Return values.      (line  112)
* methodReturnNULL macro:                Return values.      (line  117)
* methodReturnObject macro:              Return values.      (line  121)
* methodReturnObjectName macro:          Return values.      (line  125)
* methodReturnSelf macro:                Return values.      (line  130)
* methodReturnString macro:              Return values.      (line  134)
* methodReturnTrue macro:                Return values.      (line  139)
* Methods:                               Methods.            (line    6)
* Methods <1>:                           Methods.            (line   63)
* methods instance method (Object class): Object.            (line  573)
* methods instance method (Object class) <1>: Documentation. (line   69)
* methodSearch instance method (LibrarySearch class): LibrarySearch.
                                                             (line   28)
* methodSelector instance variable (Method class): Method.   (line   52)
* methodSource instance method (Application class): Application.
                                                             (line  156)
* methodSource instance method (Application class) <1>: Documentation.
                                                             (line   69)
* methodSource instance variable (Method class): Method.     (line   61)
* METHOD_USED_BEFORE_DEFINE_X exception: Exception.          (line  118)
* minutes instance variable (CalendarTime class): CalendarTime.
                                                             (line   38)
* MISMATCHED_PAREN_X exception:          Exception.          (line  118)
* mkDir instance method (DirectoryStream class): DirectoryStream.
                                                             (line  112)
* mkdir(3) C function:                   mkdir.              (line    6)
* modf(3) C function:                    modf.               (line    6)
* monName instance method (CalendarTime class): CalendarTime.
                                                             (line  138)
* month instance variable (CalendarTime class): CalendarTime.
                                                             (line   38)
* moveCursor instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  150)
* multiText instance method (X11LabelPane class): X11LabelPane.
                                                             (line  270)
* name instance method (Object class):   Object.             (line  579)
* name instance method (Symbol class):   Symbol.             (line  119)
* namedColorFT instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  471)
* namedX11Color instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  128)
* nArgs instance variable (Method class): Method.            (line   71)
* nearbyint(3) C function:               nearbyint.          (line    6)
* NetworkStream class:                   NetworkStream.      (line    6)
* new instance method (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   48)
* new instance method (ANSILabelPane class): ANSILabelPane.  (line   80)
* new instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   83)
* new instance method (ANSIMessageBoxPane class): ANSIMessageBoxPane.
                                                             (line   41)
* new instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   92)
* new instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  163)
* new instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   95)
* new instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  147)
* new instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   76)
* new instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   70)
* new instance method (List class):      List.               (line  129)
* new instance method (Object class):    Object.             (line  582)
* new instance method (ReadFileStream class): ReadFileStream.
                                                             (line   24)
* new instance method (SignalHandler class): SignalHandler.  (line   81)
* new instance method (X11CanvasPane class): X11CanvasPane.  (line  385)
* new instance method (X11LabelPane class): X11LabelPane.    (line  242)
* new instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  233)
* new instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  197)
* new instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  204)
* new instance method (X11TextPane class): X11TextPane.      (line  228)
* new method (ANSITerminalStream class): ANSITerminalStream. (line  164)
* new method (ANSITextEntryPane class):  ANSITextEntryPane.  (line   77)
* new method (ANSIWidgetPane class):     ANSIWidgetPane.     (line  102)
* new method (Object class):             Self and super.     (line   22)
* new method (ReadFileStream class):     Self and super.     (line   22)
* new method (SignalEvent class):        SignalEvent.        (line   60)
* new method (WriteFileStream class):    WriteFileStream.    (line   60)
* nextEvent method (SignalEvent class):  SignalEvent.        (line   69)
* nextFocus instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   79)
* nextInputEvent method (TerminalStream class): TerminalStream.
                                                             (line   33)
* nIinputEvents instance variable (TerminalStream class): TerminalStream.
                                                             (line   19)
* nMatches instance method (String class): String.           (line  389)
* noBorder instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  131)
* noBorder instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   82)
* noMethodInit keyword:                  Method functions.   (line   25)
* noMethodInit keyword <1>:              Method keywords.    (line   71)
* noShadow instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  148)
* noShadow instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line  101)
* NOT_A_TTY_X exception:                 Exception.          (line  118)
* nParams instance variable (Method class): Method.          (line   65)
* Null objects:                          Object.             (line   26)
* Object attributes:                     Attributes.         (line    6)
* Object class:                          Object.             (line    6)
* OBJECT typedef:                        OBJECT typedef.     (line    6)
* ObjectInspector class:                 ObjectInspector.    (line    6)
* ObjectInspector class <1>:             C statements.       (line  266)
* OBJECT_HAS_LOCAL_TAG attribute;:       Attributes.         (line   53)
* OBJECT_IS_DEREF_RESULT attribute;:     Object.             (line   83)
* OBJECT_IS_DEREF_RESULT attribute; <1>: Attributes.         (line   61)
* OBJECT_IS_GLOBAL_COPY attribute;:      Attributes.         (line   38)
* OBJECT_IS_I_RESULT attribute;:         Attributes.         (line   41)
* OBJECT_IS_MEMBER_OF_PARENT_COLLECTION attribute;: Attributes.
                                                             (line   48)
* OBJECT_IS_STRING_LITERAL attribute;:   Attributes.         (line   45)
* OBJREF macro:                          Ctalk library.      (line  283)
* OBJREF macro <1>:                      Ctalk library.      (line 2630)
* OBJREF macro <2>:                      Ctalk library.      (line 2726)
* OBJREF_T data type:                    Ctalk library.      (line 2630)
* obj_ref_str function:                  Ctalk library.      (line 2669)
* octahedron instance method (GLUTApplication class): GLUTApplication.
                                                             (line  211)
* okButton instance variable (ANSIMessageBoxPane class): ANSIMessageBoxPane.
                                                             (line   28)
* oldSelectedContent instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   46)
* oldSelectedContent instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   79)
* onAnimation instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  477)
* onButtonPress instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  485)
* onExpose instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  525)
* onIdle instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  551)
* onKeyPress instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  568)
* onPointerMotion instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  626)
* onResize instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  644)
* onTimerTick instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  660)
* open instance method (UNIXNetworkStreamReader class): UNIXNetworkStreamReader.
                                                             (line  103)
* open instance method (UNIXNetworkStreamWriter class): UNIXNetworkStreamWriter.
                                                             (line   24)
* openEventStream instance method (X11Pane class): X11Pane.  (line  256)
* openInputClient method (X11TerminalStream class): X11TerminalStream.
                                                             (line  123)
* openInputQueue method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  174)
* openInputQueue method (ANSITerminalStream class) <1>: ANSIWidgetPane.
                                                             (line  102)
* openInputQueue method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   77)
* openOn instance method (ReadFileStream class): ReadFileStream.
                                                             (line   32)
* openOn instance method (TCPIPNetworkStreamReader class): TCPIPNetworkStreamReader.
                                                             (line   55)
* openOn instance method (TCPIPNetworkStreamWriter class): TCPIPNetworkStreamWriter.
                                                             (line   15)
* openOn instance method (TCPIPV6NetworkStreamReader class): TCPIPV6NetworkStreamReader.
                                                             (line   33)
* openOn instance method (TCPIPV6NetworkStreamWriter class): TCPIPV6NetworkStreamWriter.
                                                             (line    9)
* openOn instance method (UNIXNetworkStreamReader class): UNIXNetworkStreamReader.
                                                             (line  112)
* openOn instance method (UNIXNetworkStreamWriter class): UNIXNetworkStreamWriter.
                                                             (line   33)
* openOn method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  177)
* openOn method (WriteFileStream class): WriteFileStream.    (line   68)
* Optimization:                          C statements.       (line  316)
* origin instance variable (Pane class): Pane.               (line   27)
* outputBuffer instance variable (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   17)
* outputHandle instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  109)
* Overloading methods:                   Overloading.        (line    3)
* Overloading parameters:                Overloading.        (line   32)
* padding instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  223)
* padding instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  147)
* Pane class:                            Pane.               (line    6)
* paneBackingStore instance variable:    Ctalk library.      (line 1907)
* paneBackingStore instance variable (Pane class): Pane.     (line   32)
* paneBuffer instance variable:          Ctalk library.      (line 1907)
* paneBuffer instance variable (Pane class): Pane.           (line   42)
* paneID instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   56)
* paneStream instance variable (ANSITerminalPane class): ANSITerminalPane.
                                                             (line   83)
* Parameters, overloading:               Overloading.        (line   32)
* parent method (ANSIWidgetPane class):  ANSIWidgetPane.     (line  110)
* parentClip instance variable (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  105)
* parentDrawable instance variable (X11Bitmap class): X11Bitmap.
                                                             (line   16)
* parentOrigin instance variable (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  101)
* parentPane instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   60)
* parentPane method (X11TerminalStream class): X11TerminalStream.
                                                             (line  127)
* parseArgs instance method (Application class): Application.
                                                             (line  189)
* parseArgs instance method (Application class) <1>: GLUTApplication.
                                                             (line  194)
* parseX11Geometry:                      Application.        (line  194)
* parseX11Geometry instance method (Application class): Application.
                                                             (line  194)
* PARSE_ERROR_X exception:               Exception.          (line  118)
* Pasting text:                          X11TextEditorPane.  (line   45)
* Pattern matches, debugging:            String.             (line  939)
* Pattern strings:                       String.             (line  867)
* pctLabelMargin instance variable (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   55)
* peek instance method (Exception class): Exception.         (line  173)
* Pen Class:                             Pen.                (line    6)
* pen instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  154)
* pending instance method (Exception class): Exception.      (line  177)
* pending method (Exception class):      Errors.             (line   19)
* pending method (SignalEvent class):    SignalEvent.        (line   73)
* pendingEvents (SignalEvent class):     SignalEvent.        (line   37)
* percent instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   96)
* percent instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  201)
* percentInt instance variable (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   59)
* perror(3) C function:                  perror.             (line    6)
* pixelHeightFT instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  672)
* pixmapFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line   93)
* pixmapFromData instance method (X11CanvasPane class): X11Bitmap.
                                                             (line   93)
* pixmapFromData instance method (X11CanvasPane class) <1>: X11CanvasPane.
                                                             (line  397)
* Point Class:                           Point.              (line    6)
* point instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  145)
* pointerMotionHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  228)
* pointIsInFrame instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  218)
* pointIsInThumb instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  219)
* pointSize instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   75)
* pop instance method (List class):      List.               (line  136)
* popItemRef instance method (List class): List.             (line  140)
* Port, TCPIP:                           TCPIPV6NetworkStreamWriter.
                                                             (line   16)
* pow(3) C function:                     pow.                (line    6)
* Pragmas:                               C statements.       (line    6)
* Preprocessor:                          Preprocessor.       (line    6)
* prevSelectedLine instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   51)
* prevSelectedLine instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   83)
* print instance method (TreeNode class): TreeNode.          (line   55)
* printExceptionTrace instance method (Exception class): Exception.
                                                             (line  189)
* printf(3) C function:                  printf.             (line    6)
* printf(3) C function <1>:              vfprintf.           (line    6)
* printMatchToks instance method (String class): String.     (line  393)
* printMatchToks instance method (String class) <1>: String. (line  939)
* printOn instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  154)
* printOn instance method (String class): String.            (line  399)
* printOn instance method (X11TextPane class): X11TextPane.  (line  235)
* printOn method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  180)
* printOn method (String class):         Variable arguments. (line   48)
* printOn method (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   80)
* printOn method (WriteFileStream class): WriteFileStream.   (line   73)
* printSelfBasic instance method (Object class): Object.     (line  590)
* processID (SignalHandler class):       SignalEvent.        (line   43)
* progress instance variable (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   66)
* promptString instance variable (ObjectInspector class): ObjectInspector.
                                                             (line   23)
* promptText instance variable (ANSITextEntryPane class): ANSITextEntryPane.
                                                             (line   56)
* Prototypes, methods:                   Externs.            (line    6)
* PTR_CONVERSION_X exception:            Exception.          (line  118)
* push instance method (List class):     List.               (line  143)
* pushAscending instance method (SortedList class): SortedList.
                                                             (line   49)
* pushDescending instance method (SortedList class): SortedList.
                                                             (line   49)
* pushItemRef instance method (List class): List.            (line  146)
* putChar instance method (X11TextPane class): X11TextPane.  (line  242)
* putCharXY instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  159)
* putStr instance method (X11Bitmap class): X11Bitmap.       (line   85)
* putStr instance method (X11TextPane class): X11TextPane.   (line  246)
* putStrXY instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  412)
* putStrXY instance method (X11Pane class): X11Pane.         (line  261)
* putTransformedStrXY instance method (X11Pane class): X11Pane.
                                                             (line  265)
* qualifyName instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  136)
* queued instance variable (Method class): Method.           (line   89)
* queueEvent method (SignalEvent class): SignalEvent.        (line   77)
* queueInput instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  121)
* queueInput instance variable (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   34)
* queueInput method (TerminalStream class): TerminalStream.  (line   36)
* queueInput method (X11TerminalStream class): X11TerminalStream.
                                                             (line  130)
* queueInputEvent method (TerminalStream class): TerminalStream.
                                                             (line   39)
* quickSearch instance method (String class): String.        (line  402)
* quickSearch instance method (String class) <1>: String.    (line  502)
* radius instance variable (Circle class): Circle.           (line  118)
* raise(3) C function:                   raise.              (line    6)
* raiseCriticalException instance method (Exception class): Exception.
                                                             (line  180)
* raiseCriticalException method (SysErrnoException class): Ctalk library.
                                                             (line  366)
* raiseException instance method (Exception class): Exception.
                                                             (line  192)
* raiseException method (SystemErrnoException class): SystemErrnoException.
                                                             (line   26)
* raiseException method (SystemErrnoException class) <1>: Errors.
                                                             (line   54)
* raiseSignal instance method (SignalHandler class): SignalHandler.
                                                             (line   85)
* raiseWindow instance method (X11Pane class): X11Pane.      (line  269)
* rand(3) C function:                    CFunction.          (line  151)
* rand(3) C function <1>:                rand.               (line    6)
* rawMode method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  183)
* rawModeFlag instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  124)
* rcvrClassObject instance variable (Method class): Method.  (line   57)
* rcvrFrameTop instance variable (Method class): Method.     (line   83)
* readAll instance method (ReadFileStream class): ReadFileStream.
                                                             (line   36)
* readAll instance method (ReadFileStream class) <1>: Documentation.
                                                             (line  126)
* readChar instance method (ReadFileStream class): ReadFileStream.
                                                             (line   39)
* readChar method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  186)
* ReadFileStream class:                  ReadFileStream.     (line    6)
* readFmt method (ReadFileStream class): Variable arguments. (line   48)
* readFmt method (String class):         Variable arguments. (line   48)
* readFormat instance method (ReadFileStream class): ReadFileStream.
                                                             (line   43)
* readFormat instance method (String class): String.         (line  411)
* readLine instance method (ReadFileStream class): ReadFileStream.
                                                             (line   47)
* readLine method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  189)
* readRec instance method (ReadFileStream class): ReadFileStream.
                                                             (line   52)
* readText instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line  122)
* readText instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line   99)
* readVec instance method (ReadFileStream class): ReadFileStream.
                                                             (line   56)
* readVec instance method (ReadFileStream class) <1>: Vector.
                                                             (line   10)
* readVec instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line  136)
* readVec instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line  109)
* realloc(3) C function:                 realloc.            (line    6)
* Record separator character:            String.             (line  292)
* Record separator character <1>:        String.             (line  418)
* Record separator character <2>:        String.             (line 1010)
* Rectangle class:                       Rectangle.          (line    6)
* red instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  140)
* refresh instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   84)
* refresh instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   87)
* refresh instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line  101)
* refresh instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  169)
* refresh instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line  100)
* refresh instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  164)
* refresh instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   84)
* refresh instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  404)
* refresh instance method (X11TextPane class): X11TextPane.  (line  249)
* refreshRate instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  677)
* refreshReframe instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  407)
* refreshSelection instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   94)
* refreshSelection instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  172)
* refreshSelectionFirst instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   90)
* refreshSelectionFirst instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  176)
* regions instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  158)
* Regular expression metacharacters:     String.             (line  541)
* remove(3) C function:                  remove.             (line    6)
* removeAt instance method (Collection class): Collection.   (line   80)
* removeSocket instance method (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   76)
* removeValue instance method (Symbol class): Symbol.        (line  122)
* rename(3) C function:                  rename.             (line    6)
* renameFile instance method (FileStream class): FileStream. (line   67)
* requestClose instance variable (X11TextPane class): X11TextPane.
                                                             (line  114)
* require keyword:                       Required classes.   (line    6)
* require keyword <1>:                   Method keywords.    (line   75)
* resetGraphics instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  170)
* resize instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   88)
* resize instance method (X11Bitmap class): X11Bitmap.       (line  105)
* resizeHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  232)
* Resources, X windows:                  X11Pane.            (line  274)
* restoreTerm method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  193)
* returnClass instance variable (Method class): Method.      (line   54)
* returnObjectClass:                     Return values.      (line    6)
* returnObjectClass keyword:             Method keywords.    (line   78)
* reverseOnOff instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  174)
* RGBAColor instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  154)
* right instance variable (Rectangle class): Rectangle.      (line   73)
* rightMargin instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  141)
* rindex(3) C function:                  rindex.             (line    6)
* rint(3) C function:                    rint.               (line    6)
* rmDir instance method (DirectoryStream class): DirectoryStream.
                                                             (line  115)
* rmdir(3) C function:                   rmdir.              (line    6)
* rotation instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   63)
* round(3) C function:                   round.              (line    6)
* run instance method (GLUTApplication class): GLUTApplication.
                                                             (line  219)
* run instance method (GLXCanvasPane class): GLXCanvasPane.  (line  682)
* run instance method (GLXCanvasPane class) <1>: Ctalk library.
                                                             (line  801)
* saveSelectedFont instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  145)
* scaleX instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   63)
* scaleY instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   63)
* scanf(3) C function:                   Variable arguments. (line    6)
* scanf(3) C function <1>:               scanf.              (line    6)
* scanf(3) C function <2>:               vfscanf.            (line    6)
* scanf(3) C function <3>:               vscanf.             (line    6)
* scanf(3) C function <4>:               vsscanf.            (line    6)
* Scope of objects:                      Scoping.            (line    6)
* Scope of objects <1>:                  Ctalk library.      (line 1594)
* screenColor (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   83)
* scrollArrow instance method (X11Cursor class): X11Cursor.  (line   45)
* scrollBar instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   87)
* scrollHeight instance variable (X11TextPane class): X11TextPane.
                                                             (line   83)
* scrollMargin instance variable (X11TextPane class): X11TextPane.
                                                             (line   92)
* scrollThumbSize instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  181)
* scrollThumbStart instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  186)
* search instance method (String class): String.             (line  414)
* search instance method (TreeNode class): TreeNode.         (line   60)
* Search path, classes:                  Application.        (line   58)
* Search path, classes <1>:              Translating.        (line   71)
* seconds instance variable (CalendarTime class): CalendarTime.
                                                             (line   38)
* seekTo instance method (FileStream class): FileStream.     (line   71)
* seekToBeginning instance method (FileStream class): FileStream.
                                                             (line   76)
* seekToEnd instance method (FileStream class): FileStream.  (line   81)
* selectedContent instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   56)
* selectedContent instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   91)
* selectedFont instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  149)
* selectedLine instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   60)
* selectedLine instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   95)
* selectedText instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   99)
* selectedText instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  191)
* selectFont instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  162)
* selectFontFromFontConfig instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  203)
* selectFontFromXLFD instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  193)
* selecting instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  153)
* Selecting text:                        X11TextEditorPane.  (line   45)
* selectionBackgroundColor instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  149)
* selectNext instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line  102)
* selectNext instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  195)
* selectPrev instance method (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line  102)
* selectPrev instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  200)
* self keyword:                          Self and super.     (line    6)
* self keyword <1>:                      Return values.      (line  130)
* self keyword <2>:                      Method keywords.    (line   82)
* SELF_WITHOUT_RECEIVER_X exception:     Exception.          (line  118)
* sEnd instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  153)
* setCallbackName instance method (Method class): Method.    (line  124)
* setContent instance method (TreeNode class): TreeNode.     (line   65)
* setGraphics method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  199)
* setMethodHandler instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  240)
* setName instance method (Key class):   Key.                (line  136)
* setReferenceCount instance method (Object class): Object.  (line  594)
* setResources instance method (X11Pane class): X11Pane.     (line  274)
* setRS instance method (String class):  String.             (line  418)
* setSigAbrt instance method (SignalHandler class): SignalHandler.
                                                             (line   89)
* setSigAbrt method (SignalHandler class): SignalHandler.    (line   13)
* setSigAlrm instance method (SignalHandler class): SignalHandler.
                                                             (line   92)
* setSigAlrm method (SignalHandler class): SignalHandler.    (line   13)
* setSigChld instance method (SignalHandler class): SignalHandler.
                                                             (line   95)
* setSigChld method (SignalHandler class): SignalHandler.    (line   13)
* setSigCont instance method (SignalHandler class): SignalHandler.
                                                             (line   98)
* setSigCont method (SignalHandler class): SignalHandler.    (line   13)
* setSigFpe instance method (SignalHandler class): SignalHandler.
                                                             (line  101)
* setSigFpe method (SignalHandler class): SignalHandler.     (line   13)
* setSigHup instance method (SignalHandler class): SignalHandler.
                                                             (line  104)
* setSigHup method (SignalHandler class): SignalHandler.     (line   13)
* setSigIll instance method (SignalHandler class): SignalHandler.
                                                             (line  107)
* setSigIll method (SignalHandler class): SignalHandler.     (line   13)
* setSigInt instance method (SignalHandler class): SignalHandler.
                                                             (line  110)
* setSigInt method (SignalHandler class): SignalHandler.     (line   13)
* setSigInt method (SignalHandler class) <1>: Method functions.
                                                             (line   44)
* setSigNo instance method (SignalHandler class): SignalHandler.
                                                             (line  113)
* setSigNo method (SignalHandler class): SignalHandler.      (line   36)
* setSigPipe instance method (SignalHandler class): SignalHandler.
                                                             (line  116)
* setSigPipe method (SignalHandler class): SignalHandler.    (line   13)
* setSigQuit instance method (SignalHandler class): SignalHandler.
                                                             (line  119)
* setSigQuit method (SignalHandler class): SignalHandler.    (line   13)
* setSigSegv instance method (SignalHandler class): SignalHandler.
                                                             (line  122)
* setSigSegv method (SignalHandler class): SignalHandler.    (line   13)
* setSigTerm instance method (SignalHandler class): SignalHandler.
                                                             (line  125)
* setSigTerm method (SignalHandler class): SignalHandler.    (line   13)
* setSigTstp instance method (SignalHandler class): SignalHandler.
                                                             (line  128)
* setSigTstp method (SignalHandler class): SignalHandler.    (line   13)
* setSigTtin instance method (SignalHandler class): SignalHandler.
                                                             (line  131)
* setSigTtin method (SignalHandler class): SignalHandler.    (line   13)
* setSigTtou instance method (SignalHandler class): SignalHandler.
                                                             (line  134)
* setSigTtou method (SignalHandler class): SignalHandler.    (line   13)
* setSigUsr1 instance method (SignalHandler class): SignalHandler.
                                                             (line  137)
* setSigUsr1 method (SignalHandler class): SignalHandler.    (line   13)
* setSigUsr2 instance method (SignalHandler class): SignalHandler.
                                                             (line  140)
* setSigUsr2 method (SignalHandler class): SignalHandler.    (line   13)
* setTty method (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  208)
* setValue instance method (AssociativeArray class): AssociativeArray.
                                                             (line  103)
* setWMTitle instance method (X11Pane class): X11Pane.       (line  287)
* Shaders, OpenGL:                       Ctalk library.      (line   86)
* Shaders, OpenGL <1>:                   Ctalk library.      (line  805)
* Shaders, OpenGL <2>:                   Ctalk library.      (line 1125)
* shadow instance variable (ANSITerminalPane class): ANSITerminalPane.
                                                             (line   91)
* shift instance method (List class):    List.               (line  150)
* shiftState instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  237)
* shiftState instance variable (Win32TerminalStream class): Win32TerminalStream.
                                                             (line   35)
* shiftState instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  161)
* show instance method (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   54)
* show instance method (ANSILabelPane class): ANSILabelPane. (line   87)
* show instance method (ANSIMessageBoxPane class): ANSIMessageBoxPane.
                                                             (line   48)
* show instance method (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line  104)
* show instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  205)
* show instance method (ANSIScrollPane class): ANSIScrollPane.
                                                             (line  103)
* show instance method (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   91)
* show instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line  118)
* show method (ANSITextEntryPane class): ANSITextEntryPane.  (line   86)
* siblings instance variable (TreeNode class): TreeNode.     (line   30)
* SigHandler class:                      Method functions.   (line    6)
* SignalEvent class:                     SignalEvent.        (line    6)
* SignalHandler class:                   SignalHandler.      (line    6)
* signalProcessID method (SignalHandler class): SignalHandler.
                                                             (line  143)
* SIGNAL_EVENT_X exception:              Exception.          (line  118)
* sigName instance method (SignalHandler class): SignalHandler.
                                                             (line  146)
* sigNo (SignalHandler class):           SignalEvent.        (line   47)
* sigNum instance method (SignalHandler class): SignalHandler.
                                                             (line  150)
* sin(3) C function:                     sin.                (line    6)
* sinh(3) C function:                    sinh.               (line    6)
* size instance method (Array class):    Array.              (line   68)
* size instance method (Collection class): Collection.       (line   84)
* size instance method (FileStream class): FileStream.       (line   86)
* size instance variable (Pane class):   Pane.               (line   48)
* sizeof instance method (Object class): Object.             (line  603)
* sizeof instance method (Object class) <1>: Prefixes.       (line   23)
* sizeof operator:                       Prefixes.           (line    6)
* sizePane instance method (ANSILabelPane class): ANSILabelPane.
                                                             (line   92)
* slant instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   68)
* snprintf(3) C function:                snprintf.           (line    6)
* sock instance variable (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line   72)
* sock instance variable (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line   66)
* sock instance variable (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   30)
* socketBaseName instance variable (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   32)
* socketPath instance variable (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   36)
* socketPrefix class variable (UNIXNetworkStream class): UNIXNetworkStream.
                                                             (line   22)
* sockproc.c example program:            Object.             (line  489)
* sockRead instance method (UNIXNetworkStreamReader class): UNIXNetworkStreamReader.
                                                             (line  117)
* sockWrite instance method (UNIXNetworkStreamWriter class): UNIXNetworkStreamWriter.
                                                             (line   38)
* sortAscending instance method (List class): List.          (line  153)
* sortAscendingByName instance method (List class): List.    (line  153)
* sortDescending instance method (List class): List.         (line  153)
* sortDescendingByName instance method (List class): List.   (line  153)
* sortedDirectoryList instance method (DirectoryStream class): DirectoryStream.
                                                             (line  118)
* SortedList class:                      SortedList.         (line    6)
* spawnC instance method (Application class): Application.   (line  210)
* sphere instance method (GLUTApplication class): GLUTApplication.
                                                             (line  226)
* split instance method (String class):  String.             (line  424)
* sprintf(3) C function:                 sprintf.            (line    6)
* sprintf(3) C function <1>:             vsnprintf.          (line    6)
* sprintf(3) C function <2>:             vsprintf.           (line    6)
* sqrt(3) C function:                    sqrt.               (line    6)
* srand(3) C function:                   srand.              (line    6)
* sscanf(3) C function:                  Variable arguments. (line    6)
* sscanf(3) C function <1>:              sscanf.             (line    6)
* sStart instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  153)
* start instance variable (Line class):  Line.               (line   52)
* statFile instance method (FileStream class): FileStream.   (line   89)
* statStream instance method (FileStream class): FileStream. (line  100)
* stderr:                                WriteFileStream.    (line   53)
* stderr <1>:                            fscanf.             (line    8)
* stderr <2>:                            sscanf.             (line    8)
* stderrStream (WriteFileStream class):  WriteFileStream.    (line   53)
* stderrStream (WriteFileStream class) <1>: fscanf.          (line    8)
* stderrStream (WriteFileStream class) <2>: sscanf.          (line    8)
* stdin:                                 ReadFileStream.     (line   17)
* stdin <1>:                             fscanf.             (line    8)
* stdin <2>:                             sscanf.             (line    8)
* stdinStream (ReadFileStream class):    ReadFileStream.     (line   17)
* stdinStream (ReadFileStream class) <1>: fscanf.            (line    8)
* stdinStream (ReadFileStream class) <2>: sscanf.            (line    8)
* stdout:                                WriteFileStream.    (line   49)
* stdout <1>:                            fscanf.             (line    8)
* stdout <2>:                            sscanf.             (line    8)
* stdoutStream (WriteFileStream class):  WriteFileStream.    (line   49)
* stdoutStream (WriteFileStream class) <1>: fscanf.          (line    8)
* stdoutStream (WriteFileStream class) <2>: sscanf.          (line    8)
* strcasecmp(3) C function:              CFunction.          (line  129)
* strcasecmp(3) C function <1>:          strcat-strcpy.      (line    6)
* strcat(3) C function:                  CFunction.          (line  128)
* strcat(3) C function <1>:              strcat-strcpy.      (line    6)
* strchr(3) C function:                  strchr.             (line    6)
* strcmp(3) C function:                  CFunction.          (line  133)
* strcmp(3) C function <1>:              strcat-strcpy.      (line    6)
* strcoll(3) C function:                 strcoll.            (line    6)
* strcpy(3) C function:                  strcat-strcpy.      (line    6)
* Stream class:                          Stream.             (line    6)
* streamEof instance method (FileStream class): FileStream.  (line  110)
* strerror(3) C function:                strerror.           (line    5)
* strftime(3) C function:                strftime.           (line    5)
* String class:                          String.             (line    6)
* strlen(3) C function:                  CFunction.          (line  136)
* strlen(3) C function <1>:              strlen.             (line    5)
* strncasecmp(3) C function:             CFunction.          (line  142)
* strncasecmp(3) C function <1>:         strncat-strncpy.    (line    6)
* strncat(3) C function:                 CFunction.          (line  139)
* strncat(3) C function <1>:             strncat-strncpy.    (line    6)
* strncmp(3) C function:                 CFunction.          (line  145)
* strncmp(3) C function <1>:             strncat-strncpy.    (line    6)
* strncpy(3) C function:                 CFunction.          (line  148)
* strncpy(3) C function <1>:             strncat-strncpy.    (line    6)
* strpbrk(3) C function:                 strpbrk.            (line    5)
* strrchr(3) C function:                 strrchr.            (line    6)
* strspn(3) C function:                  strspn.             (line    5)
* strstr(3) C function:                  strstr.             (line    5)
* strtod(3) C function:                  strtod.             (line    5)
* strtok(3) C function:                  strtok.             (line    5)
* strtoll(3) C function:                 strtoll.            (line    5)
* strxfrm(3) C function:                 strxfrm.            (line    5)
* STR_0XHEX_TO_PTR macro:                C Macros.           (line   89)
* STR_IS_NULL macro:                     Object.             (line   26)
* STR_IS_NULL macro <1>:                 C Macros.           (line  115)
* str_is_zero_q function:                Ctalk library.      (line 2674)
* subPaneButtonPress instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  221)
* subPaneDestroy instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  422)
* subPaneDestroy instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  244)
* subPaneDestroy instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  223)
* subPaneDestroy instance method (X11TextPane class): X11TextPane.
                                                             (line  252)
* subPaneEnter instance method (X11LabelPane class): X11LabelPane.
                                                             (line  251)
* subPaneExpose instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  426)
* subPaneExpose instance method (X11LabelPane class): X11LabelPane.
                                                             (line  247)
* subPaneExpose instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  223)
* subPaneExpose instance method (X11TextPane class): X11TextPane.
                                                             (line  257)
* subPaneGeometry instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  250)
* subPaneKbdInput instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  255)
* subPaneKbdInput instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  211)
* subPaneKbdInput instance method (X11TextPane class): X11TextPane.
                                                             (line  261)
* subPaneLeave instance method (X11LabelPane class): X11LabelPane.
                                                             (line  252)
* subPaneMotionNotify instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  226)
* subPaneMove instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  261)
* subPaneNotify instance method (X11Pane class): X11Pane.    (line  299)
* subPanePointerInput instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  430)
* subPanePointerInput instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  271)
* subPanePointerInput instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  223)
* subPanePointerMotion instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  270)
* subPanePointerMotion instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  223)
* subPaneResize instance method (X11CanvasPane class): X11CanvasPane.
                                                             (line  437)
* subPaneResize instance method (X11PaneDispatcher class): X11PaneDispatcher.
                                                             (line  277)
* subPaneResize instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  223)
* subPaneResize instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  229)
* subPaneResize instance method (X11TextPane class): X11TextPane.
                                                             (line  265)
* subPaneSelectionClear instance method (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  234)
* substrcat function:                    Ctalk library.      (line 2679)
* substrcpy function:                    Ctalk library.      (line 2683)
* subString instance method (String class): String.          (line  436)
* SUCCESS_X exception:                   Exception.          (line  118)
* super keyword:                         Self and super.     (line    6)
* super keyword <1>:                     Method keywords.    (line   94)
* superclassName instance method (Object class): Object.     (line  608)
* SUPERCLASSNAME macro:                  C Macros.           (line  105)
* swapBuffers instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  692)
* Symbol class:                          Symbol.             (line    6)
* Symbol class <1>:                      C statements.       (line  122)
* symbolReference instance method (Symbol class): Symbol.    (line  126)
* SYMTOOBJ macro () function:            Ctalk library.      (line 2686)
* SYMVAL macro:                          Scoping.            (line   97)
* SYMVAL macro () function:              Ctalk library.      (line 2700)
* syncSwap instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  696)
* sysErrno (SystemErrnoException class): SystemErrnoException.
                                                             (line   19)
* sysErrnoStr instance method (String class): String.        (line  442)
* system(3) C function:                  system.             (line    6)
* SystemErrnoException class:            Exception.          (line    6)
* SystemErrnoException Class:            SystemErrnoException.
                                                             (line    6)
* tail instance method (Collection class): Collection.       (line   88)
* tan(3) C function:                     tan.                (line    5)
* tanh(3) C function:                    tanh.               (line    5)
* TCPIPNetworkStream class:              TCPIPNetworkStream. (line    6)
* TCPIPNetworkStreamReader class:        TCPIPNetworkStreamReader.
                                                             (line    6)
* TCPIPNetworkStreamWriter class:        TCPIPNetworkStreamWriter.
                                                             (line    6)
* TCPIPV6UNIXNetworkStream class:        TCPIPV6NetworkStream.
                                                             (line    6)
* TCPIPV6UNIXNetworkStreamReader class:  TCPIPV6NetworkStreamReader.
                                                             (line    6)
* TCPIPV6UNIXNetworkStreamWriter class:  TCPIPV6NetworkStreamWriter.
                                                             (line    6)
* teapot instance method (GLUTApplication class): GLUTApplication.
                                                             (line  231)
* template command:                      Templates.          (line  109)
* Templates:                             Templates.          (line    6)
* terminalHeight instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  178)
* TerminalStream class:                  TerminalStream.     (line    6)
* terminalWidth instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  184)
* termioCCFlag instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  127)
* termioCIFlag instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  127)
* termioCLFlag instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  127)
* termioCOFlag instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  127)
* tetrahedron instance method (GLUTApplication class): GLUTApplication.
                                                             (line  215)
* text (SignalHandler class):            SignalEvent.        (line   50)
* Text editing:                          Ctalk library.      (line 2500)
* Text editor example program:           X11TextEditorPane.  (line  240)
* text instance method (X11LabelPane class): X11LabelPane.   (line  263)
* text instance method (X11LabelPane class) <1>: X11LabelPane.
                                                             (line  266)
* text instance variable (ANSILabelPane class): ANSILabelPane.
                                                             (line   43)
* text instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   35)
* text instance variable (X11TextPane class): X11TextPane.   (line   96)
* textColor instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  227)
* textHeight instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  207)
* textLength instance variable (X11TextEditorPane class): X11TextEditorPane.
                                                             (line  165)
* textLine instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  231)
* textLines instance variable (X11LabelPane class): X11LabelPane.
                                                             (line  235)
* textLines instance variable (X11TextPane class): X11TextPane.
                                                             (line  106)
* textList instance variable (X11TextPane class): X11TextPane.
                                                             (line  101)
* textWidth instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  706)
* textWidth instance method (X11Font class): X11Font.        (line   69)
* textWidth instance method (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line  212)
* textWidthFT instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  711)
* thumb instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  151)
* thumbBackgroundColor instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  155)
* thumbDimensions instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  230)
* thumbErasePen instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  159)
* thumbHeight instance variable (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   66)
* thumbHeight instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  163)
* thumbPen instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  167)
* thumbPercent instance method (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  234)
* thumbPix instance variable (X11ScrollBarPane class): X11ScrollBarPane.
                                                             (line  171)
* thumbStartLine instance variable (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   70)
* Time class:                            CTime.              (line    6)
* timeout instance variable (TCPIPNetworkStreamReader class): TCPIPNetworkStreamReader.
                                                             (line   15)
* timeout instance variable (TCPIPV6NetworkStreamReader class): TCPIPV6NetworkStreamReader.
                                                             (line    9)
* timerMSec instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  258)
* timerTickHandler instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  262)
* timeZone instance variable (CalendarTime class): CalendarTime.
                                                             (line   73)
* timeZoneName instance method (CTime class): CTime.         (line   50)
* timeZoneOffset instance method (CTime class): CTime.       (line   54)
* time_t type:                           C statements.       (line  156)
* title instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  715)
* title method (ANSIWidgetPane class):   ANSIWidgetPane.     (line  116)
* titleString instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   66)
* tmpnam(3) C function:                  tmpnam.             (line    5)
* tokenize instance method (String class): String.           (line  446)
* tokenize instance method (String class) <1>: Documentation.
                                                             (line   69)
* tokenizeLine instance method (String class): String.       (line  458)
* toLower instance method (Character class): Character.      (line  217)
* tolower(3) C function:                 tolower.            (line    6)
* top instance variable (Rectangle class): Rectangle.        (line   73)
* torus instance method (GLUTApplication class): GLUTApplication.
                                                             (line  235)
* totalLines instance variable (ANSIListBoxPane class): ANSIListBoxPane.
                                                             (line   64)
* totalLines instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line   99)
* toUpper instance method (Character class): Character.      (line  221)
* toupper(3) C function:                 toupper.            (line    6)
* traceEnabled instance method (Object class): Object.       (line  613)
* TreeNode class:                        TreeNode.           (line    6)
* TRIM_CHAR macro:                       Character.          (line   36)
* TRIM_CHAR macro <1>:                   Ctalk library.      (line 2736)
* TRIM_CHAR_BUF macro:                   Ctalk library.      (line 2740)
* TRIM_LITERAL macro:                    Ctalk library.      (line 2732)
* trunc(3) C function:                   trunc.              (line    5)
* ttyDevice instance variable (ANSITerminalStream class): ANSITerminalStream.
                                                             (line  133)
* Typedefs:                              C statements.       (line  156)
* tzDst instance variable (CalendarTime class): CalendarTime.
                                                             (line   73)
* tzStd instance variable (CalendarTime class): CalendarTime.
                                                             (line   73)
* UNDEFINED_CLASS_X exception:           Exception.          (line  118)
* UNDEFINED_LABEL_X exception:           Exception.          (line  118)
* UNDEFINED_METHOD_X exception:          Exception.          (line  118)
* UNDEFINED_PARAM_CLASS_X exception:     Exception.          (line  118)
* UNDEFINED_RECEIVER_X exception:        Exception.          (line  118)
* UNDEFINED_TYPE_X exception:            Exception.          (line  118)
* underlineOnOff instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  191)
* ungetc(3) C function:                  ungetc.             (line    5)
* Unimplemented C type warning:          C statements.       (line  122)
* UNIXNetworkStream class:               UNIXNetworkStream.  (line    6)
* UNIXNetworkStreamReader class:         UNIXNetworkStreamReader.
                                                             (line    6)
* UNIXNetworkStreamWriter class:         UNIXNetworkStreamWriter.
                                                             (line    6)
* UNKNOWN_FILE_MODE_X exception:         Exception.          (line  118)
* unmap instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  196)
* unmap method (ANSIWidgetPane class):   ANSIWidgetPane.     (line  119)
* unshift instance method (List class):  List.               (line  167)
* useCursor instance method (X11Pane class): X11Pane.        (line  305)
* useFTFont instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  719)
* userObjects instance variable (Method class): Method.      (line   96)
* USER_EXCEPTION_X exception:            Exception.          (line  118)
* useXFont instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  727)
* useXRender instance method (Application class): Application.
                                                             (line  240)
* useXRender instance method (X11Pane class): X11Pane.       (line  310)
* usingXRender instance Method (Application class): Application.
                                                             (line  245)
* usingXRender instance Method (X11Pane class): X11Pane.     (line  315)
* uSleep instance method (Application class): Application.   (line  237)
* utcTime instance method (CTime class): CTime.              (line   58)
* value instance method (List class):    List.               (line  171)
* value instance method (Object class):  Object.             (line  617)
* value instance method (ReadFileStream class): ReadFileStream.
                                                             (line   62)
* value instance variable (Array class): Array.              (line   34)
* value instance variable (Character class): Character.      (line   67)
* value instance variable (Float class): Float.              (line   12)
* value instance variable (Integer class): Integer.          (line   12)
* value instance variable (Key class):   Key.                (line   47)
* value instance variable (LongInteger class): LongInteger.  (line   12)
* value instance variable (Object class): Object.            (line   12)
* value instance variable (String class): String.            (line   45)
* value instance variable (Symbol class): Symbol.            (line   49)
* value method (Object class):           Method API.         (line   28)
* value method (WriteFileStream class):  WriteFileStream.    (line   77)
* varargs instance variable (Method class): Method.          (line   68)
* Variable arguments:                    Variable arguments. (line    6)
* Variable identifiers (tags):           Ctalk library.      (line 1525)
* Vector class:                          Vector.             (line    6)
* verbose instance variable (ObjectInspector class): ObjectInspector.
                                                             (line   25)
* vfprintf(3) C function:                vfprintf.           (line    6)
* vfscanf(3) C function:                 vfscanf.            (line    6)
* viewHeight instance variable (ANSILabelPane class): ANSILabelPane.
                                                             (line   46)
* viewHeight instance variable (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   70)
* viewHeight instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  107)
* viewHeight instance variable (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   58)
* viewHeight instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   41)
* viewHeight instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  162)
* viewHeight instance variable (X11TextPane class): X11TextPane.
                                                             (line  123)
* viewStartLine instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  103)
* viewStartLine instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   38)
* viewStartLine instance variable (X11TextPane class): X11TextPane.
                                                             (line  110)
* viewWidth instance variable (ANSILabelPane class): ANSILabelPane.
                                                             (line   50)
* viewWidth instance variable (ANSIProgressBarPane class): ANSIProgressBarPane.
                                                             (line   75)
* viewWidth instance variable (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  111)
* viewWidth instance variable (ANSIScrollPane class): ANSIScrollPane.
                                                             (line   62)
* viewWidth instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   47)
* viewWidth instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  166)
* viewWidth instance variable (X11TextPane class): X11TextPane.
                                                             (line  123)
* viewXOffset instance variable (ANSITextBoxPane class): ANSITextBoxPane.
                                                             (line   51)
* viewXOffset instance variable (X11TextPane class): X11TextPane.
                                                             (line  119)
* viewXOrg instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  170)
* viewYOrg instance variable (X11CanvasPane class): X11CanvasPane.
                                                             (line  174)
* visualAlphaAccumSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  299)
* visualAlphaSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  289)
* visualAuxBuffers instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  266)
* visualBlueAccumSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  299)
* visualBlueSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  289)
* visualBufferSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  271)
* visualDepthSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  275)
* visualDoubleBuffer instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  280)
* visualGreenAccumSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  299)
* visualGreenSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  289)
* visualInfoPtr instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  284)
* visualRedAccumSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  299)
* visualRedSize instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  289)
* visualRGBA instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  309)
* visualStencilPlanes instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  315)
* visualStereo instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  320)
* vprintf(3) C function:                 vprintf.            (line    6)
* vPrintOn instance method (String class): String.           (line  464)
* vscanf(3) C function:                  vscanf.             (line    6)
* vsnprintf(3) C function:               vsnprintf.          (line    6)
* vsprintf(3) C function:                vsprintf.           (line    6)
* vsscanf(3) C function:                 vsscanf.            (line    6)
* waitStatus instance method (SignalHandler class): SignalHandler.
                                                             (line  154)
* Warnings:                              Errors.             (line    6)
* watch instance method (X11Cursor class): X11Cursor.        (line   48)
* weight instance variable (X11FreeTypeFont class): X11FreeTypeFont.
                                                             (line   68)
* while statements:                      Control structures. (line    6)
* width instance variable (Pen class):   Pen.                (line   29)
* width instance variable (X11Bitmap class): X11Bitmap.      (line   16)
* Win32TerminalStream class:             Win32TerminalStream.
                                                             (line    6)
* windowID instance method (GLUTApplication class): GLUTApplication.
                                                             (line  240)
* winHeight instance variable (Application class): Application.
                                                             (line   28)
* winWidth instance variable (Application class): Application.
                                                             (line   28)
* winXOrg instance variable (Application class): Application.
                                                             (line   28)
* winYOrg instance variable (Application class): Application.
                                                             (line   28)
* withArg instance method (Method class): Object.            (line  462)
* withArg instance method (Method class) <1>: Method.        (line  116)
* withBorder instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  131)
* withBorder instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  201)
* withBorder instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line   82)
* withBorder method (ANSITerminalPane class): ANSIWidgetPane.
                                                             (line  102)
* withdraw instance variable (ANSIWidgetPane class): ANSIWidgetPane.
                                                             (line   70)
* withdraw method (ANSITextEntryPane class): ANSIWidgetPane. (line   20)
* withdraw method (ANSITextEntryPane class) <1>: ANSITextEntryPane.
                                                             (line   89)
* withPrompt method (ANSITextEntryPane class): ANSITextEntryPane.
                                                             (line   95)
* withShadow instance method (ANSIScrollingListBoxPane class): ANSIScrollingListBoxPane.
                                                             (line  148)
* withShadow instance method (ANSITerminalPane class): ANSITerminalPane.
                                                             (line  207)
* withShadow instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line  101)
* withShadow method (ANSITerminalPane class): ANSIWidgetPane.
                                                             (line  102)
* withText instance method (ANSIButtonPane class): ANSIButtonPane.
                                                             (line   64)
* withText instance method (ANSIMessageBoxPane class): ANSIMessageBoxPane.
                                                             (line   44)
* withText instance method (ANSIYesNoBoxPane class): ANSIYesNoBoxPane.
                                                             (line  124)
* writeChar method (WriteFileStream class): WriteFileStream. (line   80)
* WriteFileStream class:                 WriteFileStream.    (line    6)
* writeFormat instance method (String class): String.        (line  494)
* writeFormat method (String class):     Variable arguments. (line   48)
* writeFormat method (WriteFileStream class): WriteFileStream.
                                                             (line   83)
* writeFormat method (WriteFileStream class) <1>: Variable arguments.
                                                             (line   48)
* writeStream method (WriteFileStream class): WriteFileStream.
                                                             (line   86)
* writeText instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line  211)
* writeText instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line  114)
* writeVec instance method (TCPIPNetworkStream class): TCPIPNetworkStream.
                                                             (line  216)
* writeVec instance method (TCPIPV6NetworkStream class): TCPIPV6NetworkStream.
                                                             (line  119)
* writeVec instance method (WriteFileStream class): WriteFileStream.
                                                             (line   89)
* WRONG_NUMBER_OF_ARGUMENTS_X exception: Exception.          (line  118)
* x instance variable (Point class):     Point.              (line   22)
* X Render Extension:                    Application.        (line  240)
* X Render Extension <1>:                X11Pane.            (line  310)
* X resources:                           X11Pane.            (line  274)
* X Window System:                       C library functions.
                                                             (line   20)
* X11Bitmap class:                       X11Bitmap.          (line    6)
* X11CanvasPane class:                   X11CanvasPane.      (line    6)
* X11Cursor class:                       X11Cursor.          (line    6)
* X11Font class:                         X11Font.            (line    6)
* X11FreeTypeFont class:                 X11FreeTypeFont.    (line    6)
* X11LabelPane class:                    X11LabelPane.       (line    6)
* X11Pane class:                         X11Pane.            (line    6)
* X11PaneDispatcher class:               X11PaneDispatcher.  (line    6)
* X11ScrollBarPane class:                X11ScrollBarPane.   (line    6)
* X11TextEditorPane class:               X11TextEditorPane.  (line    6)
* X11TextPane class:                     X11FreeTypeFont.    (line   44)
* X11TextPane class <1>:                 X11TextPane.        (line    6)
* xColormap class variable (X11Pane class): X11Pane.         (line  105)
* xDisplay class variable (X11Pane class): X11Pane.          (line  107)
* xEventData1 instanceVariable (InputEvent class): InputEvent.
                                                             (line   24)
* xEventData2 instanceVariable (InputEvent class): InputEvent.
                                                             (line   24)
* xEventData3 instanceVariable (InputEvent class): InputEvent.
                                                             (line   24)
* xEventData4 instanceVariable (InputEvent class): InputEvent.
                                                             (line   24)
* xEventData5 instanceVariable (InputEvent class): InputEvent.
                                                             (line   24)
* xfopen () function:                    Ctalk library.      (line 2745)
* xfprintf () function:                  Ctalk library.      (line 2745)
* xfscanf () function:                   Ctalk library.      (line 2745)
* Xft configuration:                     X11FreeTypeFont.    (line   12)
* XftConfig file:                        X11FreeTypeFont.    (line   12)
* xGC instance variable (X11Bitmap class): X11Bitmap.        (line   21)
* xGC instance variable (X11Pane class): X11Pane.            (line   92)
* XLFD, determining:                     String.             (line  307)
* xLineHeight instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  323)
* xMaxCharWidth instance variable (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  328)
* xmemcpy () function:                   Ctalk library.      (line 2745)
* xmemmove () function:                  Ctalk library.      (line 2745)
* xmemset () function:                   Ctalk library.      (line 2745)
* xpmCharsPerColorFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line  149)
* xpmColorsFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line  153)
* xpmHeightFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line  157)
* xpmInfoFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line  144)
* xpmToTexture instance method (GLXCanvasPane class): GLXCanvasPane.
                                                             (line  737)
* xpmToTexture method (GLUTApplication class): GLUTApplication.
                                                             (line  246)
* xpmWidthFromData instance method (X11Bitmap class): X11Bitmap.
                                                             (line  161)
* xResource instance variable (X11Bitmap class): X11Bitmap.  (line   24)
* xsprintf () function:                  Ctalk library.      (line 2745)
* xstrcat () function:                   Ctalk library.      (line 2745)
* xstrcpy () function:                   Ctalk library.      (line 2745)
* xstrncat () function:                  Ctalk library.      (line 2745)
* xstrncpy () function:                  Ctalk library.      (line 2745)
* Xt object classes:                     C library functions.
                                                             (line   20)
* xWindowID instance variable (X11Pane class): X11Pane.      (line   98)
* y instance variable (Point class):     Point.              (line   23)
* year instance variable (CalendarTime class): CalendarTime. (line   38)
* zoneInfo instance method (CalendarTime class): CalendarTime.
                                                             (line  143)

