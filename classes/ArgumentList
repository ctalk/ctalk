/* $Id: ArgumentList,v 1.1.1.1 2020/05/16 02:37:00 rkiesling Exp $ -*-C-*-*/

/*
  This file is part of Ctalk.
  Copyright © 2005-2014  Robert Kiesling, rk3314042@gmail.com.
  Permission is granted to copy this software provided that this copyright
  notice is included in all source code modules.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
*/

/*
 *   ArgumentList class.  Used for variable number of arguments,
 *   and is mainly a no-op in this version.
 */

Object class ArgumentList
"This class is a legacy class from the earlier versions
of Ctalk.  Now it's used occasionally for methods that
can be loaded circularly by other classes, for example
Character : asString.";

Character instanceMethod asString (void) {
  "If the receiver is a Character or Integer, check that
  it is a printable character.  Otherwise, format it as
  the printable representation of the character, e.g.,
  \1, \2, \3, etc.  This method is located here in
  order to avoid circular references between Character
  and String classes when scanning the libraries during
  compilation."
  String new resultString;
  returnObjectClass String;

  if ((self value is Character) || 
      (self value is Integer)) {
    if (self value isPrint) {
      resultString printOn "%c", self;
    } else {
      resultString printOn "\\%d", self; 
    }
  } else {
    resultString printOn "%s", self value;
  }
  return resultString;
}

