2020-01-01
	- Updated X11TextPane : subPaneResize and X11TextPane :
	background methods.
	- In __ctalkCreateX11SubWindow, updated the GC foreground
	from the self foregroundColor instance variable (x11lib.c).
	Updated X11TextEditorPane : foreground method. Also updated
	__xlib_render_text to set the drawing gc from the
	fgcolorname (edittext.c).
2020-01-02
	- Updated __ctalkX11SetSizeHints and __ctalkX11GetSizeHints
	to use size_hints -> width and size_hints -> height as well
	as base_width and base_height.  Also changed the size_hints
	flags to use USSize (xgeometry.c).
	- Updated X11CanvasPane : subPaneResize to set the pane's
	size x and size y instance variables also.
	- Updated __edittext_get_primary_selection so that it
	pastes the receiver's content if the selection is in  our
	window (edittext.c).
	- Added __edittext_insert_str_at_click (edittext.c).
2020-01-03
	- Updated buf_init and __xlib_render_text to check that
	a starting point position is not past the end of the text
	(edittext.c).
	- Added the X11TextEditorPane : gotoChar method.
	2020-01-05
	- Added the GLXCanvasPane : displayWidth and displayHeight
	methods.
2020-01-06
	- Added the __ctalkX11SubWindowGeometry library function
	(xgeometry.c).
	- Added a check for the "super" keyword in the CAN_CACHE_METHOD
	macro (rt_expr.c).
2020-01-07
	- Added attachTo methods with a geometry string argument in
	X11PaneDispatcher and X11CanvasPane classes.
	- Removed the X11PaneDispatcher : containerMode instance variable,
	which isn't needed.
	- Added the FOCUSCHANGENOTIFY X event definition in x11defs.h,
	and updated __ctalkX11InputClient to send the event to the
	application process (x11lib.c).  Added the X11PaneDispatcher :
	handleFocusChange instance variable, and focuschange handler
	type.
2020-01-08
	- Added FOCUSCHANGENOTIFY case in X11PaneDispatcher :
	handleSubPaneEvent.
	- Added EnterWindowMask and LeaveWindowMask to the X client's
	event mask (x11defs.h).  Also added the ENTERWINDOWNOTIFY and
	LEAVEWINDOWNOTIFY InputEvent classes (x11defs.h and ctalklib.in).
	Added EnterNotify and LeaveNotify cases in __ctalkX11InputClient
	(x11lib.c).  Added the "enternotify" and "leavenotify" handler
	types, and the X11PaneDispatcher : handleEnterNotify and
	X11PaneDispatcher : handleLeaveNotify instance variables.
	- Updated fmt_printf_fmt_arg to unset ptr_fmt_is_alt_int_fmt
	after formatting the object-to-C translation if it has been
	set (objtoc.c).
2020-01-10
	- In __rt_method_arglist_n_args, check for a math operator
	after a closing paren, and don't interpret the first paren
	set as enclosing the entire arglist (rt_args.c).
2020-01-11
	- X11LabelPane class.
2020-01-12
	- Added the db member to the METHOD typedef (object.h,
	ctalklib.in).
	- Fixed a bug in event_to_client that read the write
	function's output (x11lib.c).
2020-01-13
	- Added read_event, and changed event_to_client
	to use shared memory to store event data (x11lib.c).  Updated
	X11TerminalStream : queueInput and read_x_event to read
	event data from shared memory.
2020-01-15
	- Added the X11LabelPane : backgroundColor instance variable,
	and the X11LabelPane : __highlightBackground internal method
	to draw it.
	- Added edittext_resize_notify in x11lib.c, so calc_line_width
	in edittext.c can update the client-side line width.
	- Updated parser_pass to check for library_input before checking
	for a return-statement-only function (parser.c).
2020-01-16
	- Removed a clause from __ctalk_arg_expr that used a
	pre-existing value object for a partial evaluation of
	a complex argument term (rt_args.c).
	- Added margexprs71.c test program.
2020-01-17
	- Added the X11ScrollBarPane : background instance method,
	and the instance variables padding, frameWidthVar, and margin.
2020-01-18
	- Added a context warning message before the exception handler
	at the end of parser_pass (parser.c).
2020-01-20
	- Added X11ScrollBarPane : attachTo with a geometry specification
	as the second parameter.
	- Fixed a typo in __ctalkX11SubWindowGeometry so the y origin
	of the geometry gets converted correctly (xgeometry.c).
	- Updated X11ScrollBarPane class to work as a subwindow.
	- Added the demos/x11/scrollbar.ca example program.
2020-01-22
	- Added the X11Bitmap : copy method.
2020-01-24
	- Added a beveled thumb to the X11ScrollBarPane class.
	- Removed the X11PaneDispatcher : subPaneInfo instance variable,
	and added the X11PaneDispatcher : subPaneGeometry instance
	variable.
2020-01-25
	- Updated the X11ScrollBarPane : subPaneResize method.
	- In resolve, only look for parameters if the token is
	a LABEL (resolve.c).
	- In unary_op_attributes, fill in the returned info for a unary
	op if the message already has the TOK_IS_PREFIX_OPERATOR
	attribute set (prefixop.c).
	- Added check for class casts in eval_arg (eval_arg.c),
	and for an expression that has a class cast preceded by a
	prefix operator..
2020-01-26
	- Removed is_expr_obj, which is no longer needed (rexpr.c).
	- Updated method_call to not call a primitive method during
	expr_check pass (method.c).
	- In __ctalk_to_c_ptr, just return the object if it has
	LOCAL_VAR scope and its value isn't a numeric format
	(lib/objtoc.c).
	- Added X11Pane : mainWindow method.
2020-01-27
	- In resolve, moved the call to class_object_search within
	the clause the the program takes when there isn't already
	a result object (resolve.c).
	- Moved part of resolve into resolve_single_token_method_param
	(resolve.c).
	- Added rme (resolve.c).
	- Added class_method_template_call, from a part of resolve
	(resolve.c).
2020-01-29
	- Added __edittext_row_col_from_mark, __edittext_scroll_down,
	and __edittext_scroll_up (edittext.c), and the X11TextEditorPane :
	clearSelection method.
2020-01-31
	- Added __edittext_recenter and __edittext_xk_keysym (edittext.c).
	- Fixed X11LabelPane's enter and leave event handlers.
	- Check for the subpane's window ID when handling button events
	in X11PaneDispatcher : queueInput.
	- Check for a "super" keyword in is_self_expr_as_fn_lvalue
	(c_rval.c).
	- Added range checks in the dbuf concatenation in
	__ctalkGUIPaneDrawRectangle (guidrawrectangle.c).
	- Updated __ctalk_arg to check for a declared object
	when the argument is the return of a __ctalk_arg_internal
	call (rt_args.c).
2020-02-01
	- Added the X11LabelPane : drawButtonLayout method.
	- Added instancevar_wo_rcvr_warning (errmsgs.c), called
	by eval_arg.
2020-02-02
	- Updated __ctalkCreateX11MainWindow to use a background
	color set in X11Pane : backgroundColor if it is already
	set before calling X11Pane : initialize (x11lib.c).
2020-02-03
	- Added the demos/x11/buttons.ca example program.
2020-02-04
	- Use a struct for rectangle dimensions in
	__xlib_draw_rectangle* (x11lib.c).
	- Added the __ctalkX11DrawRoundedRectangle and
	__ctalkGUIDrawRoundedRectangle functions (guirectangle.c).
	Also add the X11CanvasPane : drawRoundedRectangle method.
	In these cases, the panebackingstore information is replaced
	with the corner radius information, which __xlib_draw_rectangle
	uses to draw the arcs which form the rectangle's corners if
	corner_radius > 0 (x11lib.c).
	- Added the radius instance variable to X11LabelPane, and
	use it to call X11CanvasPane : drawRoundedRectangle when
	a radius is set.
2020-02-05
	- Added a check for a LABEL following a parenthesized expression
	in __rt_arglist_limit (rt_args.c).
	- Updated X11ButtonPane : draw to add blending with the background
	when drawing rounded, and also clipping the label
	text to fit within deeply rounded corners.
	- Added the X11ButtonPane methods: isClicked, text, haveClick,
	and clearClick.
2020-02-06
	- Moved __xlib_draw_rectangle to xrender.c.
	- Added xr_make_surface (xrender.c), which is common to
	all drawing functions.
	- Made the X11TerminalStream event_mask an argument to
	read_event, so we can return from unneeded messages more
	quickly (x11lib.c).
	- Updated method_object_msg_internal_2_args to silently
	return if a virtual method isn't defined (rt_vmthd.c).
	- Updated read_event to use event_mask as an argument,
	and to check an event type agains the event_mask, and
	to reset and wait for the next event if it isn't included,
	if the event mask > 0 (x11lib.c).
	- Added the SHM_EVENT_MASK constant (x11defs.h), so read_event
	can set the event mask there, so event_to_event can also use
	the event mask to trim unwanted/unneeded events before sending
	them (x11lib.c).
	- Cleaned up method_object_msg_internal_2_args (rt_vmthd.c).
	- Added __ctalk_method_from_object_2_args (rt_vmthd.c).
2020-02-07
	- Added the EV_CH struct (x11lib.c), and the buffered
	event list (x11lib.c).
	- Updated demos/x11/buttons.ca to use two buttons.
2020-02-08
	- Added the X11PaneDispatcher : canFocus instance variable,
	and removed the X11LabelPane : canFocus instance variable.
	- Renamed the X11PaneDispatcher : handleFocusChange instance
	variable to X11PaneDispatcher : handleWMFocusChange.  Changed
	the handler type from focuschange to wmfocuschange, and also
	changed the X event type from FOCUSCHANGENOTIFY to
	WMFOCUSCHAGENOTIFY.
2020-02-09
	- Added collect_errmsg_expr (errmsgs.c), called by
	undefined_receiver_exception (resolve.c).
	- Added a null result check and null_result_obj call when
	calling a prefix method in eval_expr (rt_expr.c).
	- Do a fixup in _rt_math_op if we have a closing paren
	before an operator, and the paren tok's object hasn't
	been filled in, for example, if the value of the
	left-hand operand expression is NULL (rt_expr.c).
	- Removed the now unused client_sock_fd argument to
	event_to_client and resize_event_to_client and removed
	now unused code from event_to_client (x11lib.c).
2020-02-11
	- Added the X11PaneDispatcher : canFocus instance variable,
	and removed the X11CanvasPane-only canFocus instance
	variable.
	- Added the X11PaneDispatcher : focusPanePtr instance
	variable, and added a check for a Tab key press in
	X11PaneDispatcher : handleSubPaneEvent.  Started on
	the X11PaneDispatcher : shiftFocus method.
2020-02-13
	- Added a recursive superclass lookup to get_instance_variable
	(object.c).
	- Added a valid method label check in is_argblk_expr (argblk.c),
	and a warning function, undefined_blk_method_warning
	(errmsgs.c).
	- Moved AssociativeArray : mapKeys to Collection : mapKeys.
2020-02-14
	- Removed an unused strcpy call from var_definition (primitives.c).
	- Added resolve_rcvr_is_undefined (errmsgs.c), to check for a bad
	receiver to an instanceVariable or classVariable method message in
	resolve (resolve.c).
	- Added the X11PaneDispatcher : highlight instance variable, and
	removed the highlight instance variable from X11LabelPane.
	- Added the X11ButtonPane : subPaneFocusIn and X11ButtonPane :
	subPaneFocusOut instance methods.
	- Added a lookback in argblk_super_expr for prefix operators
	(mainly '*') and parentesized prefix expressions when super
	is used as a C function argument to e.g., printf (argblk.c).
2020-02-15
	- Updated eval_subexpr to do a fixup if we encounter an
	expression like: (*myList myInstVar) = myArg when myInstVar
	is a Symbol, to handle the way that Symbol : = makes
	assignments.
	- Added set_receiver_msg_and_obj_fixup (lib/rt_expr.c).
	- Added the rcvrexpr[2-4].c test programs.
2020-02-16
	- Added the void *db member to the RT_FN type (rtinfo.h,
	ctalklib.in).
	- Removed linemarker_line from parse (parser.c).
2020-02-17
	- In argblk_super_expr, handle a super with a prefix operator
	directly (argblk.c).
	- In NULL_return_expr, return a ((void *)0) string for an
	argument block return (return.c).
	- Added the X11PaneDispatcher : shiftFocus method, and added a
	X11LabelPane widget to the demos/x11/buttons.ca example program.
	Also add a Tab key binding in X11PaneDispatcher :
	handleSubPaneEvent to shift the focus between widgets.  Also
	added the X11PaneDispatcher instance variables handleFocusIn
	and handleFocusOut, as well as the focusin and focusout event
	types.
2020-02-19
	- Added the X11PaneDispatcher : tabFocus instance variable.
	- Added checks for selecting a saved font from a widget's
	ftFontVar in X11ButtonPane : draw and X11LabelPane : draw.
2020-02-20
	- Added the time member from XKeyEvents and XCrossingEvents to
	the X event data returned to the app (x11lib.c).  Added the
	g_ptr_t and g_kbd_t variables in X11PaneDispatcher to record
	the last focus event, and added the code to save the event
	times in X11PaneDispatcher : handleSubPaneEvent.
	- Added the X11PaneDispatcher : clearHightlight method.
	- Added the X11PaneDispatcher : mouseOver instance variable,
	and the subPaneEnterNotify and subPaneLeaveNotify methods.
	Also removed the pointIsInFrame method.
	- In event_to_client, check for MOTIONNOTIFY events, and
	if we encounter them, don't cache them but send them directly
	to the client process, and discard any overflow, which
	works okay for an event stream that is still being generated
	(x11lib.c).
2020-02-21
	- Added a check for a valid object in get_class_object
	(cclasses.c).
2020-02-23
	- Removed references to LVAL_OBJECT_ALIAS scope, which
	isn't used any longer (resolve.c, mcct.c, object.h).
2020-02-25
	- Updated the ctalkmethods.1 manual page.
	- Updated the classes/Makefile.am file to add X11MessageBoxPane
	class.
2020-02-26
	- Increased the buffer size in __ctalkX11SubWindowGeometry to
	255 characters (xgeometry.c).
2020-02-27
	- Added xdialog.c and updated lib/Makefile.am.
	- Added SHM_DISPLAY area in x11defs.h.
	- Added the X11Pane : displayPtr instance variable.
	- Added code in __ctalkCreateX11MainWindow,
	__ctalkCreateX11MainWindowTitle, and
	__ctalkCreateX11SubWindow to set the pane object's displayPtr
	instance variable from the main Display * in the app's
	process space (x11lib.c).
2020-20-28
	- Updated X11TextEditorPane : attachTo to set the displayPtr
	instance variable from the main window's displayPtr, and
	updated buf_init (edittext.c) to save a pointer to the editor
	pane's displayPtr instance variable.  Also updated the attachTo
	methods in X11ButtonPane, X11CanvasPane, X11MessageBoxPane,
	X11PaneDispatcher, X11ScrollBarPane, and X11TextPane.
	- In arg_active_varentry, make sure the arg_active_tag is
	a valid VARENTRY (rtinfo.c).
	- Updated GUI libs for 6-argument make_req macro (32-bit and
	64-bit)	that includes a Display * argument (x11defs.h, etc).
2020-02-29
	- Added local Display * construction from shared memory in
	__xlib_handle_client_request (x11lib.c).
	- Added a Display * parameter to __xlib_put_str (x11lib.c),
	and __xlib_clear_rectangle_basic (bitmap.c).  Removed
	__ctalkX11ClearBufferRectangle, which is no longer used
	(bitmap.c).
	- Added expression to set the main window background color in
	demos/x11/xhello.c and tools/ctxlogo/ctxlogo.ca.
	- Updated __xlib_put_str_ft to use a local Display * (x11lib.c).
	Also added expression to set the main window background color in
	demos/xft/xfthello.c.
	- Updated __xlib_set_wm_name_prop, __xlib_draw_window,
	__xlib_clear_rectangle, __xlib_resize_window,
	__xlib_move_window, __xlib_refresh_window, __xlib_use_cursor,
	__xlib_change_gc, __xlib_change_window_background,
	__xlib_resize_pixmap, __xlib_pixmap_from_data,
	__xlib_copy_pixmap, and __xlib_change_face_request, and
	__xlib_change_face_request_ft to use a Display * argument
	(x11lib.c).	Also updated __xlib_draw_point,	__xlib_draw_line,
	__xlib_draw_rectangle, and __xlib_draw_circle (xrender.c). And
	updated __xlib_render_text and __xlib_get_primary_selection
	(edittext.c).
	- Added a Display * parameter to is_wm_xfce and is_kwin_desktop
	(x11lib.c).
	- Updated X11CanvasPane : subPaneDestroy, X11ScrollBarPane :
	subPaneDestroy, and X11PaneDispatcher : subPaneResize and
	X11PaneDispatcher : subPaneMove to use the receiver's
	displayPtr instance variable instead of the X11Pane : xDisplay
	class variable.  Removed the X11Pane : xDisplay variable.
	- In X11Pane : deleteAndClose, set the displayPtr to NULL.
	- In X11MessageBox class, moved the buffer creation to the
	show method, after the dialog window is created and the
	program has a valid parent ID for the buffers.
2020-03-02
	- Added a Display * argument to __ctalkX11CreateGC (bitmap.c).
	- Updated __save_pane_to_vars to retrieve and set the pane's "depth"
	value and its "value" variable value (x11lib.c).
	- Updated the __xlib_set_wm_name_prop call in
	__ctalkCreateX11MainWindowTitle (x11lib.c).
	- Changed the lookup_color calls in __xlib_change_gc to
	lookup_color_d, which uses a Display * argument (x11lib.c).
2020-03-03
	- In define_symbol (preprocess.c), save argument list start
	and end stack indexes, so we know to end the macro name if
	there is no whitespace between the argument list and the
	macro body.
2020-03-04
	- Added fn_param[28-30].c test programs.
2020-03-05
	- Updated __ctalkX11CreateGC (bitmap.c) to create GC
	with the values defined in DEFAULT_GCV_MASK (x11defs.h).
	- Updated lookup_pixel_d to use the local Display * when
	calling lookup_color (x11lib.c).
	- Added the X11Pane : modal and X11Bitmap : modal instance
	variables.
2020-03-06
	- Updated __ctalkDefineInstanceVariable and __ctalkSetObjectValueClass
	to check BOOL_BUF_SIZE_INIT and set OBJECT_VALUE_IS_BIN_BOOL
	(rtobjvar.c and rtnewobj.c).
	- In copy_instance_vars_from_class, if the source var's "value"
	var class attributes includes OBJECT_VALUE_IS_BIN_BOOL, then
	set the new var's "value" instance var's value to INTBUFSIZE,
	and copy the class object's var prototype value to the new
	variable (rtobjvar.c).
	- In ctalk.h, #define BOOLBUFSIZE as an alias for INTBUFSIZE.
2020-03-07
	- In __method_object_init, set the isInitialized instance
	variable as a boolean binary value (rt_vmthd.c).
	- In __create_object_internal, added an OBJECT_VALUE_IS_BIN_BOOL
	value initialization (rtnewobj.c).
	- Updated __glxlib_visual_attributes to use binary boolean
	values (glxlib.c).
2020-03-08
	- Added __ctalkCloseX11DialogPane (xdialog.c).
	- Updated __ctalkX11SetBackgroundBasic and __ctalkX11SetForegroundBasic
	to work with xdialog.c windows (guisetbackground.c, guisetforeground.c),
	and also updated the functions __ctalkX11PutStrBasic and
	__ctalkX11UseFontBasic to work with dialog windows (guiputstr.c,
	x11lib.c), and __ctalkGUIPaneRefresh (guirefresh.c).
	- In __ctalkToCLongInteger, check for an OBJECT_VALUE_IS_BIN_INT
	attribute and return the int value (lib/objtoc.c).
	- In __xlib_draw_str_ft, if we have a dialog call, completely
	delete the XftDraw (x11lib.c).  Also close the X display connection
	to the dialog in __ctalkCloseX11DialogWindow when closing the
	window (xdialog.c).
	- Updated __ctalkCreateX11SubWinwdow to use the parent pane's
	Display * (x11lib.c).
2020-03-10
	- Added create_pane_win_gc (x11lib.c), which can be called by
	__ctalkCreateX11Window, __ctalkCreateX11WindowTitle,
	__ctalkCreateX11SubWindow, and __ctalkX11CreateDialogWindow.
	- Added the X11Pane :foregroundColor instance variable and
	the X11Pane : foreground method.
	- Added build/confcttest.sh to add compiler specific warning
	options to test/expect/cttest when running ./configure.
2020-03-14
	- Release 0.0.66 2020-03-14
2020-03-15
	- Set X11MessageBoxPane colors to "white" and "black", and
	added the X11MessageBoxPane : fill method, which fills the
	pane with the background color.
	- Added a __call_stack_ptr range check in
	__ctalkRegisterUserObject (rt_obj.c).
	- Use the pane object's displayPtr instance variable in
	get_user_font (x11lib.c).
	- Added the class pathname as an argument to save_class_init_info
	(preclass.c).
	- In arg_object_if_label, check for an expression like,
	"CFunction cTime", and get the value object, not just the
	declaration of the label (rt_args.c).
2020-03-17
	- Updated preclass.ca to add the method declaration line numbers
	to the *.class files in the cache, and to read them back when using
	preloaded methods, using the MLI and CLSLI types in preclass.c to
	store the line number info.
	- Moved the c_messages stack to ctoobj.c, where it is still used,
	and the supporting functions that stack support needs.
2020-03-18
	- In X11MessageBox : attachTo, check whether we've set the
	messagebox's foreground and background colors before using
	the parent X11Pane's background and foreground colors.
	- Added a check in __ctalkX11SetBackgroundBasic for initialized
	shared memory (guisetbackground.c).
	- Added a check in X11MessageBoxPane : attachTo that checks whether
	the messagebox's foreground or background colors have been set
	before assigning them the main window's foreground and background
	colors.
	- In __ctalkDefineInstanceVariable, if the constructor class is
	different than the var's native class, set the var's class to
	the native class and call __ctalkInstanceVarsFromClassObject so
	we add the variables defined in the native class.  Then set the
	variable's parent object class to the class it is a member of
	(rtobjvar.c).
	- Removed a call to XGetWindowAttributes from
	__ctalkCreateX11SubWindow becauase the parent's backing_store attribute
	is Always, and we can set it directly for the child window also
	(x11lib.c).
2020-03-21
	- Removed the expressions that set the subwindow's display pointer
	in X11CanvasPane : attachTo, X11ButtonPane : attachTo and
	X11PaneDispatcher : attachTo - setting the display connection's
	address is now handled by __ctalkCreateX11SubWindow (x11lib.c).
	- Removed the buttons' hightlight text color setting in
	demos/x11/buttons.ca.
2020-03-21
	- In __xlib_draw_rectangle, updated lookup_pixel to lookup_pixel_d
	(xrender.c).
	- Updated xr_make_surface to use the Display * that's passed to
	it's calling function, and also declared as static.
	- Updated X11PaneDispatcher : attachTo (2 params) so that it only
	sets a full window subwindow when the receiver is a X11PaneDispatcher.
2020-03-22
	- Updated the functions in guidrawrectangle.c to check for a dialog
	window and draw to that window separately .
	- Updated __ctalkDefineInstanceVariable to start looking for the
	variable's constructor method the variable's class, not its
	superclass (rtobjvar.c).
	- Updated __ctalkX11CopyPixmapBasic to use a dialog window's
	connection to the server when drawing if needed (xcopypixmap.c),
	and also __ctalkX11PaneClearRectangle and __ctalkX11ClearRectangleBasic
	(guiclearrectangle.c).
2020-03-23
	- Updated routines in guiputstr.c to draw on dialog windows.
	- Updated __xlib_put_str to not clear the region behind text,
	which may no longer be needed (x11lib.c).
	- Added the display member to the XFTFONT type (xftfont.h),
	added the macro DISPLAY to determine whether we're using the
	xdialog.c connection to the display, and added the g_dpy global
	in xftlib.c, and checked in new_font_spec whether the font was
	selected on the same display connection (xftlib.c).
	- Fixed a bug in __ctalkX11SubWindowGeometry (xgeometry.c).
	- Added a check for a missing format argument in
	__call_printon_fn_w_args (rt_prton.c).
	- Added the start of a string as an argument to is_printf_fmt,
	so the fn can look back to find an escaped '%' ('%%') (pattern.c).
	Also updated the "%%" handling in __call_printon_fn_w_args
	(rt_prton.c).
2020-03-24
	- Added a check in eval_arg for undefined labels that don't
	follow a constructor method message or are a method message
	themselves, or an AssociativeArray key (eval_arg.c).
	- Updated fmt_tokens with more checks for escaped percent
	characters ("%%") (rt_stdarg.c). Also added a check for any
	combination of "%" and "%%" sequences in the format string
	in __check_printon_args (rt_prton.c), and __compress_escs
	to unescape %%' sequences.
2020-03-25
	- Updated mcct_check_token to set OBJ_IS_INSTANCE_VAR
	attributes and the receiver_msg and receiver_obj members
	of the tokens' messages on instance variable tokens (mcct.c).
	- Added the DIALOG_C type in x11defs.h, and updated the DIALOG
	macro to use it to determine if a dialog window is mapped.
	Also added the __enable_dialog function (xdialog.c) to set
	the DIALOG_C entry that the dialog is mapped on successive views
	(xdialog.c).
2020-03-26
	- Added the X11MessageBoxPane section to doc/ctalk.texi, and
	added the demos/x11/messagebox.ca example program.
2020-03-27
	- Added a check for a NULL display connectiion in
	__xlib_change_gc and lookup_pixel_d (x11lib.c).
	- Fixed an unbalanced brace in X11MessageBoxPane : show.
2020-03-28
	- Added the __ctalkPaneResource library function (xresource.c).
	- Updated the library functions in xgeometry.c, x11lib.c, and
	xdialog.c to center a dialog window above its parent window.
2020-03-29
	- Added the Collection : replaceAt method.
2020-03-31
	- Added fmt_method_call_term, called by generate_method_call
	(output.c).  Also updated method_call to omit a semicolon
	if the method call is a function argument (method.c).
	- Updated X11Pane : mainWindow so that if the receiver is
	class X11Pane, the method simply returns the reciever.
2020-04-01
	- In rt_expr, add a check for an expression that is a
	function argument, and format an object-to-C translation.
	Also placed similar clauses into rte_fn_output_arg
	(rt_expr.c).
2020-04-03
	- Added the include/xpms subdirectory and the XPM icons for the
	*DialogPane classes, and #included them in xdialog.c.  Also added
	__ctalkIconXPM library function (xdialog.c), and the icon, iconStop,
	iconCaution, and iconInfo methods in X11Bitmap class.
	- Updated __ctalkX11XPMFromData for dialog windows (guixpm.c).
	- Updated the test/expect/examples-x11/canvas-copy.c demonstration
	program, and moved it demos/x11.
2020-04-04
	- Updated __ctalkX11PaneDrawCircleBasic to work with
	dialog windows (xcircle.c). Also updated
	__ctalkX11DrawPointBasic to work with dialog windows
	(guidrawpoint.c).
	- Added the X11Bitmap : drawCircle method.
	- Added icons to the X11MessageBoxPane class.
	- Updated String : split to specifically handle receiver
	Strings that don't contain the delimiter. Also added the
	split[5-6].c test programs.
2020-04-05
	- Updated X11ButtonPane : subPaneLeave to release a
	button press on a leave notify event.
	- Added a check for valid method arguments in new_object
	(primitives.c).
	- Added the X11Bitmap : backgroundColor instance variable,
	set in X11Bitmap : background.
	- Added a better warning message in eval_expr if we have a
	method mismatch (rt_expr.c).
	- Moved the actual icon drawing from X11MessageBoxPane : drawIcon
	to the corresponding methods in X11Bitmap.
	- Added the X11MessageBox : titleText resource, and updated
	__ctalkX11CreateDialogWindow to retrieve it (xdialog.c).
2020-04-06
	- Added keyboard Tab and Enter keyboard shortcuts to
	X11MessageBoxPane.  Also added the X11MessageBoxPane :
	messageColor resource.
2020-04-07
	- Updatd __ctalkXftInitLib to use FcFontInitLoadConFigAndFonts
	(xftlib.c).
2020-04-09
	- Updated __ctalkSaveCVARResource to check for a receiver object
	(rt_return.c).
	2020-04-10
	- Added the __ctalkXftShowFontLoad library function.
2020-04-10
	- Added the __ctalkXftShowFontLoad library function,
	and the X11FreeTypeFont methods notifyLevel, verbose, and errors,
	and added optional font load and load error messages to xftlib.c.
	- Added prev_instvar_is_actually_method in src/rt_expr.c, called
	by rt_expr.
2020-04-11
	- Updated xftlib.c to make Fontconfig pattern sets experimental,
	and add the XFTCONFIG environment variable fonts.conf file
	location, and to add the files given in an old-style fonts.conf
	to the libraries' internal fonts database.
	- Moved test/expect/examples-x11/x11labelpane.ca to
	demos/x11/labelpane.ca.
	- Added resources for the font and element colors used for
	drawing in X11LabelPane.
	- Some adjustments to the X11Bitmap : iconInfo drawing.
	- Added an exception handler, message, and app exit to
	eval_expr for unmatched parentheses (rt_expr.c).
	- Added the X11MessageBoxPane : messageFont resource.
	The message box's label pane inherits the font descriptors
	value when the widget is being constructed.
2020-04-12
	- Added resources for some of the Pen colors and line widths
	in X11ButtonPane.
	- Added an undefined label check in rt_expr (src/rt_expr.c).
	- Updated X11LabelPane and X11ButtonPane to use resources
	for the highlight background color.
	- Added the X11LabelPane : backgroundColor resource.
2020-04-13
	- Updated create_pane_win_gc to use a "backgroundColor" resource
	to set the window's background if one is set, otherwise to
	use the "backgroundColor" instance variable (x11lib.c).
	- Updated X11ButonPane : attachTo to set the the button's label
	background using the label's "backgroundColor" resource.
	- Updated X11MessageBoxPane class to use the background resource
	to set the background color of all of the subpanes.
	- Also added the foreground and highlightForeground resources
	to X11ButtonPane class, and use these to set the text and
	highlighted text colors in the button's X11LabelPane subpane.
	- Added the X11ButtonPane : faceBackground resource.
2020-04-14
	- In xftlib.c, added __select_font_from_family, for font-only
	changes by __ctalkXftSelectFont.  Also changed the mono_families
	label to default_families, and updated with "san-serif" as the
	default family, and also search for alternate fonts that come
	shipped with the OS.
	- Updated __ctalkXftSelectFontFromFontConfig to check for the
	last hyphen in a font family specification, so the parser
	can distinguish between e.g., "sans serif-12" and "sans-serif-12"
	(xftlib.c).
	- Added __select_font_from_family (xftlib.c).  Also changed
	__xlib_change_face_request_ft to __xlib_change_font_request_ft,
	called directly by __xlib_change_font_request_ft (x11lib.c).
	- Added the X11PaneDispatcher : handleMap instance variable
	and the "map" event handler type.
	- Added the X11ButtonPane : hover instance variable.
2020-04-16
	- In create_pane_win_gc, set gcv.graphics_exposures to
	false (x11lib.c), and also in __ctalkX11CreatePixmap
	(bitmap.c).
	- Updated exception notice X11PaneDispatcher : setMethodHandler
	for undefined handler type.
	- Added Map and Pointer Motion event handlers in X11ButtonPane
	class, and other updates.
	- In super_argblk_rcvr_expr, check for a NULL rcvr_class_object
	(complexmethd.c).
	- In __new_instance_method, added a call to
	set_rcvr_class_obj_new_method_2, which sets the new method's
	rcvr_class_obj member (primitives.c).
2020-04-17
	- Added an error message and exit for an invalid rcvr_class_obj
	in super_argblk_rcvr_expr (complexmethd.c).
2020-04-18
	- In __ctalkX11PanePutStrBasic, added a range check for the
	X,Y coordinates of the string (guiputstr.c).
	- Removed the warning message from Float : asInteger.
	- Added the demos/x11/roundbuttons.ca example program.
2020-04-19
	- Cleanup of pane resources and documentation for
	X11LabelPane, X11ButtonPane, and X11MessageBoxPane classes.
	- Updated X11Bitmap : iconInfo to draw a rendered circle
	for the dot in the 'i'.
2020-04-21
	- Added member_of_method_return_class, called by eval_arg
	(eval_arg.c).
2020-04-22
	- Fixed a typo in ANSIYesNoBoxPane : new.
	- Updated eval_constant_arg to handle PATTERN tokens
	(eval_arg.c).
	- Added a check for expr_check_ pass in method_args
	(method.c).
	- Added a check to prevent leading whitespace in
	c_tmpl_fn_args (fn_tmpl.c).
	- Removed constant token cases for single token
	arguments from eval_arg (eval_arg.c).
2020-04-23
	- Added the X11LabelPane : highlightTextBold resource,
	and removed the X11LabelPane: highlightTextBold instance
	variable.
2020-04-24
	- Added the X11MessageBoxPane : showManaged method.
	- Updated the documentaiton of the --without-signed-
	hex-octal-constant-warnings configure option.
2020-04-26
	- Added the X11Bitmap : iconQuestion method and the
	ICON_QUESTION icon ID (ctalk/ctalkdefs.h).
	- Added the X11YesNoBoxPane class.
2020-04-29
	- Added Tab and Return keystroke handlers to X11YesNoBoxPane
	class.
	- Added the X11Cursor : xterm method.
2020-05-01
	- In __ctalkToCCharPtr, check for an active i before buffering
	the C string (lib/objtoc.c).  Also added __result_obj_post_call
	for to return instead of the i_post object (lib/rt_methd.c).
2020-05-02
	- Added X11TextEntryPane class, a basic text entry widget,
	and the demos/x11/entrybox.ca demonstration program.
2020-05-03
	- Added new_mb_list and reuse_mb_list in methodbuf.c.  Also
	created the MBLIST type, which use fewer mallocs/frees for
	use with method buffering.
	- Added the LABEL token type to constant_token_object, which
	is not really a constant, but the object creation works in
	that place (object.c).
2020-05-04
	- Updated the GL blend function in render_text to GL_SRC_ALPHA,
	GL_DST_ALPHA (ftlib.c).  Update the demos/x11/ftfont.ca example
	program to set both the font and GL libraries' alpha channel.
2020-05-05
	- Added the X11Bitmap methods drawRectangle and drawFilledRectangle.
	Also added the __ctalkX11PaneDrawRectangleBasic and
	__ctalkGUIPaneDrawRectangleBasic library functions
	(guidrawrectangle.c).
	- Updated X11ScrollBarPane : refresh to use a fill color when
	drawing	a beveled thumb.
2020-05-06
	- Added the XllFreeTypeFont methods, loadNotify, verbose, and quiet.
	Also added the __ctalkXftVerbosity library function (xftlib.c).
	- Added the X11FreeTypeFont : currentDescParamStr method, and also
	the __ctalkXftDescStr library function, and the XFT_NOTIFY_VERBOSE
	message level.
2020-05-07
	- Added __ctalkXftRequestedFamily, __ctalkXftRequestedPointSize,
	__ctalkXftRequestedSlant, __ctalkXftRequestedWeight, __ctalkXftRequestedDPI
	to xftlib.c, which return global variables that
	__ctalkXftSelectFontFromFontConfig sets. Also added the X11FreeTypeFont :
	__loadInfo method for internal use by the font loading methods.
	- In fmt_c_to_obj_call, add a handler for a char * return type
	(ctoobj.c). In method_args, added a handler for an arg_c_fn_expr
	argument class (method.c).
2020-05-07
	- Updated X11FreeTypeFont : selectFontFromFontConfig to use the
	5-argument form of __loadInfo.
2020-05-08
	- Added selected_filename buffer and selected_fn function to
	fill in the selected font's filename in case we need to use
	it directly with the freetype libaries (xftlib.c).
	- Added -lfreetype to the "-lXft -lfontconfig" linker flags
	in configure.ac so the Freetype library is available to all
	of the source modules.
2020-05-09
	- Added a check for a derived i object still on the argument
	stack in delete_char_ptr_arg (lib/objtoc.c).
	- Added selected_fn to retrieve and store a Freetype font's
	file name when loading fonts (xftlib.c).
	- Updated __ctalkXftGetStringDimensions to use the Freetype
	glyph advance of each string character to calculate a string's
	width (xftlib.c).
	- Added X11TextEntryPane : drawCursor to draw a solid cursor
	where text is to be inserted at the end of the entry text.
	Also Added the hover instance variable to X11TextEntryPane
	class and use it to only draw the cursor when the pointer is
	over the text entry.
2020-05-10
	- Release 0.66 2020-05-10.
2020-05-12
	- Updated __ctalk_define_class to check whether a new class is
	a subclass of Character class (rtclslib.c).
	- Added a check for an instance that is in a subclass of
	Character in Magnitude : asCharacter.
2020-05-13
	- Added an error in handle_cvar_argblk_translation (cvartab.c),
	if we encounter a subscripted char array expression within an
	argument block.
	- Added a check for a method parameter label for a single-token
	argument in eval_arg (eval_arg.c).
2020-05-14
	- Added the X11FreeTypeFont : textRBearing method, and a rbearing
	parameter to __ctalkXftGetStringDimensions (xftlib.c).
	- Also added the X11FreeTypeFont : isMonospace method and the
	__ctalkXftIsMonospace library function.
	- Added check for monospace font to __select_font_fc (xftlib.c).
	- Updated X11TextEntryPane to use a spacingHint resource when
	displaying text with monospaced fonts.
2020-05-15
	- Updated __ctalkXftInitLib to return SUCCESS if Ctalk was
	build with libXft and Fontconfig support and the libraries
	are successfully initialized.  The function returns ERROR
	otherwise.  Also updated X11Pane : openEventStream to call
	initFontLib and to set the X11Pane : haveXft instance variable
	to true if te Xft and Fontconfig libraries are successfully
	initialized.
2020-05-17
	- Added a warning to Collection : at for cases where the
	collection doesn't contain a member with the argument's
	key name.
2020-05-18
	- Updated Magnitude : asInteger to check for a receiver that
	is a member of a subclass of Character.
2020-05-20
	- Added include/xpms/mini-eye-ok.xpm and
	include/xpms/mini-eye-slashed.xpm, and added the definitions
	of ENTRY_ICON_EYE_NONE, ENTRY_ICON_EYE_OK, and
	ENTRY_ICON_EYE_SLASHED in x11defs.h.  Added the library
	function __ctalkEntryIconXPM (xdialog.c).  Also added the
	X11Bitmap methods entryIcon, entryIconEye, and
	entryIconEyeSlashed.
2020-05-21
	- Added the ability to echo dots to X11TextEntryPane.
	- In rt_self_expr, don't issue a warning if the
	expression contains a "super" token (src/rt_expr.c).
2020-05-23
	- Added the start and end parameters to __ctalkX11PaneDrawCircleBasic
	and __ctalkGUIPaneDrawCircleBasic (xcircle.c), and the start and end
	instance variables to Circle class.
2020-05-25
	- Added the X11TextEntryPane : button instance variable, and the
	X11TextEntryPane : charIndexAtClick instance method.
2020-05-26
	- Added a check in __receiver_become for an old receiver that is
	a VAR_REF_OBJECT and whether it has been saved as a
	METHOD_USER_OBJECT (become.c).
2020-05-30
	- Added a check for self if it is present in the warning message
	in eval_expr 2nd pass (rt_expr.c).
	- Added pasting from the X primary selection to the text buffer
	in X11TextEntryPane.
2020-05-31
	- In ctrlblk_pred_rt_expr, only do a var's argblk translation
	if it's a local variable (ifexpr.c).
2020-06-03
	- Added rtse_instvar_msg, called by rt_self_expr (src/rt_expr.c).
	- Added is_darwin_ctype_fn (keyword.c), and added it to the
	IS_DEFINED_LABEL macros for Apple (ctalk.h), and begin_fn_buffer
	(fnbuf.c).
2020-06-04
	- In sym_ptr_expr, if a called function places an entry on
	the call stack and hasn't removed it, clean it up after the
	fn returns (rt_call.c).
	- In parser_pass, check for a non-cleared fn_is_builtin
	flag (parser.c).
2020-06-07
	- Added __entrytext_set_selection_owner library function
	(edittext.c), and use it in X11TextEntryPane whenever
	beginning to select text.
2020-06-08
	- Added PANE_SET_PRIMARY_SELECTION_OWNERSHIP_REQUEST and
	PANE_SET_PRIMARY_SELECTION_TEXT	(x11defs.h).  Added
	__entrytext_set_selection_owner and __entrytext_update_selection
	(for X11TextEntryPane clients), and __xlib_set_primary_selection_owner
	and __xlib_set_primary_selection_text (for generic server)
	(edittext.c).
	- Added the X11TextEntryPane : selectionToText method.
2020-06-09
	- Updated selection methods to check for display clipping
	when the entry text scrolls leftward, and added the
	X11TextEntryPane : subPaneSelectionClear method.
2020-06-10
	- Updated X11TextEntryBoxPane selection mechanism to
	adjust to left scrolled text, delete the selection if the
	user presses the Backspace key, and to release the selection
	ownership if another X client application requests it.
2020-06-11
	- Added a check for a valid VARTAG in __delete_local_object_internal
	(rt_methd.c).
	- Added the Collection : integerAt method.  Updated the
	X11TextEntryPane methods drawCursor and draw.
2020-06-12
	- In X11TextEntryPane : subPaneLeave, clear the selecting instance
	variable if it is set.
2020-06-14
	- Updated tools/ctxlogo.ca.
2020-06-15
	- Updated __ctalkX11FontCursor and __ctalkX11UseCursor to check
	for an open dialog window connection, and change the cursor using
	that connection	(x11lib.c).
2020-06-18
	- Added the X11TextEntryBox class.
	- Changed the demos/x11/entrybox.ca program to entrypane.ca,
	and added the X11TextEntryBox demonstration program as
	demos/x11/entrybox.ca.
	- Updated __entrytext_set_selection_owner to work with
	dialog windows (edittext.c).
	- Added the pointermotion, button press, and button release
	handlers for the entry pane in X11TextEntryBox class.
2020-06-19
	- Updated __entrytext_update_selection for dialog windows
	(edittext.c). Also added the __entrytext_send_selection
	library funciton (edittext.c).
	- Updated __entrytext_get_primary_selection to work with
	a dialog box (edittext.c).
2020-06-20
	- Added the push_dpyrec and pop_dpyrec functions. Updated
	open_dialog_display_connection to call push_dpyrec and return
	the new Display * to the window creation function. Added
	display_dpy (xdialog.c).
2020-06-21
	- Added the X11TextEntryBox : dots instance variable.
	- Updated the DIALOG macros int libctalk to display_dpy.
	- Updated DISPLAY macro in xftlib.c to use the
	dialog_dpy function.
	- Added the self_enclosing_class_message_warning
	(rt_error.c), called by non_message_label (rt_expr.c).
2020-06-22
	- Changed dpyrec into the dpyrecs stack (xdialog.c).
	- Added a check for a valid VARTAG in __get_object_from_tag
	(rt_obj.c).
2020-06-23
	- Updated delete_extra_local_objects to not delete objects
	declared as LOCAL_VAR (rt_obj.c).
2020-06-25
	- Added the validatedentry.ca and X11ValidatedTextEntryBox
	class and demonstration program in demos/x11/validatedentrybox.
	- Updated the X11Bitmap : iconInfo method to use an actual
	"i" from a monospace font.
2020-06-27
	- Added __ctalk_get_object_return (rt_obj.c).
	- Added save_local_objects_to_extra_b, which puts the local
	objects of a successive call on the call stack entry's
	local_object_cache.  Also added obj_from_local_object_cache
	and cleanup_local_object_cache to retrieve them when called
	by __ctalk_get_object_return (rt_obj.c).
2020-06-28
	- Updated non_method_label to check for more expression
	contexts in argument blocks where a "self" keyword might
	erroneously appear instead of a "super" keyword
	(lib/rt_expr.c).
	- Moved __ctalkX11UseFontBasic from x11lib.c to xlibfont.c.
	- Updated X11Bitmap : putStrXY (4 and 5 arguments) to check
	if the Freetype font libaries have been initialized, and to
	select either X or Freetype font selection.
2020-06-29
	- In prefix_method_expr_a, remove newlines from an expression when
	formatting as a __ctalkEvalExpr argument (rt_expr.c).
	- In expr_result_object, check for a terminal token's value variable
	that is a top-level object (rt_expr.c).
2020-07-01
	- Added a check for method parameters in is_class_typecast
	(typecast_expr.c).
	- Added a check for a class typecast in eval_arg (eval_arg.c).
2020-07-02
	- Updated rt_self_expr to check for an opening paren of a
	self expr that is the parenthesized receiver of a method
	expression; e.g., "(self items size) asFloat" (rt_expr.c).
	- Added the rcvrexpr5.c test program.
2020-07-04
	- Added another check for an instance variable series to
	mcct_check_token (mcct.c).
	- Added a check for a unary minus following an assignment
	operator in find_leading_tok_idx (pattypes.c).
	- Updated rt_self_expr to use the leading_tok_idx as the
	actual_expr_start (rt_expr.c).
2020-07-06
	- Added the demos/x11/listpane.ca demonstration program,
	and the X11ListPane widget class, initial version.
	- Added an argument subexpression rewrite clause in
	eval_expr (eval_expr.c).  Also added the opsubexpr1.c
	test program.
2020-07-07
	- Updates to ctalk and ctpp for GCC 10.1.
2020-07-08
	- Updated expr_n_occurences to check whether we're
	using an EXPR_PARSER record (rt_expr.c).
2020-07-09
	- Added the class_typecast, class_typecast_start_idx,
	and class_typecast_end_idx members to the ARGSTR typedef
	(message.h).
	- Added the is_class_typecast_2 function (typecast_expr.c).
	- Added a check in eval_arg for a class typecast expression,
	which fills in the class information (eval_arg.c), and added
	a check	in create_arg_EXPR_object to omit the typecast tokens
	from the final (i.e., run-time) arg expression )object.c).
	- Added a delay in demos/ipc/sockproc.c to allow the reader
	process to create the socket before the writer process
	starts writing to it.
2020-07-10
	- Updated string_return_needs_mutaion to check for any
	vaild EXPR_PARSERS (rtobjvar.c).
2020-07-11
	- Removed the Xft library initialization from X11Pane :
	openEventStream, which causes programs that use X bitmap
	fonts not to display text.
	- Moved demos/xft/xfthello.c to demos/x11/xhello.c.
	- Updated demos/xft/x11textpane.c to use a Fontconfig
	font descriptor for outline fonts.
	- Release 0.0.66 2020-07-11.
2020-07-12
	- Added the _Atomic keyword to the registries for
	is_c_keyword and is_c_data_type (keyword.c).
	- Added _Bool replacement in ctalklib.in if stdbool.h
	isn't present.
2020-07-13
	- Removed the hover and focusBorderWidth resources from
	X11ListPane class, and added the thumbMargin, thumbColor,
	textColor, and selectColor resources.
2020-07-14
	- In __delete_local_object_internal, check for an
	OBJECT_HAS_LOCAL_TAG attribute before removing the LOCAL_VAR
	scope (rt_methd.c).
2020-07-15
	- Added the X11ListPane : shiftState instance variable, and
	the #defines shiftStateCtrl and shiftStateShift, which are
	set and cleared in the X11ListPane : onKey method.
	- Added clauses in eval_arg to register global CVARs when
	they're included in a complete argument expressions, in
	argument blocks (eval_arg.c).
	- Added listoffset[1-2].c test programs.
2020-07-16
	- Changed the attr argument of __ctalkSetObjectAttr to
	unsigned int (rt_obj.c).
2020-07-16
	- Added the __ctalkObjectAttrAnd and __ctalkObjectAttrOr
	library functions (rt_obj.c).
2020-07-17
	- Added unresolved_instance_variable_warning (rt_error.c),
	called by eval_expr (rt_expr.c).
	- In op_is_prefix_op, check for a preceding typecast token
	(pattypes.c).
2020-07-18
	- Added is_OBJECT_vartab_deref_cast (pattypes.c), called
	by eval_expr (rt_expr.c).
	- In eval_expr (rt_expr.c), added a clause that selects
	a CVAR that matches an entire OBJECT * deref expression,
	including the typecast.
	- Added cvar_for_OBJECT_deref_typecast (rt_cvar.c), called
	by eval_expr (rt_expr.c).
	- Added a clause to add a DELETE_CVARS_CALL in rt_self_expr
	(ifexpr.c), and the DELETE_CVARS_CALL in ctalk.h.
2020-07-19
	- In register_argblk_c_vars_1, register a C variable regardless
	of whether an object is present in the argument expression
	(complexmethd.c).
	- In prefix_method_expr_a, rewrite the expression tokens after
	registering CVARs in an argument block (rt_expr.c).
	- Added the cvararg[8-9].c test programs.
2020-07-21
	- Added resize handler frames in X11LabelPane, and X11ListPane.
	- Fill in the subPane geometry spec in X11PaneDispatcher :
	attachTo (2 args).
	- Added the __ctalkX11WxHGeometry library function (xgeometry.c).
2020-07-22
	- Added the X11ButtonPane : subPaneResize, X11LabelPane :
	subPaneResize, and X11ListPane : onResize  methods.
	- Updated demos/x11/listpane.ca to use resizable subpanes.
	- Added the ability for subpane geometry specifications to
	recognize a leading minus sign, which positions the edge
	of a window that many pixels in from either the right or
	bottom edge of the parent window (xgeometry.c).
	- Added the X11LabelPane : selectFont method.
2020-07-24
	- Added the initial version of the X11ListBox class and
	the demos/x11/listbox.ca demonstration program.
2020-07-25
	- In eval_expr, increment a conditional token '?' evaled count
	in case the compiler didn't translate it into a C substitution
	(rt_expr.c).
	- Added subexpr_conditional (rt_argblk.c), called by eval_subexpr
	(rt_expr.c), and the qcond2.c test program.
2020-07-26
	- Added the qcond[3-5].c test programs.	      return prevlangmsg (messages, i_2);

2020-07-27
	- Added the qcond[6-9].c test programs.
	- Updated subexpr_conditional to use int, char, and char *
	values as the result of the predicate expression (rt_argblk.c).
2020-07-28
	- Added the qcond[10-17].c test programs.
2020-07-29
	- Added the eval_subexpr_call global bool in rt_expr.c, set by
	eval_subexpr and cleared in the recursive call to eval_expr when
	it creates the EXPR_PARSER.  Added the EVAL_STATUS_DIRECT_SUBEXPR
	define in rtinfo.h, set at the beginning of eval_expr if
	eval_subexpr_call is true (rt_expr.c).
	- Added the question_conditional function (rt_argblk.c), called
	by eval_expr.
	- Added the qcond18.c test program.
2020-07-30
	- Added the qcond[19-26].c test programs.
	- Fixed a bug in eval_op_precedence (rt_expr.c).
2020-07-31
	- Added the qcond[27-33].c test programs.
	- Added a CONDITIONAL case to method_arg_limit, with scan
	forward for a semicolon argument terminator and comma
	argument separator (arg.c).
	- In method_arg_limit_2, added a check for embedded parentheses
	before returning at a closing paren (arg.c).
2020-08-01
	- Added the qcond[34-35].c test programs.
	- Updated eval_arg to check for a CONDITIONAL token after
	a C variable in argument expressions (eval_arg.c).
2020-08-02
	- Added the qcond[36-37].c test programs.
	- Added a check and a handler for a size_t function return
	type in	output_mixed_c_to_obj_arg_block (ctoobj.c).
	- In eval_arg, check to determine if the function needs to
	register CVARs in trailing tokens if the argument contains
	a C function call (eval_arg.c).
2020-08-03
	- Added the qcond[39-49].c test programs.
2020-08-04
	- Added the qcond[50-65].c test programs.
2020-08-05
	- Added rt_fn_arg_cond_expr (src/rt_expr.c). Also added
	the globals fn_arg_conditional and fn_cond_arg_fn_label_idx.
	- Added the qcond[66-67].c test programs.
2020-08-06
	- Added the qcond[68-73].c test programs.
2020-08-07
	- Added the qcond[74-89].c test programs.
2020-08-08
	- Added the qcond[90-106].c test programs.
	- In __rt_math_op, print a warning and return if
	either of the operand indexes <= 0 (rt_expr.c).
2020-08-09
	- Added the qcond[107-130].c test programs.
2020-08-10
	- Added the qcond[131-146].c test programs.
2020-08-11
	- Added is_question_conditional_predicate (object.c),
	called by resolve.
	- Added the qcond[147-156].c test programs.
2020-08-12
	- Added qcond_fn_arg_cvar_registration and
	qcond_fn_arg_cvar_registration_idx, set by
	is_question_conditional_predicate (object.c),
	and cleared by rt_expr (rt_expr.c).
	- Added is_cond_pred (rexpr.c), called by default_method.
	- Added qcond[157-158].c test programs.
2020-08-13
	- Added format_fn_call_method_expr_block_cond
	(c_rval.c), called by rt_expr.
2020-08-14
	- Added expression re-format after
	format_fn_call_method_expr_block_cond in rt_expr (rt_expr.c).
	- Also in rt_expr, added a check for a call from fn_arg_cond_expr,
	and place CVAR registration calls before the function call if
	needed (rt_expr.c).
	- Added the qcond159.c test program.
2020-08-15
	- Removed qcond_fn_arg_cvar_registration and
	qcond_fn_arg_cvar_registration_idx globals in object.c, and
	use fn_arg_conditional and fn_cond_arg_fn_label_idx globals
	(declared in rt_expr.c) instead.
	- Added the qcond[160-170].c test programs.
2020-08-16
	- Updated arg_is_question_conditional_predicate to check
	for predicates not enclosed in parens (object.c).
	- Added the qcond[171-178].c test programs.
	- Added check for internal parens in a conditional predicate
	term in rt_fn_arg_cond_expr (rt_expr.c).
2020-08-24
	- Added an undefined label warning in eval_expr
	(lib/rt_expr.c).
2020-08-25
	- Added is_fn_for_template, called by eval_expr (lib/rt_expr.c),
	to check for labels of functions that are called as arguments
	by templated user functions.
2020-08-26
	- Added another is_obj_deref_expr for additional warning message
	in eval_expr (rt_expr.c).
2020-08-28
	- Added is_method_of_prev_tok_value (rt_expr.c).
2020-08-29
	- Minor updates to demos/glx/glxcharser.ca and
	demos/glx/glxchaserft.ca.
2020-08-30
	- Moved undefined_label_check from rt_expr.c to errmsgs.c.
	- Added a check for an undefined class before an, "instanceMethod,"
	or, "classMethod," keyword.
	- Added the MIN_SCROLL #define in X11ListPane class.
2020-08-31
	- In method_cvar_tab_entry, use a different format for the
	vartab init for OBJECT *'s.
2020-09-01
	- Added a check for a valid OBJECT * in is_method_of_prev_tok_value
	(rt_expr.c).
	- Some code cleanup in  X11ListPane : add.
2020-09-03
	- Added the __ctalkExpandPath library function (statfile.c),
	and the	String : asExpandedPath method.
2020-09-05
	- Updated method_args to check for an instance variable of
	a method return value.  Also added mane_basic_arglist,
	called by method_args (method.c).
	- Added another check for an expression with an instance
	variable as its terminal token in eval_expr (rt_expr.c).
	- Updated is_instance_variable_message to check for
	an instance variable that follows a method label (object.c).
	- Added a call to find_expression_limit to arg_expr_object_2
	(argexprchk.c).
2020-09-06
	- Lots of cleanup in X11ListPane class.
	- First version of X11FileSelectDialog class, and the
	demos/x11/fileselectbox.ca demo program.
2020-09-08
	- Added X11FileSelectBox buttonClick and buttText methods,
	defined FILESELECT_LBUTTON, FILESELECT_RBUTTON, and
	FILESELECT_BUTTON_NONE (classes/ctalkdefs.h), and updated
	demos/x11/fileselectbox.ca to use them.
2020-09-12
	- Added check for a modal dialog box resize in __ctalkX11ResizePixmap
	and __ctalkX11MoveWindow (x11lib.c).
2020-09-13
	- Updated List : asString to remove the unneeded test for a
	leading opening quote.
2020-09-14
	- Updated subexpr_conditional to delete the unused result
	(rt_argblk.c).
2020-09-15
	- Added a check for unused conditional branch object that is
	an i result and we can delete there, in question_conditional
	(rt_argblk.c).
	- Updated subexpr_conditional to evaluate either the true
	argument or false argument, not both (rt_argblk.c).
2020-09-16
	- Delete old i result object in set_conditional_expr_value
	(rt_argblk.c).
2020-09-17
	- Updated __delete_char_ptr_arg to delete an object with
	CREATED_CVAR_SCOPE if is not otherwise on the argument or
	receiver stack
	(lib/objtoc.c).
2020-09-18
	- Renamed canvas-copy.c demo program in demos/x11 to
	canvas-copy.ca.
	- Updated searchlib language tool to exit with a help
	message if the program is run with no arguments.
	- Updated __ctalkX11TextWidth to use a fixed font if
	the X11Font object's xlfd is uninitialized or the
	font isn't found (font.c).
	- Updated demos/x11/entrypane.ca demonstration program to
	initialize the Freetype font library when the program begins
	processing X events.
	- In mcct_check_token, check for an unresolved instance variable
	series if we encounter a <LABEL> <LABEL> set of tokens (mcct.c).
	- Updated some of the documentation in the demos/x11 directory,
	and renamed xhello.c to xhello.ca.
2020-09-19
	- Release 0.0.66 2020-09-19.
2020-09-21
	- Updated __edittext_line_start to rely on the cursor position
	determined before performing a scroll (down).
2020-09-26
	- Removed check for APPLE system in resolve.c - now just check
	any __x86_64 system for functions with the prefix, "__builtin_."
	- Added xstdin, xstdout, and xstderr library functions.
2020-09-27
	- Make sure that the argument catch/throw indexes in the method
	argument catch/throw in method_call are correct (method.c).
2020-09-30
	- Added a clause in stdarg_fmt_arg_expr to handle a CVAR
	receiver (arg.c).
2020-10-01
	- Added a call to escape_str_quotes in method_call when formatting
	complex expression calls that are printf arguments (method.c).
2020-10-02
	- Added another clause to stdarg_fmt_arg_expr to handle a
	parenthesized receiver subexpression (arg.c).  Also added
	clauses to handle struct member receivers, with or without
	prefix operators, and parenthesized receiver subexpressions
	that contain structs as their first token.
	- Added a check for a CVAR_ATTR_STRUCT_PTR_TAG in
	validate_type_declarations (cvars.c).
	- Added local_struct_from_ptr_tag, called by register_c_var
	(reg_cvar.c).
2020-10-03
	- Added yet another check in stdarg_fmt_arg_expr for
	C variables - this time in an argument expression's internal
	method argument list.  Also added the sfae_need_cvar_cleanup
	state, for when we need to clean up the C variables after the
	entire expression is finished (arg.c).
	- Added __builtin_bswap16 to gnuc_builtin_type (keyword.c).
	- Added check for builtin function in resolve (resolve.c).
	- In eval_arg, don't output a cvar registration for a __ctalk_arg
	expression - this now gets handled in stdarg_fmt_arg_expr
	(eval_arg.c).  Also, in method_args, don't output a __ctalk_arg
	call if it's a printf argument, or call cleanup_args in method_call
	(method.c).
2020-10-04
	- Added the cleanup_args_2 function in method.c, which handles
	internal method argument cleanup, but does not add a
	__ctalk_arg_cleanup call to the output (method.c).
	- Added a check for C variables to collection_rt_expr
	(collection.c).
2020-10-06
	- Added prefix_method_attr_arg in eval_arg.c, which is a
	mod of prefix_method_attr that doesn't use stack frames to
	determine the first token in an expression (eval_arg.c).
	- Added another call to register_c_var in eval_arg,
	and it sets the TOK_CVAR_REGISTRY_IS_OUTPUT on the
	token (eval_arg.c).  This is checked by stdarg_fmt_arg_expr
	(arg.c).
2020-10-08
	- Added a param in method_args to return the stack index of
	the expression's end. Also added a clause to handle arg_obj_tok
	class arguments in expressions which are printf arguments
	in method_call (method.c).  And, set arg_class to arg_null
	at the start of method_call, and the arglist end stack index
	to default to the method's stack index, in case method_args
	doesn't get called.
2020-10-09
	- Added the TOK_IS_TMP_FN_RESULT message attribute (message.h),
	and updated output_mixed_c_to_obj_arg_block to set the message's
	token type on the temporary CVARS's token to LABEL and its
	attribute to TOK_IS_TMP_FN_RESULT (ctoobj.c).
	- Updated output_mixed_c_to_obj_arg_block to not output
	a __ctalk_arg call if the expression is a printf statement
	(arg.c).
2020-10-10
	- Updated stdarg_fmt_arg_expr (arg.c) to handle subscripted
	C variables used as receivers.
	- Added stdarg_arg parameter to method args, and use that
	instead of any function that checks whether the expression
	is a printf format argument (method.c, eval_arg.c, ifexpr.c).
2020-10-11
	- Code cleanup in __tempname (tempname.c).
2020-10-12
	- Updated include/x11defs.h to check for the WITHOUT_X11
	#define.
	- Updates to Magnitude : asFloat.
2020-10-13
	- Replaced popen in preprocess with fork/execl (main.c).
	- Updated the TRUE and FALSE #defines in ctalkdefs.h.
2020-10-14
	- Replaced the popen call in preprocess with fork andexecv
	and added the ctpp_args function to create the char**
	argument vector to run ctpp (main.c).
2020-10-15
	- Replaced the popen call in preprocess_template with
	fork and execl calls (fn_tmpl.c).
	- Fixed typos in __edittext_get_primary_selection (edittext.c),
	and __ctalkXftInitLib (xftlib.c).
2020-10-16
	- Added a check for the FcPatternFormat function, in the
	Fontconfig library, to configure.
	- Added obj_fmt_arg_trans (objtoc.c), called by method_call.
2020-10-17
	- Added #ifdefs for __x86_64 in terminal_printf_arg (rexpr.c).
	2020-10-18
	- Added the arg_compound_method ARG_CLASS (object.h), and
	added handlers in eval_arg and method_call.
2020-10-18
	- In message_class, set a token's type to METHODMSGLABEL
	from label if the message_class is instance_method_message,
	and use this to check for a <METHODMSGLABEL> <METHODMSGLABEL>
	sequence when checking the next token if it's a LABEL(complexmethd.c).
	- Added a check for a pending class label in eval_arg before
	warning about an undefined label (eval_arg.c).
2020-10-19
	- Added arg_compound_method_rcvr and arg_compound_method_fmt_arg
	(complexmthd.c), to handle expressions that contain
	<METHODMSGLABEL> <METHODMSGLABEL> tokens, called by method_call.
	- In method_args, check for a subscripted argument, and use
	that to determine, when used with the stdarg_arg parameter,
	whether to insert a CVAR registration, or just let
	method_call make a __ctalkEvalExpr call and register the
	CVARs there (method.c).
2020-10-20
	- Added a statement to eval_arg to set a
	TOK_CVAR_REGISTRY_IS_OUTPUT attribute on the message on the
	main stack with the C variable's token (eval_arg.c).
	- Added the _Float128 C data type to c_data_types table
	(keyword.c).
	- Added a class library lookup "miss" list so
	get_class_library_definition doesn't try to parse miscellaneous
	files in class library directories repeatedly (rtclslib.c).
2020-10-23
	- Updated obj_ref_str to handle 12-digit numbers (rtobjref.c).
	- Added a check in eval_subexpr for an expression that is
	like (*f), and just set the expression to the reffed value
	if the label has been evaled (rt_expr.c).
2020-10-24
	- Added a call to __ctalkRegisterUserObject to Array : atPut.
2020-10-25
	- Added a call to __ctalkRegisterUserObject to save reference
	targets in cvar_object (rt_cvar.c).
	- Increased MAX_USER_OBJECT_RESOURCES to 20480 (object.h).
2020-10-26
	- Added a check in obj_ref_str that works with addresses that
	have byte alignment changes (rtobjref.c).
	- In __ctalkDeleteObjectInternal, check that a reffed object
	is not a class object before deleting it (rtnewobj.c).
2020-10-27
	- Added obj_ref_str_2 (rtnewobj.c). Updated obj_ref_str
	calls to obj_ref_str_2 in __ctalkDeleteObjectInternal,
	CVAR_receiver_return and CVAR_ref_return (rt_return.c).
2020-10-28
	- Updated obj_ref_str to obj_ref_str_2 calls in
	find_method_after_close_paren_a (ismethd.c),
	__ctalk_arg_expr (rt_args.c), object_from_CVAR and
	__cvarGetTemplateCallerCVAR (rt_cvar.c); __restore_rt_info
	(rtinfo.c), reffed_ref_is_circular_a (rt_obj.c),
	__ctalkAddInstanceVariable (rtobjvar.c),
	__ctalkRegisterCharPtrReturn, CVAR_receiver_return,
	and CVAR_ref_return (rt_cvar.c); and
	cvar_alias_created_here (rttmpobj.c).
