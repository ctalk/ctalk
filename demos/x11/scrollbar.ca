/* $Id: scrollbar.ca,v 1.1.1.1 2021/04/03 11:26:01 rkiesling Exp $  -*-C-*- */

int main (int argv, char **argc) {
  Integer new xWindowSize;
  Integer new yWindowSize;
  X11Pane new xPane;
  X11PaneDispatcher new xTopLevelPane;
  X11ScrollBarPane new xScrollBarPane;
  X11CanvasPane new xCanvasPane;
  InputEvent new e;
  Exception new ex;
  Application new scrollDemo;
  String new pctstr;
  Integer new strWidth;

  scrollDemo enableExceptionTrace;
  scrollDemo installExitHandlerBasic;
  scrollDemo installAbortHandlerBasic;

  xWindowSize = 400;
  yWindowSize = 400;

  xPane ftFontVar initFontLib;
  xCanvasPane ftFontVar selectFontFromFontConfig "sans serif-48";
  xCanvasPane ftFontVar saveSelectedFont;
  

  xPane initialize xWindowSize, yWindowSize;
  xPane inputStream eventMask = WINDELETE|EXPOSE|BUTTONPRESS|BUTTONRELEASE|MOTIONNOTIFY|RESIZENOTIFY|ENTERWINDOWNOTIFY|LEAVEWINDOWNOTIFY;
  xTopLevelPane attachTo xPane;
  xScrollBarPane attachTo xTopLevelPane, "20x100%+0+0";
  xCanvasPane attachTo xTopLevelPane, "380x100%+20+0";

  xPane map;
  xPane raiseWindow;

  xPane openEventStream;

  xScrollBarPane background "lightblue";
  xScrollBarPane refresh;
  
  xCanvasPane ftFontVar selectFontFromFontConfig "sans serif-48";
  xCanvasPane ftFontVar namedX11Color "white";
  xCanvasPane selectFont;
  xCanvasPane background "navy";
  xCanvasPane foreground "navy";
  xCanvasPane clear;
  pctstr printOn "%0.2f%%", xScrollBarPane percent * 100.0;
  strWidth = xCanvasPane ftFontVar textWidthBasic xCanvasPane displayPtr,
  	   xCanvasPane xWindowID, xCanvasPane xGC, pctstr;
  xCanvasPane putStrXY (380 / 2) - (strWidth / 2), (400 / 2), pctstr;
  xCanvasPane refresh;

  while (TRUE) {

    xPane inputStream queueInput;
    if (xPane inputStream eventPending) {
      e become xPane inputStream inputQueue unshift;

      if (ex pending)
  	ex handle;

      xPane subPaneNotify e;

      switch (e eventClass value)
 	{
	case EXPOSE:
	  xCanvasPane clear;
	  pctstr printOn "%0.2f%%", xScrollBarPane percent * 100.0;
	  strWidth = xCanvasPane ftFontVar textWidthBasic xCanvasPane displayPtr,
	    xCanvasPane xWindowID, xCanvasPane xGC, pctstr;
	  xCanvasPane putStrXY (380 / 2) - (strWidth / 2), (400 / 2), pctstr;
	  xCanvasPane refresh;
#if 0
	  xCanvasPane paneBuffer clear;
	  pctstr printOn "%0.2f%%", xScrollBarPane percent * 100;
	  strWidth = xCanvasPane ftFontVar textWidthBasic xPane displayPtr,
	    xPane xWindowID, xPane xGC, pctstr;
	  xCanvasPane putStrXY (380 / 2) - (strWidth / 2), (400 / 2), pctstr;
	  xCanvasPane refresh;
#endif	  
	  break;
 	case WINDELETE:
  	  xPane deleteAndClose;
 	  exit (0);
 	  break;
  	default:
	  xCanvasPane clear;
	  pctstr printOn "%0.2f%%", xScrollBarPane percent * 100.0;
	  strWidth = xCanvasPane ftFontVar textWidthBasic xCanvasPane displayPtr,
	    xCanvasPane xWindowID, xCanvasPane xGC, pctstr;
	  xCanvasPane putStrXY (380 / 2) - (strWidth / 2), (400 / 2), pctstr;
	  xCanvasPane refresh;
#if 0
	  xCanvasPane paneBuffer clear;
	  pctstr printOn "%0.2f%%", xScrollBarPane percent * 100;
	  strWidth = xCanvasPane ftFontVar textWidthBasic
	    xCanvasPane displayPtr,
  	     xCanvasPane xWindowID, xPane xGC, pctstr;
	  xCanvasPane putStrXY (380 / 2) - (strWidth / 2), (400 / 2), pctstr;
	  xCanvasPane refresh;
#endif	  
  	  break;
 	}
    }
  }
}

